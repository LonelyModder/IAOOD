## cs_ denotes country scope, default is character scope
## cs_ denotes country scope, default is character scope

remove_all_positions = {
	if = {
		limit = {	
			is_governor = yes
		}
		remove_as_governor = yes
	}
	
	if = {
		limit = {	
			has_any_office = yes
		}
		remove_all_offices = yes
	}
	
	if = {
		limit = {	
			has_tech_office = yes
		}
		remove_as_researcher = yes
	}
	
	if = {
		limit = {	
			in_command = yes
		}
		remove_command = yes
	}

	if = {
		limit = {	
			has_legion_trigger = yes
		}
		legion = { remove_commander = PREV }
	}
}


taken_bribe_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = taken_bribe
			}
		}
		set_variable = {
			name = taken_bribe
			value = 1
		}
	}
	else = {
		change_variable = {
			name = taken_bribe
			add = 1
		}
	}

}

taken_bribe_effect_big = {
	if = {
		limit = {
			NOT = {
				has_variable = taken_bribe
			}
		}
		set_variable = {
			name = taken_bribe
			value = 4
		}
	}
	else = {
		change_variable = {
			name = taken_bribe
			add = 4
		}
	}

}

move_character_effect = { #Displays different tooltip if character is a governor and will take his province with him
	if = {
		limit = {
			this = {
				is_governor = yes
			}
		}
		custom_tooltip = governor_defection_tooltip
		hidden_effect = {
			move_country = root
		}
	}
	else = {
		move_country = root
	}
}

add_commander_ambition_effect = {
	custom_tooltip = "commander_becomes_ambitious"
	if = {
		limit = {
			NOT = {
				has_variable = commander_ambition
			}
		}
		set_variable = {
			name = commander_ambition
			value = 1
		}
	}
	else = {
		change_variable = {
			name = commander_ambition
			add = 1
		}
	}
}

subtract_commander_ambition_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = commander_ambition
			}
		}
		set_variable = {
			name = commander_ambition
			value = 0
		}
	}
	else = {
		change_variable = {
			name = commander_ambition
			add = -1
		}
	}
}

reset_commander_ambition_effect = {
	set_variable = {
		name = commander_ambition
		value = 0
	}
}

add_stability_effect = {
	if = {
		limit = {
			stability >= 90
		}
		add_political_influence = influence_medium
	}
	else_if = {
		limit = {
			is_ai = yes
		}
		add_stability = 8
	}
	else = {
		add_stability = 6
	}
}

add_medium_stability_effect = {
	if = {
		limit = {
			stability >= 75
			stability < 85
		}
		add_political_influence = influence_small
	}
	else_if = {
		limit = {
			stability >= 85
		}
		add_political_influence = influence_medium
	}
	else_if = {
		limit = {
			is_ai = yes
		}
		add_stability = 10
	}
	else = {
		add_stability = 8
	}
}

add_greater_stability_effect = {
	if = {
		limit = {
			stability >= 70
			stability < 80
		}
		add_political_influence = influence_medium
	}
	else_if = {
		limit = {
			stability >= 80
		}
		add_political_influence = influence_large
	}
	else_if = {
		limit = {
			is_ai = yes
		}
		add_stability = 12
	}
	else = {
		add_stability = 10
	}
}

remove_stability_effect = {
	if = {
		limit = {
			stability < 5
		}
		add_political_influence = subtract_influence_medium
	}
	else_if = {
		limit = {
			is_ai = yes
		}
		add_stability = -4
	}
	else = {
		add_stability = -5
	}
}

capital_formable_tribal_effect = {
	custom_tooltip = "capital_formable_tribal_effect_tooltip"
	hidden_effect = {
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
}

capital_formable_tribal_large_effect = {
	custom_tooltip = "capital_formable_tribal_large_effect_tooltip"
	hidden_effect = {
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
}

capital_formable_small_effect = {
	custom_tooltip = "capital_formable_small_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
	}
}

capital_formable_medium_effect = { #province scope
	custom_tooltip = "capital_formable_medium_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
	}
}

capital_formable_large_effect = { #province scope
	custom_tooltip = "capital_formable_large_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

capital_formable_huge_effect = { #province scope
	custom_tooltip = "capital_formable_huge_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

province_pop_disaster_minor = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.1
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_pop_disaster_medium = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.15
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_pop_disaster_major = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.3
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_pop_disaster_historical = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.7
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_volcano_affected_effect = {
	province_volcano_affected_tooltip_effect = yes
	if = {
		limit = {
			is_capital = yes
		}
		hidden_effect = {
			province_pop_disaster_medium = yes
		}
	}
	else = {
		hidden_effect = {
			province_pop_disaster_major = yes
		}
	}
	if = {
		limit = {
			NOR = { 
				has_province_modifier = province_diminishment_destroyed_volcano 
				has_province_modifier = province_diminishment_ravaged_volcano
			}
		}
		add_permanent_province_modifier = {
			name = province_diminishment_ravaged_volcano
			duration = 3650
		}
	}
}

province_volcano_affect_scopes_effect = {
	if = {
		limit = {
			NOT = { exists = scope:first_volcano_province }
		}
		save_scope_as = first_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:second_volcano_province }
		}
		save_scope_as = second_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:third_volcano_province }
		}
		save_scope_as = third_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:fourth_volcano_province }
		}
		save_scope_as = fourth_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:fifth_volcano_province }
		}
		save_scope_as = fifth_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:sixth_volcano_province } 
		}
		save_scope_as = sixth_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:seventh_volcano_province }
		}
		save_scope_as = seventh_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:eight_volcano_province }
		}
		save_scope_as = eight_volcano_province
	}
}

province_volcano_affected_tooltip_effect = {
	if = {
		limit = {
			exists = scope:first_volcano_province
			this = scope:first_volcano_province
		}
		custom_tooltip = volcano_first_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:second_volcano_province
			this = scope:second_volcano_province
		}
		custom_tooltip = volcano_second_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:third_volcano_province
			this = scope:third_volcano_province
		}
		custom_tooltip = volcano_third_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:fourth_volcano_province
			this = scope:fourth_volcano_province
		}
		custom_tooltip = volcano_fourth_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:fifth_volcano_province
			this = scope:fifth_volcano_province
		}
		custom_tooltip = volcano_fifth_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:sixth_volcano_province
			this = scope:sixth_volcano_province
		}
		custom_tooltip = volcano_sixth_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:seventh_volcano_province
			this = scope:seventh_volcano_province
		}
		custom_tooltip = volcano_seventh_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:eight_volcano_province
			this = scope:eight_volcano_province
		}
		custom_tooltip = volcano_eight_affected_province.tt
	}
}

char_banishment_effect = {
	remove_all_positions = yes
	employer = {
		if = {
			limit = {
				any_neighbour_country = {
					always = yes
				}
			}
			random_neighbour_country = {
				save_scope_as = banishment_country
			}
		}
		else = {
			random_country = {
				save_scope_as = banishment_country
			}
		}
	}
	banish = scope:banishment_country
}

merciful_ruler_effect = {
	owner = {
		if = {
			limit = {
				is_monarchy = yes
				exists = current_ruler
			}
			add_legitimacy = legitimacy_large
		}
		current_ruler = {
			add_popularity = popularity_large
		}
		scope:special_province = {
			add_province_modifier = {
				name = province_improvement_merciful_conqueror
				duration = 3650
			}
		}
	}
}

neutral_conqueror_effect = {
	owner = {
		add_treasury = {
			value = has_monthly_income
			multiply = 6
		}
		current_ruler = {
			add_prominence = prominence_medium
			add_popularity = subtract_popularity_small
		}
		scope:special_province = {
			if = {
				limit = {
					has_province_modifier = province_diminishment_medium_looted
				}
				hidden_effect = {
					remove_province_modifier = province_diminishment_medium_looted
				}
			}
			add_province_modifier = {
				name = province_diminishment_medium_looted
				duration = 3650
			}
			custom_tooltip = neutral_conqueror_effect_tooltip
			hidden_effect = {
				ordered_pops_in_province = {
					order_by = pop_hapiness
					max = {
						value = total_population
						divide = 8
					}
					min = {
						value = 0
					}
					kill_pop = yes
				}
			}
			set_variable = {
				name = sacked_province
				days = 3650
			}
		}
	}
}

sacking_conqueror_effect = {
	owner = {
		add_treasury = {
			value = has_monthly_income
			multiply = 16
		}
		current_ruler = {
			add_prominence = prominence_large
			add_popularity = subtract_popularity_medium
			add_corruption = corruption_medium
		}
		scope:special_province = {
			reduce_province_rank_effect = yes
			if = {
				limit = {
					OR = {
						has_province_modifier = province_diminishment_medium_looted
						has_province_modifier = province_diminishment_super_looted
					}
				}
				hidden_effect = {
					remove_province_modifier = province_diminishment_medium_looted
					remove_province_modifier = province_diminishment_super_looted
				}
			}
			add_province_modifier = {
				name = province_diminishment_super_looted
				duration = 7300
			}
			custom_tooltip = sacking_conqueror_effect_tooltip
			hidden_effect = {
				ordered_pops_in_province = {
					order_by = pop_hapiness
					max = {
						value = total_population
						divide = 3
					}
					min = {
						value = 0
					}
					kill_pop = yes
				}
			}
			set_variable = {
				name = sacked_province
				days = 10950
			}
		}
	}
}

salt_earth_effect = {
	owner = {
		add_treasury = {
			value = has_monthly_income
			multiply = 20
		}
		current_ruler = {
			add_prominence = prominence_large
			add_popularity = subtract_popularity_huge
			add_corruption = corruption_large
		}
		scope:special_province = {
			reduce_province_rank_effect = yes
			if = {
				limit = {
					OR = {
						has_province_modifier = province_diminishment_medium_looted
						has_province_modifier = province_diminishment_super_looted
					}
				}
				hidden_effect = {
					remove_province_modifier = province_diminishment_medium_looted
					remove_province_modifier = province_diminishment_super_looted
				}
			}
			add_province_modifier = {
				name = rm_4_salted_pmod
				duration = 7300
			}
			custom_tooltip = salt_earth_effect_tooltip
			hidden_effect = {
				ordered_pops_in_province = {
					order_by = pop_hapiness
					max = {
						value = total_population
						divide = 2
					}
					min = {
						value = 0
					}
					kill_pop = yes
				}
			}
			set_variable = {
				name = sacked_province
				days = 10950
			}
		}
	}
}


dhe_judea_conversion_province_forced_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 4
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}

dhe_judea_conversion_province_tolerated_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 6
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}

dhe_judea_conversion_not_jew_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 6
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}

dhe_judea_conversion_not_jew_all_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}


dhe_judea_conversion_jew_se = {
	ordered_pops_in_province = {
		limit = {
			NOT = {
				pop_religion = judaism
			}
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 6
		}
		check_range_bounds = no
		set_pop_religion = judaism
	}
}

dhe_judea_province_non_jews_attacked_se = {
	ordered_pops_in_province = {
		limit = {
			NOT = {
				pop_religion = judaism
			}
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 20
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

dhe_judea_looting_retaliation_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 20
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

country_overlord_vassal_character_effect = {
	if = {
		limit = {
			NOT = {
				any_character = {
					is_ruler = no
					has_any_office = yes
					has_variable = overlord_vassal
				}
			}
		}
		random_character = {
			limit = {
				has_any_office = yes
				is_ruler = no
				NOT = { has_variable = overlord_vassal }
			}
			save_scope_as = overlord_vassal
			set_variable = {
				name = overlord_vassal
			}
		}
	}
	else = {
		random_character = {
			limit = {
				has_any_office = yes
				is_ruler = no
				has_variable = overlord_vassal
			}
			save_scope_as = overlord_vassal 
			set_variable = {
				name = overlord_vassal
			}
		}
	}
}

character_remove_a_bad_leader_trait_effect = {
	if = {
		limit = {
			has_trait = tactically_inflexible
		}
		remove_trait = tactically_inflexible
	}
	else_if = {
		limit = {
			has_trait = arbitrary
		}
		remove_Trait = arbitrary
	}
	else_if = {
		limit = {
			has_trait = cruel
		}
		remove_trait = cruel
	}
	else_if = {
		limit = {
			has_trait = corrupt
		}
		remove_trait = corrupt
	}
	else_if = {
		limit = {
			has_trait = selfish
		}
		remove_trait = selfish
	}
	else_if = {
		limit = {
			has_trait = deceitful
		}
		remove_trait = deceitful
	}
	else_if = {
		limit = {
			has_trait = lazy
		}
		remove_trait = lazy
	}
	else_if = {
		limit = {
			has_trait = foolish
		}
		remove_trait = foolish
	}
	else_if = {
		limit = {
			has_trait = miserly
		}
		remove_trait = miserly
	}
}

set_friend_progress_small_effect = {
	custom_tooltip = friend_progress_small
	if = {
		limit = {
			NOT = {
				has_variable = friend_progress
			}
		}
		set_variable = {
			name = friend_progress
			value = 1
		}
	}
	else = {
		change_variable = {
			name = friend_progress
			add = 1
		}
	}
}

set_friend_progress_moderate_effect = {
	custom_tooltip = friend_progress_moderate
	if = {
		limit = {
			NOT = {
				has_variable = friend_progress
			}
		}
		set_variable = {
			name = friend_progress
			value = 2
		}
	}
	else = {
		change_variable = {
			name = friend_progress
			add = 2
		}
	}
}

set_friend_progress_large_effect = {
	custom_tooltip = friend_progress_large
	if = {
		limit = {
			NOT = {
				has_variable = friend_progress
			}
		}
		set_variable = {
			name = friend_progress
			value = 3
		}
	}
	else = {
		change_variable = {
			name = friend_progress
			add = 3
		}
	}
}

remove_friend_variables = {
	if = {
		limit = {
			has_variable = friend_progress
		}
		remove_variable = friend_progress
	}
	if = {
		limit = {
			has_variable = befriend_toggle_1
		}
		remove_variable = befriend_toggle_1
	}
	if = {
		limit = {
			has_variable = befriend_toggle_2
		}
		remove_variable = befriend_toggle_2
	}
	if = {
		limit = {
			has_variable = befriend_toggle_3
		}
		remove_variable = befriend_toggle_3
	}
	if = {
		limit = {
			has_variable = befriend_toggle_4
		}
		remove_variable = befriend_toggle_4
	}
	if = {
		limit = {
			has_variable = befriend_toggle_5
		}
		remove_variable = befriend_toggle_5
	}
	if = {
		limit = {
			has_variable = befriend_toggle_6
		}
		remove_variable = befriend_toggle_6
	}
	if = {
		limit = {
			has_variable = currently_befriending
			exists = var:currently_befriending
		}
		var:currently_befriending = {
			remove_variable = being_befriended
		}
	}
	if = {
		limit = {
			has_variable = currently_befriending
		}
		remove_variable = currently_befriending
	}
	if = {
		limit = {
			has_variable = friend_event_counter
		}
		remove_variable = friend_event_counter
	}
}

fire_next_friend_event_effect = {
	if = {
		limit = {
			has_variable = friend_progress
			var:friend_progress >= 6
		}
		trigger_event = {
			on_action = befriend_resolution
			days = { 15 60 }
		}
	}
	else_if = {
		limit = {
			has_variable = friend_event_counter
			var:friend_event_counter >= 3
		}
		trigger_event = {
			on_action = befriend_fail
			days = { 15 60 }
		}
	}
	else = {
		trigger_event = {
			on_action = befriend_pulse
			days = { 15 60 }
		}
	}
}

befriend_event_counter_variable_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = friend_event_counter
			}
		}
		set_variable = {
			name = friend_event_counter
			value = 1
		}
	}
	else = {
		change_variable = {
			name = friend_event_counter
			add = 1
		}
	}
}

pass_down_traits_effect = {
	scope:newborn = {
		if = {
			limit = {
				exists = father
				OR = {
					father = {
						has_trait = alcimachid
						has_trait = antigonids
						has_trait = antipatrid
						has_trait = lagids
						has_trait = seleucids
						has_trait = argeads
					}
				}
			}
			if = {
				limit = {
					father = {
						has_trait = alcimachid
					}
					NOT = {
						has_trait = alcimachid
					}
				}
				add_trait = alcimachid
			}
			else_if = {
				limit = {
					father = {
						has_trait = antigonids
					}
					NOT = {
						has_trait = antigonids
					}
				}
				add_trait = antigonids
			}
			else_if = {
				limit = {
					father = {
						has_trait = antipatrid
					}
					NOT = {
						has_trait = antipatrid
					}
				}
				add_trait = antipatrid
			}
			else_if = {
				limit = {
					father = {
						has_trait = lagids
					}
					NOT = {
						has_trait = lagids
					}
				}
				add_trait = lagids
			}
			else_if = {
				limit = {
					father = {
						has_trait = seleucids
					}
					NOT = {
						has_trait = seleucids
					}
				}
				add_trait = seleucids
			}
			if = {
				limit = {
					father = {
						has_trait = argeads
					}
					NOT = {
						has_trait = argeads
					}
				}
				add_trait = argeads
			}
		}
		if = {
			limit = {
				exists = mother
				mother = {
					has_trait = argeads
				}
				NOT = {
					has_trait = argeads
				}
			}
			add_trait = argeads
			
		}
	}
}

positive_religious_caste_effect = {
	if = {
		limit = {
			is_monarchy = yes
			NOT = { has_law = religious_integration_efforts }
		}
		change_law = religious_integration_efforts
	}
	else_if = {
		limit = {
			is_tribal = yes
			NOT = { has_law = adopt_human_sacrifice_law_tribal }
		}
		change_law = adopt_human_sacrifice_law_tribal
	}
	else_if = {
		limit = {
			is_republic = yes
			NOT = { tag = ROM }
			NOT = { has_law = republican_religious_2 }
		}
		change_law = republican_religious_2
	}
	else_if = {
		limit = {
			is_republic = yes
			tag = ROM
			NOT = { has_law = grant_religious_freedoms }
		}
		change_law = grant_religious_freedoms
	}
}

rival_brothers_scope_effect = {		
	ordered_successor = {
		limit = {
			is_child_of = root.current_ruler
			from_ruler_family = yes
			prisoner = no
			is_female = no
			age >= 18
			age <= 30
			has_any_illness_trigger = no
			employer = root
			save_temporary_scope_as = rival_brother_1_temp_e
			OR = {
				AND = {
					can_get_rivals = yes
					any_sibling = {
						is_successor = yes
						is_child_of = root.current_ruler
						from_ruler_family = yes
						prisoner = no
						is_female = no
						age >= 18
						age <= 30
						can_get_rivals = yes # Is not rival and could be
						has_any_illness_trigger = no
						employer = root
						NOT = { is_rival = scope:rival_brother_1_temp_e }
					}
				}
				AND = {
					num_of_rivals >= 1
					any_rival = {
						is_successor = yes
						is_sibling_of = scope:rival_brother_1_temp_e
						is_child_of = root.current_ruler
						from_ruler_family = yes
						prisoner = no
						is_female = no
						age >= 18
						age <= 30
						has_any_illness_trigger = no
						employer = root
					}
				}
			}
		}
		order_by = age
		save_scope_as = rival_brother_1
		random_sibling = { # Save second brother
			limit = {
				is_child_of = root.current_ruler
				from_ruler_family = yes
				prisoner = no
				is_female = no
				age >= 18
				age <= 30
				OR = {
					AND = { 
						can_get_rivals = yes
						NOT = { is_rival = scope:rival_brother_1 }
					}
					AND = {
						num_of_rivals >= 1
						is_rival = scope:rival_brother_1
					}
				}
				has_any_illness_trigger = no
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = rival_brother_2
		}
	}
}

rival_brothers_duel_effect = {
	hidden_effect = {
		random_list = { # Pick Winner
			5 = {
				modifier = {
					factor = 2
					scope:rival_brother_1 = { martial > 4 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { martial > 6 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { martial > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = brave }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = confident }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = energetic }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = reckless }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_victor
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_loser
				}
			}
			5 = {
				modifier = {
					factor = 2
					scope:rival_brother_2 = { martial > 4 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { martial > 6 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { martial > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = brave }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = confident }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = energetic }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = reckless }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_loser
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_victor
				}
			}
		}
		random_list = { # Pick Result
			6 = {
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = merciful }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = pious }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = loving }
				}
				set_variable = {
					name = rival_brothers_wound
					value = 0
				}
			}
			2 = {
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = vengeful }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = cruel }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = ambitious }
				}
				set_variable = rival_brothers_death
			}
		}
	}
}

rival_brothers_assassination_effect = {
	hidden_effect = {
		random_list = { # Pick Assassin
			5 = {
				modifier = {
					factor = 3
					scope:rival_brother_1 = { finesse > 4 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_1 = { finesse > 6 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_1 = { finesse > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = crafty }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = corrupt }
				}		
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = harsh }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = deceitful }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = shrewd }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = ambitious }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = coward }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = jealous }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = arbitrary }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = uncaring }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_victor
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_loser
				}
			}
			5 = {
				modifier = {
					factor = 3
					scope:rival_brother_2 = { finesse > 4 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_2 = { finesse > 6 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_2 = { finesse > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = crafty }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = corrupt }
				}		
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = harsh }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = deceitful }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = shrewd }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = ambitious }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = coward }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = jealous }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = arbitrary }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = uncaring }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_loser
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_victor
				}
			}
		}
		random_list = { # Pick Result
			6 = {
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { finesse <= 5 }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = rash }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = weak_willed }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = coward }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = obsessive }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = arrogant }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = foolish }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = reckless }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = proud }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = incapable }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = dumb }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = lazy }
				}
				random = { 
					chance = 70 
					set_variable = {
						name = rival_brothers_wound
						value = 0
					}
				}
			}
			2 = {
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { finesse >= 6 }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = vengeful }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = cautious }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = ambitious }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = deceitful }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = intelligent }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = silver_tongued }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = sceptical }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = polymath }
				}
				modifier = {
					factor = 2
					scope:rival_brothers_victor = { has_trait = stubborn }
				}
				set_variable = rival_brothers_death
			}
		}
	}
}

rival_brothers_duel_outcome_effect = {
	if = { # Wound
		limit = { 
			has_variable = rival_brothers_wound
			scope:rival_brothers_loser = { is_alive = yes }
		}
		random_list = {
			40 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = wounded }
					}
				} 
				change_variable = {
					name = rival_brothers_wound
					add = 1
				}
			}
			20 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = maimed }
					}
				}
				change_variable = {
					name = rival_brothers_wound
					add = 2
				}
			}
			10 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = blind }
					}
				}
				change_variable = {
					name = rival_brothers_wound
					add = 3
				}
			}
			20 = {
				trigger = {
					scope:rival_brothers_loser = {
						has_trait = maimed
						has_trait = wounded
					}
				}
				change_variable = {
					name = rival_brothers_wound
					add = 4
				}
			}
		}
		if = {
			limit = { var:rival_brothers_wound = 1 }
			scope:rival_brothers_loser = { add_trait = wounded }
		}
		else_if = {
			limit = { var:rival_brothers_wound = 2 }
			scope:rival_brothers_loser = { add_trait = maimed }
		}
		else_if = {
			limit = { var:rival_brothers_wound = 3 }
			scope:rival_brothers_loser = {
				if = {
					limit = { has_trait = one_eyed }
					hidden_effect = { remove_trait = one_eyed }
					add_trait = blind
				}
				else = { add_trait = one_eyed }
			}
		}
		else_if = {
			limit = { var:rival_brothers_wound = 4 }
			scope:rival_brothers_loser = { add_health = -25 }
		}
	}
	else_if = { # If succeed and kill
		limit = { 
			has_variable = rival_brothers_death
			scope:rival_brothers_loser = { is_alive = yes }
		}
		scope:rival_brothers_loser = {
			death = {
				death_reason = death_stabbing
				killer = scope:rival_brothers_victor
			}
		}
		if = {
			limit = {
				scope:rival_brothers_victor = { is_alive = yes }
			}
			if = {
				limit = {
					scope:rival_brothers_victor = {
						number_of_personality_traits < max_number_of_traits_svalue
						NOT = { has_trait = cruel }
					}
				}
				scope:rival_brothers_victor = { add_trait = cruel }
			}
			else = {
				scope:rival_brothers_victor = { add_popularity = subtract_popularity_medium }
			}
		}
	}
}

set_assassinate_malus_effect = {
	custom_tooltip = plot_becomes_more_unlikely
	if = {
		limit = {
			NOT = {
				has_local_variable = assassinate_malus
			}
		}
		set_local_variable = {
			name = assassinate_malus
			value = -25
		}
	}
	else = {
		change_local_variable = {
			name = assassinate_malus
			add = -25
		}
	}
}

appropriate_death_effect_assassination = {
	if = {
		limit = {
			local_var:death_method = 1
		}
		death = {
			death_reason = death_poisoning
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 2
		}
		death = {
			death_reason = death_stabbing
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 3
		}
		death = {
			death_reason = death_flayed_alive
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 4
		}
		death = {
			death_reason = death_impaled_on_battering_ram
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 5
		}
		death = {
			death_reason = death_crucified
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 6
		}
		death = {
			death_reason = death_garroted
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 7
		}
		death = {
			death_reason = death_bathing_accident
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 8
		}
		death = {
			death_reason = death_battering
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 9
		}
		death = {
			death_reason = death_assassinated
		}
	}
	else = {
		death = {
			death_reason = death_assassinated
		}
	}
}

bastard_major_bloodline_effect = {
	if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = alcimachid
			}
		}
		add_trait = alcimachid
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = antigonids
			}
		}
		add_trait = antigonids
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = antipatrid
			}
		}
		add_trait = antipatrid
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = argeads
			}
		}
		add_trait = argeads
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = lagids
			}
		}
		add_trait = lagids
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = seleucids
			}
		}
		add_trait = seleucids
	}
}

remove_bastard_major_bloodline_effect = {
	if = {
		limit = { has_trait = alcimachid }
		add_trait = alcimachid
	}
	else_if = {
		limit = { has_trait = antigonids }
		add_trait = antigonids
	}
	else_if = {
		limit = { has_trait = antipatrid }
		add_trait = antipatrid
	}
	else_if = {
		limit = { has_trait = argeads }
		add_trait = argeads
	}
	else_if = {
		limit = { has_trait = lagids }
		add_trait = lagids
	}
	else_if = {
		limit = { has_trait = seleucids }
		add_trait = seleucids
	}
}

dip_friends_rivals_23_tooltips = {
	if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_destabilise
			}
			is_subject = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at1
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_destabilise
			}
			is_overlord = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at2
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_incite
			}
			is_subject = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at3
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_incite
			}
			is_overlord = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at4
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_dissent
			}
			is_subject = yes
		}
		custom_tooltip = dip_friends_rivals.23.at5
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_dissent
			}
			is_overlord = yes
		}
		custom_tooltip = dip_friends_rivals.23.at6
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_friend
			}
			is_subject = yes
		}
		custom_tooltip = dip_friends_rivals.23.at7
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_friend
			}
			is_overlord = yes
		}
		custom_tooltip = dip_friends_rivals.23.at8
	}
}

dip_friends_rivals_11_effect = {
	scope:rival_ruler_country_scope = {
		trigger_event = { id = dip_friends_rivals.23 }
	}
	scope:rival_subject_country_scope = {
		trigger_event = { id = dip_friends_rivals.23 }
	}
}

formable_capital_modifier_tribal_effect = {
	if = {
		limit = {
			NOT = {
				has_province_modifier = formable_capital_tribal_modifier
			}
		}
		add_province_modifier = {
			name = formable_capital_tribal_modifier
			duration = -1
		}
	}
}

formable_capital_modifier_normal_effect = {
	if = {
		limit = {
			has_province_modifier = formable_capital_tribal_modifier
		}
		remove_province_modifier = formable_capital_tribal_modifier
	}
	if = {
		limit = {
			NOT = {
				has_province_modifier = formable_capital_modifier
			}
		}
		add_province_modifier = {
			name = formable_capital_modifier
			duration = -1
		}
	}
}

formable_capital_modifier_large_effect = {
	if = {
		limit = {
			has_province_modifier = formable_capital_tribal_modifier
		}
		remove_province_modifier = formable_capital_tribal_modifier
	}
	if = {
		limit = {
			has_province_modifier = formable_capital_modifier
		}
		remove_province_modifier = formable_capital_modifier
	}
	if = {
		limit = {
			NOT = {
				has_province_modifier = formable_capital_huge_modifier
			}
		}
		add_province_modifier = {
			name = formable_capital_huge_modifier
			duration = -1
		}
	}
}

create_2_citizens_effect = {
	if = {
		limit = {
			owner = {	
				is_tribal = yes
			}
		}
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
	else = {
		create_state_pop = citizen
		create_state_pop = citizen
	}
}

create_deity_citizens_effect = {
	if = {
		limit = {
			scope:deified_ruler = { finesse > 8 }
		}
		create_2_citizens_effect = yes
		create_2_citizens_effect = yes
	}
	else_if = {
		limit = {
			scope:deified_ruler = { finesse > 5 }
		}
		create_2_citizens_effect = yes
	}
	else = {
		create_state_pop = citizen
	}
}

create_deity_freemen_effect = {
	if = {
		limit = {
			scope:deified_ruler = { finesse > 8 }
		}
		create_2_freemen_effect = yes
		create_2_freemen_effect = yes
	}
	else_if = {
		limit = {
			scope:deified_ruler = { finesse > 5 }
		}
		create_2_freemen_effect = yes
	}
	else = {
		create_state_pop = freemen
	}
}

create_deity_slaves_effect = {
	if = {
		limit = {
			scope:deified_ruler = { finesse > 8 }
		}
		create_2_slaves_effect = yes
		create_2_slaves_effect = yes
	}
	else_if = {
		limit = {
			scope:deified_ruler = { finesse > 5 }
		}
		create_2_slaves_effect = yes
	}
	else = {
		create_state_pop = slaves
	}
}

create_2_freemen_effect = {
	if = {
		limit = {
			owner = {	
				is_tribal = yes
			}
		}
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
	else = {
		create_state_pop = freemen
		create_state_pop = freemen
	}
}

create_2_slaves_effect = {
	custom_tooltip = create_2_slaves_effect_tooltip
	hidden_effect = {
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

create_3_slaves_effect = {
	custom_tooltip = create_3_slaves_effect_tooltip
	hidden_effect = {
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

create_2_tribesmen_effect = {
	create_state_pop = tribesmen
	create_state_pop = tribesmen
}

create_5_citizens_effect = {
	custom_tooltip = create_5_citizen_effect_tooltip
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
	}
}

create_2_nobles_effect = {
	custom_tooltip = create_2_nobles_effect_tooltip
	hidden_effect = {
		create_state_pop = nobles
		create_state_pop = nobles
	}
}

add_relevant_subunit_effect = {
	if = {
		limit = {
			commander = {
				OR = {
					has_culture_group = east_levantine
					has_culture_group = south_levantine
					has_culture_group = numidian
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = camel
								trade_goods = camel
							}
						}
					}
				}
				add_subunit = cavalry_camels
			}
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
			25 = {
				add_subunit = light_infantry
			}
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_subunit = cavalry_light
			}
		}
	}
	else_if = {
		limit = {
			commander = {
				OR = {
					has_culture_group = west_levantine
					has_culture_group = hellenic
					has_culture_group = latin
					has_culture_group = persia
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = light_infantry
			}
			30 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_subunit = heavy_infantry
			}
			20 = {
				add_subunit = archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants
								trade_goods = elephants
							}
						}
					}
				}
				add_subunit = warelephant
			}
		}
	}
	else_if = {
		limit = {
			commander = {
				OR = {
					has_culture_group = aryan
					has_culture_group = pracyan
					has_culture_group = indian
					has_culture_group = tibetan
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = light_infantry
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_subunit = heavy_infantry
			}
			30 = {
				add_subunit = archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants
								trade_goods = elephants
							}
						}
					}
				}
				add_subunit = warelephant
			}
			20 = {
				add_subunit = chariots
			}
		}
	}
	else_if = {
		limit = {
			commander = {
				has_culture_group = scythia
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = light_infantry
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = heavy_cavalry
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_subunit = horse_archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
		}
	}
	else = {
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = chariots
			}
			20 = {
				add_subunit = light_infantry
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_subunit = heavy_infantry
			}
		}
	}
}

add_relevant_loyal_subunit_effect = {
	if = {
		limit = {
			exists = commander
			commander = {
				OR = {
					has_culture_group = aramaic
					has_culture_group = arabian
					has_culture_group = libyan
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = camel
								trade_goods = camel
							}
						}
					}
				}
				add_loyal_subunit = cavalry_camels
			}
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_loyal_subunit = cavalry_light
			}
			25 = {
				add_loyal_subunit = light_spearmen
			}
		}
	}
	else_if = {
		limit = {
			exists = commander
			commander = {
				OR = {
					has_culture_group = levantine
					has_culture_group = grekoid
					has_culture_group = italic
					has_culture_group = akkadian
					has_culture_group = eiranic
					has_culture_group = iranic
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = light_spearmen
			}
			30 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_loyal_subunit = light_spearmen
			}
			20 = {
				add_loyal_subunit = missile_archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = cavalry_light
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants_indian
								trade_goods = elephants_indian
							}
						}
					}
				}
				add_loyal_subunit = elephant_indian
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants_african
								trade_goods = elephants_african
							}
						}
					}
				}
				add_loyal_subunit = elephant_african
			}
		}
	}
	else_if = {
		limit = {
			exists = commander
			commander = {
				OR = {
					has_culture_group = vedic
					has_culture_group = dravidic
					has_culture_group = veddic
					has_culture_group = qiang
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = light_spearmen
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_loyal_subunit = light_spearmen
			}
			30 = {
				add_loyal_subunit = missile_archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants_indian
								trade_goods = elephants_indian
							}
						}
					}
				}
				add_loyal_subunit = elephant_indian
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants_african
								trade_goods = elephants_african
							}
						}
					}
				}
				add_loyal_subunit = elephant_african
			}
			20 = {
				add_loyal_subunit = chariot_light
			}
		}
	}
	else_if = {
		limit = {
			exists = commander
			commander = {
				has_culture_group = scythic
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = light_spearmen
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_loyal_subunit = cavalry_light
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_loyal_subunit = cavalry_horse_archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_loyal_subunit = cavalry_light
			}
		}
	}
	else_if = {
		limit = { exists = commander }
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = chariot_light
			}
			20 = {
				add_loyal_subunit = light_spearmen
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = cavalry_light
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_loyal_subunit = light_spearmen
			}
		}
	}
}

ip_mon_13_negative_trait_effect = {
	while = {
		limit = {
			var:ip_mon_13_trait_counter < 2
		}
		if = {
			limit = {
				has_trait = tactically_inflexible
			}
			remove_trait = tactically_inflexible
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = arbitrary
			}
			remove_trait = arbitrary
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = cruel
			}
			remove_trait = cruel
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = corrupt
			}
			remove_trait = corrupt
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = selfish
			}
			remove_trait = selfish
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = deceitful
			}
			remove_trait = deceitful
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = lazy
			}
			remove_trait = lazy
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = foolish
			}
			remove_trait = foolish
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = miserly
			}
			remove_trait = miserly
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
	}
	remove_variable = ip_mon_13_trait_counter
}

dhe_slave_harsh_treatment_law_effect = {
	if = {
		limit = {
			is_republic = yes
			NOT = {
				tag = ROM
			}
		}
		change_law = republican_citizen_2
	}
	else_if = {
		limit = {
			is_republic = yes
			tag = ROM
		}
		change_law = lex_fufia_caninia
	}
}

republic_job_giver_effect = {
	if = {
		limit = {
			martial >= finesse
			martial >= charisma
			martial >= zeal
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_tribune_of_the_soldiers
						save_temporary_scope_as = officer_1
					}
				}
				martial >= scope:officer_1.martial
			}
			give_office = office_tribune_of_the_soldiers
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_tribune_of_the_treasury
						save_temporary_scope_as = officer_2
					}
				}
				martial >= scope:officer_2.martial
			}
			give_office = office_tribune_of_the_treasury
		}
		else = {
			random_list = {
				50 = {
					give_office = office_tribune_of_the_soldiers
				}
				50 = {
					give_office = office_tribune_of_the_treasury
				}
			}
		}
	}
	else_if = {
		limit = {
			finesse >= martial
			finesse >= charisma
			finesse >= zeal
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_plebeian_aedile
						save_temporary_scope_as = officer_3
					}
				}
				finesse >= scope:officer_3.finesse
			}
			give_office = office_plebeian_aedile
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_republic_physician
						save_temporary_scope_as = officer_4
					}
				}
				finesse >= scope:officer_4.finesse
			}
			give_office = office_republic_physician
		}
		else = {
			random_list = {
				50 = {
					give_office = office_plebeian_aedile
				}
				50 = {
					give_office = office_republic_physician
				}
			}
		}
	}
	else_if = {
		limit = {
			charisma >= martial
			charisma >= finesse
			charisma >= zeal
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_censor
						save_temporary_scope_as = officer_5
					}
				}
				charisma >= scope:officer_5.charisma
			}
			give_office = office_censor
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_praetor
						save_temporary_scope_as = officer_6
					}
				}
				charisma >= scope:officer_6.charisma
			}
			give_office = office_praetor
		}
		else = {
			random_list = {
				50 = {
					give_office = office_censor
				}
				50 = {
					give_office = office_praetor
				}
			}
		}
	}
	else_if = {
		limit = {
			zeal >= martial
			zeal >= finesse
			zeal >= charisma
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_augur
						save_temporary_scope_as = officer_7
					}
				}
				zeal >= scope:officer_7.zeal
			}
			give_office = office_augur
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_pontifex
						save_temporary_scope_as = officer_8
					}
				}
				zeal >= scope:officer_8.zeal
			}
			give_office = office_pontifex
		}
		else = {
			random_list = {
				50 = {
					give_office = office_augur
				}
				50 = {
					give_office = office_pontifex
				}
			}
		}
	}
	else = {
		random_list = {
			1 = {
				give_office = office_tribune_of_the_soldiers
			}
			1 = {
				give_office = office_tribune_of_the_treasury
			}
			1 = {
				give_office = office_plebeian_aedile
			}
			1 = {
				give_office = office_republic_physician
			}
			1 = {
				give_office = office_censor
			}
			1 = {
				give_office = office_praetor
			}
			1 = {
				give_office = office_augur
			}
			1 = {
				give_office = office_pontifex
			}
		}
	}
}

add_trial_chance_small = {
	custom_tooltip = office_trial_success_chance_future_small
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = 5
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = 5
		}
	}
}

add_trial_chance_moderate = {
	custom_tooltip = office_trial_success_chance_future_moderate
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = 10
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = 10
		}
	}
}

add_trial_chance_large = {
	custom_tooltip = office_trial_success_chance_future_large
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = 20
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = 20
		}
	}
}

subtract_trial_chance_small = {
	custom_tooltip = office_trial_success_chance_subtract_small
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = -5
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = -5
		}
	}
}

subtract_trial_chance_moderate = {
	custom_tooltip = office_trial_success_chance_subtract_moderate
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = -10
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = -10
		}
	}
}

subtract_trial_chance_large = {
	custom_tooltip = office_trial_success_chance_subtract_large
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = -20
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = -20
		}
	}
}

add_civil_war_chance_effect = {
	if = {
		limit = {
			NOT = {
				has_local_variable = civil_war_chance
			}
		}
		set_local_variable = {
			name = civil_war_chance
			value = 20
		}
	}
	else = {
		change_local_variable = {
			name = civil_war_chance
			add = 20
		}
	}
}

trial_step_effect = {
	if = {
		limit = {
			NOT = {
				has_local_variable = trial_counter
			}
		}
		set_local_variable = {
			name = trial_counter
			value = 1
		}
	}
	else = {
		change_local_variable = {
			name = trial_counter
			add = 1
		}
	}
	if = {
		limit = {
			has_local_variable = trial_counter
			local_var:trial_counter >= 3
		}
		trigger_event = {
			on_action = trial_end
		}
	}
	else = {
		trigger_event = {
			on_action = trial_step
		}
	}
}

remove_trial_items_effect = {
	if = {
		limit = {
			has_triggered_character_modifier = currently_on_trial
		}
		remove_triggered_character_modifier = currently_on_trial
	}
	if = {
		limit = {
			has_variable = trial_chance_modifier
		}
		remove_variable = trial_chance_modifier
	}
}

remove_brothers_variables_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_variable = rival_brother_assassin_cooldown
			}
			remove_variable = rival_brother_assassin_cooldown
		}
		if = {
			limit = {
				has_variable = rival_brother_duel_cooldown
			}
			remove_variable = rival_brother_duel_cooldown
		}
		if = {
			limit = {
				has_variable = rival_brother_duel_cooldown
			}
			remove_variable = rival_brother_duel_cooldown
		}
		if = {
			limit = {
				has_variable = rival_brothers_death
			}
			remove_variable = rival_brothers_death
		}
		if = {
			limit = {
				has_variable = rival_brothers_wound
			}
			remove_variable = rival_brothers_wound
		}
		scope:rival_brothers_victor = {
			clear_saved_scope = rival_brothers_victor
		}
		scope:rival_brothers_loser = {
			clear_saved_scope = rival_brothers_loser
		}
	}
}

ip_mon_42_end_plot_effect = {
	custom_tooltip = end_plot_chain_tooltip
	if = {
		limit = {
			has_variable = ongoing_plot
		}
		remove_variable = ongoing_plot
	}
	if = {
		limit = {
			has_variable = ip_mon_42_investigation
		}
		remove_variable = ip_mon_42_investigation
	}
	if = {
		limit = {
			has_variable = ip_mon_42_doubled_guard
		}
		remove_variable = ip_mon_42_doubled_guard
	}
	if = {
		limit = {
			has_variable = ip_mon_42_red_handed
		}
		remove_variable = ip_mon_42_red_handed
	}
	if = {
		limit = {
			has_variable = ip_mon_42_elevated_pretender
		}
		remove_variable = ip_mon_42_elevated_pretender
	}
}

ip_mon_54_end_plot_effect = {
	custom_tooltip = end_plot_chain_tooltip
	if = {
		limit = {
			has_variable = ongoing_plot
		}
		remove_variable = ongoing_plot
	}
	if = {
		limit = {
			has_variable = ip_mon_54_investigation
		}
		remove_variable = ip_mon_54_investigation
	}
	if = {
		limit = {
			has_variable = ip_mon_54_ensure
		}
		remove_variable = ip_mon_54_ensure
	}
	if = {
		limit = {
			has_variable = ip_mon_54_ruler_resolution_ruler
		}
		remove_variable = ip_mon_54_ruler_resolution_ruler
	}
	if = {
		limit = {
			has_variable = ip_mon_54_ruler_resolution_consort
		}
		remove_variable = ip_mon_54_ruler_resolution_consort
	}
}

remove_regent_modifier_effect = {
	if = {
		limit = {
			has_character_modifier = martial_regent_1_charmod
		}
		remove_character_modifier = martial_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = martial_regent_2_charmod
		}
		remove_character_modifier = martial_regent_2_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = finesse_regent_1_charmod
		}
		remove_character_modifier = finesse_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = finesse_regent_2_charmod
		}
		remove_character_modifier = finesse_regent_2_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = charisma_regent_1_charmod
		}
		remove_character_modifier = charisma_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = charisma_regent_2_charmod
		}
		remove_character_modifier = charisma_regent_2_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = zeal_regent_1_charmod
		}
		remove_character_modifier = zeal_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = zeal_regent_2_charmod
		}
		remove_character_modifier = zeal_regent_2_charmod
	}
}

demand_office_skill_effect = {
	if = {
		limit = {
			scope:demand_office_event_scope.martial >= scope:demand_office_event_scope.finesse
			scope:demand_office_event_scope.martial >= scope:demand_office_event_scope.charisma
			scope:demand_office_event_scope.martial >= scope:demand_office_event_scope.zeal
		}
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 1
			}
		}
	}
	else_if = {
		limit = {
			scope:demand_office_event_scope.finesse >= scope:demand_office_event_scope.martial
			scope:demand_office_event_scope.finesse >= scope:demand_office_event_scope.charisma
			scope:demand_office_event_scope.finesse >= scope:demand_office_event_scope.zeal
		}
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 2
			}
		}
	}
	else_if = {
		limit = {
			scope:demand_office_event_scope.charisma >= scope:demand_office_event_scope.martial
			scope:demand_office_event_scope.charisma >= scope:demand_office_event_scope.finesse
			scope:demand_office_event_scope.charisma >= scope:demand_office_event_scope.zeal
		}
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 3
			}
		}
	}
	else = {
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 4
			}
		}
	}
}

demand_office_military_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_marshal
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_marshal
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_master_of_the_guard
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_master_of_the_guard
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_marshal
				}
			}
			random_character = {
				limit = {
					has_office = office_marshal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_master_of_the_guard

				}
			}
			random_character = {
				limit = {
					has_office = office_master_of_the_guard
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_treasury
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_treasury
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_soldiers
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_soldiers
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_treasury
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_treasury
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_soldiers
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_soldiers
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_warchief
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_warchief
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_bodyguard
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_bodyguard
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_warchief
				}
			}
			random_character = {
				limit = {
					has_office = office_warchief
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_bodyguard
				}
			}
			random_character = {
				limit = {
					has_office = office_bodyguard
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_finesse_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_steward
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_steward
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_physician
				}
			}
			random_character = {
				limit = {
					has_office = office_physician
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_steward
				}
			}
			random_character = {
				limit = {
					has_office = office_steward
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_plebeian_aedile
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_plebeian_aedile
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_republic_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_republic_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_plebeian_aedile
				}
			}
			random_character = {
				limit = {
					has_office = office_plebeian_aedile
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_republic_physician
				}
			}
			random_character = {
				limit = {
					has_office = office_republic_physician
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_apothecary
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_apothecary
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_magistrate
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_magistrate
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_apothecary
				}
			}
			random_character = {
				limit = {
					has_office = office_apothecary
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_magistrate
				}
			}
			random_character = {
				limit = {
					has_office = office_magistrate
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_charisma_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_royal_tutor
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_royal_tutor
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_foreign_minister
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_foreign_minister
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_royal_tutor
				}
			}
			random_character = {
				limit = {
					has_office = office_royal_tutor
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_foreign_minister
				}
			}
			random_character = {
				limit = {
					has_office = office_foreign_minister
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_praetor
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_praetor
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_censor
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_censor
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_praetor
				}
			}
			random_character = {
				limit = {
					has_office = office_praetor
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_censor
				}
			}
			random_character = {
				limit = {
					has_office = office_censor
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_arbitrator
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_arbitrator
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_elder
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_elder
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_arbitrator
				}
			}
			random_character = {
				limit = {
					has_office = office_arbitrator
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_elder
				}
			}
			random_character = {
				limit = {
					has_office = office_elder
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_zeal_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_philosopher
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_philosopher
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest_monarchy
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest_monarchy
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_philosopher
				}
			}
			random_character = {
				limit = {
					has_office = office_philosopher
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest_monarchy
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest_monarchy
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_augur
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_augur
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_pontifex
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_pontifex
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_augur
				}
			}
			random_character = {
				limit = {
					has_office = office_augur
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_pontifex
				}
			}
			random_character = {
				limit = {
					has_office = office_pontifex
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_wise_person
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_wise_person
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_wise_person
				}
			}
			random_character = {
				limit = {
					has_office = office_wise_person
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_master_scope_effect = {
	if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
		demand_office_military_scope_effect = yes
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
		demand_office_finesse_scope_effect = yes
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
		demand_office_charisma_scope_effect = yes
	}
	else = { demand_office_zeal_scope_effect = yes }
}

demand_office_transfer_effect = {
	hidden_effect = {
		scope:demand_office_event_scope = { remove_all_positions = yes }
	}
	if = {
		limit = { is_monarchy = yes }
		if = {
			limit = {
				exists = scope:demand_office_old_officer_scope
			}
			if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_foreign_minister
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_foreign_minister
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_royal_tutor
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_royal_tutor
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_marshal
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_marshal
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_master_of_the_guard
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_master_of_the_guard
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_high_priest_monarchy
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_high_priest_monarchy
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_philosopher
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_philosopher
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_steward
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_steward
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_physician
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_physician
				}
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_marshal
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_physician
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_royal_tutor
			}
		}
		else = {
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_philosopher
			}
		}
	}
	else_if = {
		limit = { is_republic = yes }
		if = {
			limit = {
				exists = scope:demand_office_old_officer_scope
			}
			if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_censor
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_censor
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_praetor
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_praetor
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_tribune_of_the_soldiers
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_tribune_of_the_soldiers
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_tribune_of_the_treasury
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_tribune_of_the_treasury
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_augur
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_augur
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_pontifex
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_pontifex
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_plebeian_aedile
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_plebeian_aedile
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_republic_physician
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_republic_physician
				}
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_tribune_of_the_treasury
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_plebeian_aedile
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_praetor
			}
		}
		else = {
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_augur
			}
		}
	}
	else = {
		if = {
			limit = {
				exists = scope:demand_office_old_officer_scope
			}
			if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_arbitrator
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_arbitrator
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_elder
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_elder
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_warchief
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_warchief
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_bodyguard
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_bodyguard
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_high_priest
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_high_priest
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_wise_person
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_wise_person
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_magistrate
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_magistrate
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_apothecary
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_apothecary
				}
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_warchief
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_apothecary
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_arbitrator
			}
		}
		else = {
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_wise_person
			}
		}
	}
}

demand_office_skill_tooltip_effect = {
	if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
		custom_tooltip = scheme.8.martialtooltip
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
		custom_tooltip = scheme.8.finessetooltip
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
		custom_tooltip = scheme.8.charismatooltip
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 4 }
		custom_tooltip = scheme.8.zealtooltip
	}
}

###Influence chain

add_influence_military_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 3
		}
	}
}

add_influence_military_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 4
		}
	}
}

add_influence_military_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 5
		}
	}
}

add_influence_military_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 6
		}
	}
}

add_influence_civic_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 3
		}
	}
}

add_influence_civic_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 4
		}
	}
}

add_influence_civic_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 5
		}
	}
}

add_influence_civic_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 6
		}
	}
}

add_influence_oratory_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 3
		}
	}
}

add_influence_oratory_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 4
		}
	}
}

add_influence_oratory_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 5
		}
	}
}

add_influence_oratory_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 6
		}
	}
}

add_influence_religious_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 3
		}
	}
}

add_influence_religious_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 4
		}
	}
}

add_influence_religious_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 5
		}
	}
}

add_influence_religious_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 6
		}
	}
}

add_influence_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.total_stats_svalue
		}
	}
}

mon_18_mad_melee_effect = {
	hidden_effect = {
		if = {
			limit = {
				exists = scope:mon_18_plotter_2
				exists = scope:mon_18_plotter_3
			}
			random_list = { #Outcome of mad melee
				33 = {
					scope:mon_18_plotter = { # Plotter 1 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:mon_18_plotter_2 = { # Plotter 2 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:mon_18_plotter_3 = { # Plotter 3 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:old_ruler_mon_18 = { # Ruler dies
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
				1 = {
					scope:mon_18_plotter = { # Everybody dies...
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:mon_18_plotter_2 = {
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:mon_18_plotter_3 = {
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:old_ruler_mon_18 = {
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
			}
			if = { # If ruler didn't die imprison
				limit = {
					scope:old_ruler_mon_18 = {
						is_alive = yes
					}
				}
				imprison = {
					target = scope:old_ruler_mon_18
				}
			}
			if = { # If plotter 1 didn't die seize power
				limit = {
					scope:mon_18_plotter = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter
			}
			else_if = { # If plotter 1 did die plotter 2 seize power
				limit = {
					scope:mon_18_plotter_2 = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter_2
			}
			else_if = { # If plotter 1 and 2 died plotter 3 seize power
				limit = {
					scope:mon_18_plotter_3 = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter_3
			}
			else_if = { # If all died, old ruler preferred heir takes power
				limit = {
					exists = scope:mon_18_preferred_heir
					scope:mon_18_preferred_heir = {
						is_alive = yes
						employer = root
					}
				}
				set_as_ruler = scope:mon_18_preferred_heir
			}
		}
		else_if = {
			limit = {
				exists = scope:mon_18_plotter_2
				NOT = { exists = scope:mon_18_plotter_3 }
			}
			random_list = { #Outcome of mad melee
				33 = {
					scope:mon_18_plotter = { # Plotter 1 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:mon_18_plotter_2 = { # Plotter 2 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:old_ruler_mon_18 = { # Ruler dies
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
				1 = {
					scope:mon_18_plotter = { # Everybody dies...
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:mon_18_plotter_2 = {
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:old_ruler_mon_18 = {
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
			}
			if = { # If ruler didn't die imprison
				limit = {
					scope:old_ruler_mon_18 = {
						is_alive = yes
					}
				}
				imprison = {
					target = scope:old_ruler_mon_18
				}
			}
			if = { # If plotter 1 didn't die seize power
				limit = {
					scope:mon_18_plotter = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter
			}
			else_if = { # If plotter 1 did die plotter 2 seize power
				limit = {
					scope:mon_18_plotter_2 = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter_2
			}
			else_if = { # If all died, old ruler preferred heir takes power
				limit = {
					exists = scope:mon_18_preferred_heir
					scope:mon_18_preferred_heir = {
						is_alive = yes
						employer = root
					}
				}
				set_as_ruler = scope:mon_18_preferred_heir
			}
		}
		else = {
			random_list = { #Outcome of mad melee
				33 = {
					scope:mon_18_plotter = { # Plotter 1 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:old_ruler_mon_18 = { # Ruler dies
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
				1 = {
					scope:mon_18_plotter = { # Everybody dies...
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:old_ruler_mon_18 = {
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
			}
			if = { # If ruler didn't die imprison
				limit = {
					scope:old_ruler_mon_18 = {
						is_alive = yes
					}
				}
				imprison = {
					target = scope:old_ruler_mon_18
				}
			}
			if = { # If plotter 1 didn't die seize power
				limit = {
					scope:mon_18_plotter = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter
			}
			else_if = { # If all died, old ruler preferred heir takes power
				limit = {
					exists = scope:mon_18_preferred_heir
					scope:mon_18_preferred_heir = {
						is_alive = yes
						employer = root
					}
				}
				set_as_ruler = scope:mon_18_preferred_heir
			}
		}
	}
}

replace_food_after_city_upgrade_effect = {
	# $VARIABLE_OR_SET_TRADE_GOODS$ will make this either set a variable for which trade good or actually change it. The later is only used to show a tooltip on the button but this is kept as one effect to make sure functionality is always the same between tooltip and outcome.
	#The actual trade good change is done in the event state_improvement.6
	random_list = { #If set_variable is used it must be cleared, use the scripted effect after!
		5 = {
			modifier = {
				factor = 2
				OR = {
					is_in_region = upper_egypt_region
					is_in_region = lower_egypt_region
				}
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = papyrus
		}
		15 = { #Always pretty high chance
			$VARIABLE_OR_SET_TRADE_GOODS$ = cloth
			modifier = {
				factor = 1.5
				OR = {
					is_in_region = gandhara_region
					is_in_region = maru_region
					is_in_region = avanti_region
					is_in_region = madhyadesa_region
					is_in_region = pracya_region
					is_in_region = vindhyaprstha_region
					is_in_region = dravida_region
					is_in_region = aparanta_region
					is_in_region = karnata_region
				}
			}
		}
		10 = { #Often high chance
			modifier = {
				factor = 2
				OR = {
					terrain = marsh
					terrain = desert
				}
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = earthware
		}
		10 = {
			modifier = {
				factor = 2
				terrain = marsh
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = dye
		}
		5 = { #Unusual but not very dependent on where you are
			$VARIABLE_OR_SET_TRADE_GOODS$ = glass
		}
		10 = { #Only in certain regions
			modifier = {
				factor = 0
				NOT = { is_in_region = asia_region }
				NOT = { is_in_region = greece_region }
				NOT = { is_in_region = cilicia_region }
				NOT = { is_in_region = assyria_region }
				NOT = { is_in_region = mesopotamia_region }
				NOT = { is_in_region = persis_region }
				NOT = { is_in_region = media_region }
				NOT = { is_in_region = bactriana_region }
				NOT = { is_in_region = ariana_region }
				NOT = { is_in_region = parthia_region }
				NOT = { is_in_region = syria_region }
				NOT = { is_in_region = palestine_region }
				NOT = { is_in_region = gandhara_region }
				NOT = { is_in_region = avanti_region }
				NOT = { is_in_region = madhyadesa_region }
				NOT = { is_in_region = pracya_region }
				NOT = { is_in_region = vindhyaprstha_region }
				NOT = { is_in_region = dravida_region }
				NOT = { is_in_region = aparanta_region }
				NOT = { is_in_region = karnata_region }
				NOT = { is_in_region = sogdiana_region }
				NOT = { is_in_region = lower_egypt_region }
			}
			modifier = {
				factor = 0.2
				OR = {
					is_in_region = asia_region
					is_in_region = greece_region
					is_in_region = cilicia_region
					is_in_region = syria_region
					is_in_region = palestine_region
					is_in_region = lower_egypt_region
				}
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = silk
		}
	}
}

replace_food_after_city_upgrade_finish_effect = {
	switch = {
		trigger = has_variable
		papyrus = { set_trade_goods = papyrus remove_variable = papyrus }
		cloth = { set_trade_goods = cloth remove_variable = cloth }
		earthware = { set_trade_goods = earthware remove_variable = earthware }
		dye = { set_trade_goods = dye remove_variable = dye }
		glass = { set_trade_goods = glass remove_variable = glass }
		silk = { set_trade_goods = silk remove_variable = silk }
	}
}

restore_food_effect = {
	switch = {
		trigger = has_variable
		had_grain = { set_trade_goods = grain remove_variable = had_grain }
		had_fish = { set_trade_goods = fish remove_variable = had_fish }
		had_cattle = { set_trade_goods = cattle remove_variable = had_cattle }
		had_vegetables = { set_trade_goods = vegetables remove_variable = had_vegetables  }
	}
}

famine_relocation_immediate_effect = {
	if = {
		limit = {
			scope:fe_city.state = {
				any_state_province = {
					any_neighbor_province = {
						NOT = { is_in_area = scope:fe_city }
						owner = root
						this.state = {
							NOR = {
								any_state_province = { has_variable = food_event_cooldown_state }
								has_state_modifier = mild_famine_smod
								has_state_modifier = severe_famine_smod
								has_state_modifier = severe_famine_relief_smod
							}
						}
						save_temporary_scope_as = relocation_temp
						scope:relocation_temp.state = {
							any_state_province = {
								count >= 3 
								owner = root
								total_population < population_cap
							}
						}
					}
				}
			}
		}
		if = { 
			limit = { has_variable = famine_relocation_number }
			remove_variable = famine_relocation_number
		}
		set_variable = {
			name = famine_relocation_number
			value = {
				scope:fe_city.state = {
					every_state_province = {
						limit = {
							owner = root
						}
						every_pops_in_province = {
							add = 1
						}
					}
				}
				divide = 10
				round = yes
			}
		}
		scope:fe_city.state = {
			random_state_province = {
				limit = {
					any_neighbor_province = {
						NOT = { is_in_area = scope:fe_city }
						owner = root
						save_temporary_scope_as = relocation_temp
						scope:relocation_temp.state = {
							any_state_province = {
								count >= 3 
								owner = root
							}
						}
					}
				}
				random_neighbor_province = {
					limit = {
						NOT = { is_in_area = scope:fe_city }
						owner = root
						save_temporary_scope_as = relocation_temp
						scope:relocation_temp.state = {
							any_state_province = {
								count >= 3 
								owner = root
							}
						}
					}
					weight = {
						modifier = {
							factor = 5 
							state.has_state_food >= 400
						}
						modifier = {
							factor = 10
							state.has_state_food >= 800
						}
						modifier = {
							factor = 15
							state.has_state_food >= 1000
						}
						modifier = {
							factor = 20 
							state.has_state_food >= 1200
						}
					}
					save_scope_as = relocation_state_city
				}
			}
		}
	}
}

famine_relocation_effect = {
	while = {
		limit = {
			var:famine_relocation_number > 0
		}
		scope:fe_city.state = {
			random_state_province = {
				limit = {
					owner = scope:fe_city.owner
					total_population > 1
				}
				weight = {
					modifier = {
						factor = 5
						has_city_status = no	
					}
					modifier = {
						factor = 5
						any_pops_in_province = {
							NOT = { pop_type = slaves } 
						}
					}
					modifier = {
						factor = 5
						any_pops_in_province = {
							NOT = { pop_type = tribesmen } 
						}
					}
					modifier = {
						factor = 5
						total_population >= population_cap
					}
				}
				save_scope_as = relocating_city
			}
			scope:relocation_state_city.state = {
				random_state_province = {
					limit = {
						owner = scope:fe_city.owner
					}
					weight = {
						base = 1
						modifier = {
							factor = 5
							has_city_status = yes
						}
						modifier = {
							factor = 5
							total_population >= 10	
						}
						modifier = {
							factor = 20
							NOT = { total_population >= population_cap }
						}
					}
					save_scope_as = relocation_city
				}
			}
		}
		scope:relocating_city = {
			random_pops_in_province = {
				weight = {
					modifier = {
						factor = 10
						NOT = { pop_type = slaves }
					} 
					modifier = {
						factor = 5
						NOT = { pop_type = tribesmen }
					} 
				}
				move_pop = scope:relocation_city
			}
		}
		change_variable = {
			name = famine_relocation_number
			subtract = 1
		}
	}
	remove_variable = famine_relocation_number
}

add_peaceful_weight_effect = {
	custom_tooltip = "peaceful_weight_up_tt"
	if = {
		limit = {
			NOT = {
				has_variable = mission_stance_weight #TODO make local variable
			}
		}
		set_variable = {
			name = mission_stance_weight
			value = 1
		}
	}
	else = {
		change_variable = {
			name = mission_stance_weight
			add = 1
		}
	}
}

add_warlike_weight_effect = {
	custom_tooltip = "warlike_weight_up_tt"
	if = {
		limit = {
			NOT = {
				has_variable = mission_stance_weight #TODO make local variable
			}
		}
		set_variable = {
			name = mission_stance_weight
			value = -1
		}
	}
	else = {
		change_variable = {
			name = mission_stance_weight
			subtract = 1
		}
	}
}

destroy_generic_mission_variables_effect = {
	if = {
		limit = {
			has_variable = mission_stance_weight
		}
		remove_variable = mission_stance_weight
	}
	if = {
		limit = {
			has_variable = generic_mission_1_toggle
		}
		remove_variable = generic_mission_1_toggle
	}
	if = {
		limit = {
			has_variable = generic_mission_2_toggle
		}
		remove_variable = generic_mission_2_toggle
	}
	if = {
		limit = {
			has_variable = reward_roll
		}
		remove_variable = reward_roll
	}
	if = {
		limit = {
			has_variable = side_branch_selector
		}
		remove_variable = side_branch_selector
	}
}

save_iterative_scope_effect = { # up to 10 targets, this is a typeless effect
	if = {
		limit = {
			NOT = {
				exists = scope:first
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = first
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:first
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:second
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = second
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:second
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:third
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = third
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:third
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:fourth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = fourth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:fourth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:fifth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = fifth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:fifth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:sixth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = sixth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:sixth
			}
		}
	} 
	else_if = {
		limit = {
			NOT = {
				exists = scope:seventh
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = seventh
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:seventh
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:eighth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = eighth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:eighth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:ninth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = ninth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:ninth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:tenth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = tenth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:tenth
			}
		}
	}
}

add_provincial_claim_effect = {
	random_area_province = {
		custom_tooltip = add_provincial_claim_effect_tooltip
	}
	hidden_effect = {
		every_area_province = {
			limit = {
				NOT = {
					owner = root
				}
				has_owner = yes
			}
			add_claim = root
		}
	}
}

destroy_building_effect = {
	save_scope_as = destroy_random_building_scope
	if = {
		limit = { has_city_status = no }
		if = { 
			limit = { num_of_basic_settlement_infratructure_building > 0 }
			remove_building_level = basic_settlement_infratructure_building
		}
		else_if = {
			limit = { num_of_hill_fort > 0 }
			remove_building_level = hill_fort
		}
		else_if = {
			limit = { num_of_slave_mine_building > 0 }
			remove_building_level = slave_mine_building
		}
		else_if = {
			limit = { num_of_latifundia_building > 0 }
			remove_building_level = latifundia_building
		}
		else_if = {
			limit = { num_of_local_forum_building > 0 }
			remove_building_level = local_forum_building
		}
		else_if = {
			limit = { num_of_barracks_building > 0 }
			remove_building_level = barracks_building
		}
		else_if = {
			limit = { num_of_fortress_building > 0 }
			remove_building_level = fortress_building
		}
	}
	else_if = {
		limit = { has_city_status = yes }
		if = {
			limit = { num_of_used_building_slots > 0 }
			custom_tooltip = destroy_building_effect.tt 
		}
		hidden_effect = {
			random_list = {
				# Unlimited Buildings
				99 = {
					trigger = { num_of_population_building > 0 }
					remove_building_level = population_building
				}
				99 = {
					trigger = { num_of_aqueduct_building > 0 }
					remove_building_level = aqueduct_building
				}
				99 = {
					trigger = { num_of_commerce_building > 0 }
					remove_building_level = commerce_building
				}
				99 = {
					trigger = { num_of_library_building > 0 }
					remove_building_level = library_building
				}
				99 = {
					trigger = { num_of_military_building > 0 }
					remove_building_level = military_building
				}
				99 = {
					trigger = { num_of_town_hall_building > 0 }
					remove_building_level = town_hall_building
				}
				10 = {
					trigger = { num_of_port_building > 0 }
					remove_building_level = port_building
				}
				# Limited Buildings
				10 = {
					trigger = { num_of_academy_building > 0 }
					remove_building_level = academy_building
				}
				10 = {
					trigger = { num_of_court_building > 0 }
					remove_building_level = court_building
				}
				10 = {
					trigger = { num_of_forum_building > 0 }
					remove_building_level = forum_building
				}
				10 = {
					trigger = { num_of_workshop_building > 0 }
					remove_building_level = workshop_building
				}
				10 = {
					trigger = {
						num_of_fortress_building > 0
						is_capital = no
					}
					remove_building_level = fortress_building
				}
				# Unique Buildings
				1 = {
					trigger = { num_of_temple_building > 0 }
					remove_building_level = temple_building
				}
				1 = {
					trigger = { num_of_theathre_building > 0 }
					remove_building_level = theathre_building
				}
				1 = {
					trigger = { num_of_foundry_building > 0 }
					remove_building_level = foundry_building
				}
				1 = {
					trigger = { num_of_fortress_ramparts_building > 0 }
					remove_building_level = fortress_ramparts_building
				}
			}
		}
	}
}

annexation_character_cleanup = { #Cleans variables, nothing else.
	if = { limit = { is_in_list = first_annex_family_list } remove_from_list = first_annex_family_list }
	if = { limit = { is_in_list = second_annex_family_list } remove_from_list = second_annex_family_list }
	if = { limit = { is_in_list = third_annex_family_list } remove_from_list = third_annex_family_list }
	if = { limit = { is_in_list = fourth_annex_family_list } remove_from_list = fourth_annex_family_list }
	if = { limit = { is_in_list = imprisonment_list } remove_from_list = imprisonment_list }
	if = { limit = { is_in_list = banishment_list } remove_from_list = banishment_list }
}

new_family_generation_effect = { 
	#Used in family_events.1 and other places where the scope is a country and the effect is provided a saved scope which is a character.
	#$FAMILY_CANDIDATE$ is the saved scope that creates the family
	scope:$FAMILY_CANDIDATE$  = {
		ROOT = {
			create_family = PREV
			#hidden_effect = { set_home_country = ROOT }
		}
		custom_tooltip = family_acceptance_custom_tooltip
	}
	hidden_effect = {
		#To determine starting prestige we look at the least prestigious other family:
		ordered_family = {
			order_by = prestige
			limit  = { NOT = { THIS = scope:$FAMILY_CANDIDATE$.family } }
			position = end
			#save_scope_as = poor_family
		}
		scope:$FAMILY_CANDIDATE$.family = {
			add_prestige = {
				#value = scope:poor_family.prestige
				subtract = 50
				min = 200
			}
		}
		#Now to populate the new Family:
		if = { #Our ambitious young candidate needs a father
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age < 60
					NOT = { exists = father }
				}
			}
			create_character = {
				age = 75
				female = no
				save_scope_as = pater_familias
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
			}
			scope:pater_familias = {
				adopt = scope:$FAMILY_CANDIDATE$
			}
		}
		else = {
			scope:$FAMILY_CANDIDATE$ = { save_scope_as = pater_familias }
		}
		if = { #Does this character have children? If not let us make some.
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = no
					NOT = { any_child = { is_male = yes } }
				}
			}
			create_character = {
				age = 6
				female = no
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				father = scope:$FAMILY_CANDIDATE$
			}
		}
		if = { #Does this character have children? If not let us make some.
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = yes
					NOT = { any_child = { is_male = yes } }
				}
			}
			create_character = {
				age = 6
				female = no
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				mother = scope:$FAMILY_CANDIDATE$
			}
		}
		if = { #Does this character have children? If not let us make some.
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = no
					NOT = { any_child = { is_female = yes } }
				}
			}
			create_character = {
				age = 4
				female = yes
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				father = scope:$FAMILY_CANDIDATE$
			}
		}
		if = {
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = yes
					NOT = { any_child = { is_female = yes } }
				}
			}
			create_character = {
				age = 4
				female = yes
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				mother = scope:$FAMILY_CANDIDATE$
			}
		}
		if = { #Any existing close relatives need to be joined to the family.
			limit = {
				any_character = {
					is_minor_character = yes
					is_close_relative = scope:$FAMILY_CANDIDATE$
				}
			}
			every_character = {
				limit = {
					is_minor_character = yes
					is_close_relative = scope:$FAMILY_CANDIDATE$
				}
				set_family = scope:$FAMILY_CANDIDATE$.family
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				if = {
					limit = { prisoner = yes }
					ROOT = { release_prisoner = { target = PREV } }
				}
				set_home_country = ROOT
			}
		}
		ordered_character = { #Clients are now added.
			check_range_bounds = no
			max = 7
			order_by = power_base
			limit = {
				prisoner = no
				is_mercenary = no
				NOT = { has_variable = olympic_attendee }
				NOT = { has_variable = pyrrhus_travelling }
				is_minor_character = yes
				trigger_if = {
					limit = { exists = scope:family_candidate_1 }
					NOT = { THIS = scope:family_candidate_1 }
				}
				trigger_if = {
					limit = { exists = scope:family_candidate_2 }
					NOT = { THIS = scope:family_candidate_2 }
				}
				trigger_if = {
					limit = { exists = scope:family_candidate_3 }
					NOT = { THIS = scope:family_candidate_3 }
				}
				trigger_if = {
					limit = { exists = scope:family_candidate_4 }
					NOT = { THIS = scope:family_candidate_4 }
				}
				NOT = { age > scope:$FAMILY_CANDIDATE$.age } #Sorry, no seniors.
				is_ruler = no #Never the ruler.
				citizenship_restrictions_trigger = yes
			}
			set_family = scope:$FAMILY_CANDIDATE$.family
			adapt_family_name = yes
			set_home_country = ROOT
			add_character_modifier = {
				name = adopted_into_great_family
				duration = -1
			}
			if = {
				limit = { has_character_modifier = foreign_citizen }
				remove_character_modifier = foreign_citizen
			}
		}
		if = {
			limit = { scope:$FAMILY_CANDIDATE$.family = { num_of_members <= 8 } }
			while = {
				limit = { scope:$FAMILY_CANDIDATE$.family = { num_of_members <= 8 } }
				create_character = {
					family = scope:$FAMILY_CANDIDATE$.family
					religion = scope:$FAMILY_CANDIDATE$.religion
					culture = scope:$FAMILY_CANDIDATE$.culture
				}
			}
		}
	}
}

add_city_fire_effect = {
	hidden_effect = {
		add_vfx = {
			name = "city_fire"
			duration = 60
			locator = city
		}
	}
}

add_fort_fire_effect = {
	hidden_effect = {
		if = {
			limit = {
				fort_level >= 1
			}
			random_list = {
				50 = {
					add_vfx = {
						name = "fort_fire"
						duration = 30
						locator = fort
					}
				}
				50 = {
					add_vfx = {
						name = "fort_fire_2"
						duration = 30
						locator = fort
					}
				}
			}
		}
	}
}

add_port_fire_effect = {
	hidden_effect = {
		if = {
			limit = {
				is_port = yes
			}
			random_list = {
				50 = {
					add_vfx = {
						name = "fort_fire"
						duration = 30
						locator = port
					}
				}
				50 = {
					add_vfx = {
						name = "fort_fire_2"
						duration = 30
						locator = port
					}
				}
			}
		}
	}
}

add_city_smoke_effect = {
	hidden_effect = {
		add_vfx = {
			name = "siege_smoke"
			duration = 30
			locator = city
		}
	}
}

flavor_egy_move_magids_effect = {
	if = {
		limit = { 
			root.consort = char:18
			scope:flavor_egy_2_magas_scope = char:46
			NOT = { root.consort.family = root.current_ruler.family }
		}
		root.consort = { save_scope_as = berenike_scope }
		save_scope_as = egy_scope
		if = {
			limit = {
				scope:berenike_scope.family = {
					any_family_member = {
						employer = root
						prisoner = no
						NOT = { this = scope:berenike_scope }
					}
				}
			}
			hidden_effect = {
				scope:berenike_scope.family = {
					every_family_member = {
						limit = {
							employer = root
							prisoner = no
							NOT = { this = scope:berenike_scope }
							NOT = { is_child_of = scope:berenike_scope }
						}
						set_variable = moving_magid_flag
						remove_all_positions = yes
						move_country = scope:flavor_egy_2_magas_scope.employer
						set_home_country = scope:flavor_egy_2_magas_scope.employer
						remove_character_modifier = foreign_citizen
						set_family = scope:flavor_egy_2_magas_scope.family 
					}
				}
			}
			scope:flavor_egy_2_magas_scope.employer = {
				trigger_event = { id = flavor_egy.14 }
			}
			custom_tooltip = flavor_egy_magid_move_tt
		}
		scope:berenike_scope.family = {
			every_family_member = {
				limit = {
					employer = root
					NOT = { this = scope:berenike_scope }
					OR = {
						is_child_of = scope:berenike_scope
						prisoner = yes
					}
				}
				set_family = root.current_ruler.family
			}
		}
		scope:berenike_scope = { set_family = root.current_ruler.family }

	}
}

flavor_sel_1_claim_bactria_effect = {
	every_area_province = {
		limit = {
			NOT = { owner = c:BAC }
		}
		add_claim = c:BAC
	}
}

flavor_sel_1_claim_parthia_effect = {
	every_area_province = {
		limit = {
			NOT = { owner = c:PAR }
		}
		add_claim = c:PAR
	}
}

flavor_sel_4_claim_effect = {
	every_area_province = {
		limit = {
			owner = {
				tag = SEL
			}
		}
		set_conquered_by = c:MRY
	}
}

flavor_sel_6_claim_effect = {
	every_region_province = {
		add_claim = c:SEL
	}
}

roman_conquest_22_claim_effect = {
	every_region_province = {
		limit = {
			NOT = {
				owned_or_subject_owned = c:ROM
			}
			any_neighbor_province = {
				owned_or_subject_owned = c:ROM
			}
		}
		add_claim = c:ROM
		owner = { 
			add_opinion = { target = c:ROM modifier = rm_4_hispanian_dominance_enemy_opmod }
		}
	}
}

diadochi_flavor_1_region_claim_effect = {
	every_region_province = {
		limit = {
			exists = owner
			owner = {
				OR = {
					is_diadochi_trigger = yes
					tag = CAP
					AND = {
						is_subject = yes
						overlord = {
							NOT = { THIS = ROOT }
							is_diadochi_trigger = yes
						}
					}
				}
			}
			NOT = { 
				owned_or_subject_owned = ROOT
			}
		}
		add_claim = ROOT
	}
}

diadochi_flavor_event_claim_effect = {
	region:greece_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:thrace_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:macedonia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:syria_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:asia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:cilicia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:galatia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:assyria_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:persis_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:palestine_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:mesopotamia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:lower_egypt_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:upper_egypt_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:cappadocia_region = { diadochi_flavor_1_region_claim_effect = yes }
}

diadochi_flavor_lose_claim_effect = {
	every_region_province = {
		remove_claim = root
	}
}

fe_66_percent_food_var_effect = {
	set_variable = {
		name = fe_66_percent_food_var
		value = scope:fe_city.state.has_state_food
	}
	change_variable = {
		name = fe_66_percent_food_var
		divide = 3
		min = 100
	}
	change_variable = {
		name = fe_66_percent_food_var
		multiply = 2
	}
}

clear_loyalty_effect = {
	if = {
		limit = { has_loyalty = loyalty_office_gained }
		remove_loyalty = loyalty_office_gained
	}
	if = {
		limit = { has_loyalty = loyalty_office_lost }
		remove_loyalty = loyalty_office_lost
	}
	if = {
		limit = { has_loyalty = given_free_hands }
		remove_loyalty = given_free_hands
	}
	if = {
		limit = { has_loyalty = free_hands_revoked }
		remove_loyalty = free_hands_revoked
	}
	if = {
		limit = { has_loyalty = loyalty_inspire_disloyalty }
		remove_loyalty = loyalty_inspire_disloyalty
	}
	if = {
		limit = { has_loyalty = loyalty_sold_family_member }
		remove_loyalty = loyalty_sold_family_member
	}
	if = {
		limit = { has_loyalty = loyalty_sold_family_head }
		remove_loyalty = loyalty_sold_family_head
	}
	if = {
		limit = { has_loyalty = loyalty_granted_stipends }
		remove_loyalty = loyalty_granted_stipends
	}
	if = {
		limit = { has_loyalty = granted_holding_l }
		remove_loyalty = granted_holding_l
	}
	if = {
		limit = { has_loyalty = revoked_holding_l }
		remove_loyalty = revoked_holding_l
	}
	if = {
		limit = { has_loyalty = laurels_acknowledged_l }
		remove_loyalty = laurels_acknowledged_l
	}
	if = {
		limit = { has_loyalty = imprisoned_l }
		remove_loyalty = imprisoned_l
	}
	if = {
		limit = { has_loyalty = flogged_l }
		remove_loyalty = flogged_l
	}
	if = {
		limit = { has_loyalty = flogged_rival_l }
		remove_loyalty = flogged_rival_l
	}
	if = {
		limit = { has_loyalty = triumph_l }
		remove_loyalty = triumph_l
	}
	if = {
		limit = { has_loyalty = corruption_sanctions_l }
		remove_loyalty = corruption_sanctions_l
	}
	if = {
		limit = { has_loyalty = brought_to_trial_l }
		remove_loyalty = brought_to_trial_l
	}
	if = {
		limit = { has_loyalty = family_property_seized_l }
		remove_loyalty = family_property_seized_l
	}
	if = {
		limit = { has_loyalty = ci_bribe }
		remove_loyalty = ci_bribe
	}
	if = {
		limit = { has_loyalty = force_converted_religion }
		remove_loyalty = force_converted_religion
	}
	if = {
		limit = { has_loyalty = chief_exalted }
		remove_loyalty = chief_exalted
	}
	if = {
		limit = { has_loyalty = granted_citizenship }
		remove_loyalty = granted_citizenship
	}
	if = {
		limit = { has_loyalty = benevolent_overlord_tribal_chiefdom }
		remove_loyalty = benevolent_overlord_tribal_chiefdom
	}
	if = {
		limit = { has_loyalty = assets_seized_sl }
		remove_loyalty = assets_seized_sl
	}
	if = {
		limit = { has_loyalty = loyalty_hold_triumph }
		remove_loyalty = loyalty_hold_triumph
	}
	if = {
		limit = { has_loyalty = loyalty_banish_char }
		remove_loyalty = loyalty_banish_char
	}
	if = {
		limit = { has_loyalty = loyalty_execute_character }
		remove_loyalty = loyalty_execute_character
	}
	if = {
		limit = { has_loyalty = loyalty_imprison }
		remove_loyalty = loyalty_imprison
	}
	if = {
		limit = { has_loyalty = loyalty_appoint_dictator }
		remove_loyalty = loyalty_appoint_dictator
	}
	if = {
		limit = { has_loyalty = loyalty_ostracize_char }
		remove_loyalty = loyalty_ostracize_char
	}
	if = {
		limit = { has_loyalty = deposed_king }
		remove_loyalty = deposed_king
	}
	if = {
		limit = { has_loyalty = royal_marriage }
		remove_loyalty = royal_marriage
	}
	if = {
		limit = { has_loyalty = royal_marriage_members }
		remove_loyalty = royal_marriage_members
	}
	if = {
		limit = { has_loyalty = spurned_family }
		remove_loyalty = spurned_family
	}
	if = {
		limit = { has_loyalty = spurned_family_members }
		remove_loyalty = spurned_family_members
	}
	if = {
		limit = { has_loyalty = great_works_religious_dislike }
		remove_loyalty = great_works_religious_dislike
	}
	if = {
		limit = { has_loyalty = annexed_home_country }
		remove_loyalty = annexed_home_country
	}
	if = {
		limit = { has_loyalty = loyalty_state_costs }
		remove_loyalty = loyalty_state_costs
	}
	if = {
		limit = { has_loyalty = loyalty_state_nothing }
		remove_loyalty = loyalty_state_nothing
	}
	if = {
		limit = { has_loyalty = loyalty_state_seized }
		remove_loyalty = loyalty_state_seized
	}
	if = {
		limit = { has_loyalty = loyalty_supported_slave_reform }
		remove_loyalty = loyalty_supported_slave_reform
	}
	if = {
		limit = { has_loyalty = loyalty_refused_slave_reform }
		remove_loyalty = loyalty_refused_slave_reform
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_slave_reform }
		remove_loyalty = loyalty_ignored_slave_reform
	}
	if = {
		limit = { has_loyalty = loyalty_supported_bondage_reform_1 }
		remove_loyalty = loyalty_supported_bondage_reform_1
	}
	if = {
		limit = { has_loyalty = loyalty_supported_bondage_reform_2 }
		remove_loyalty = loyalty_supported_bondage_reform_2
	}
	if = {
		limit = { has_loyalty = loyalty_refused_bondage_reform_1 }
		remove_loyalty = loyalty_refused_bondage_reform_1
	}
	if = {
		limit = { has_loyalty = loyalty_refused_bondage_reform_2 }
		remove_loyalty = loyalty_refused_bondage_reform_2
	}
	if = {
		limit = { has_loyalty = loyalty_dismissed_concerns }
		remove_loyalty = loyalty_dismissed_concerns
	}
	if = {
		limit = { has_loyalty = loyalty_dismissed_concerns_2 }
		remove_loyalty = loyalty_dismissed_concerns_2
	}
	if = {
		limit = { has_loyalty = loyalty_welcomed_slave_family }
		remove_loyalty = loyalty_welcomed_slave_family
	}
	if = {
		limit = { has_loyalty = loyalty_unwelcomed_slave_family }
		remove_loyalty = loyalty_unwelcomed_slave_family
	}
	if = {
		limit = { has_loyalty = loyalty_dismissed_slave_family }
		remove_loyalty = loyalty_dismissed_slave_family
	}
	if = {
		limit = { has_loyalty = loyalty_scandal_investigation }
		remove_loyalty = loyalty_scandal_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_token_investigation }
		remove_loyalty = loyalty_token_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_no_investigation }
		remove_loyalty = loyalty_no_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_rigorous_investigation_1 }
		remove_loyalty = loyalty_rigorous_investigation_1
	}
	if = {
		limit = { has_loyalty = loyalty_token_investigation }
		remove_loyalty = loyalty_token_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_no_investigation }
		remove_loyalty = loyalty_no_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_rigorous_investigation_2 }
		remove_loyalty = loyalty_rigorous_investigation_2
	}
	if = {
		limit = { has_loyalty = loyalty_precautionary_imprisonment }
		remove_loyalty = loyalty_precautionary_imprisonment
	}
	if = {
		limit = { has_loyalty = loyalty_smeared_defendent }
		remove_loyalty = loyalty_smeared_defendent
	}
	if = {
		limit = { has_loyalty = loyalty_evidence_tampering }
		remove_loyalty = loyalty_evidence_tampering
	}
	if = {
		limit = { has_loyalty = loyalty_found_innocent }
		remove_loyalty = loyalty_found_innocent
	}
	if = {
		limit = { has_loyalty = loyalty_trial_fine }
		remove_loyalty = loyalty_trial_fine
	}
	if = {
		limit = { has_loyalty = loyalty_tarnished_family }
		remove_loyalty = loyalty_tarnished_family
	}
	if = {
		limit = { has_loyalty = loyalty_republican_religious_laws }
		remove_loyalty = loyalty_republican_religious_laws
	}
	if = {
		limit = { has_loyalty = loyalty_republican_mediterranean_laws }
		remove_loyalty = loyalty_republican_mediterranean_laws
	}
	if = {
		limit = { has_loyalty = loyalty_republic_integration_laws }
		remove_loyalty = loyalty_republic_integration_laws
	}
	if = {
		limit = { has_loyalty = loyalty_republic_citizen_laws }
		remove_loyalty = loyalty_republic_citizen_laws
	}
	if = {
		limit = { has_loyalty = loyalty_republican_land_reforms }
		remove_loyalty = loyalty_republican_land_reforms
	}
	if = {
		limit = { has_loyalty = loyalty_republic_military_recruitment_laws }
		remove_loyalty = loyalty_republic_military_recruitment_laws
	}
	if = {
		limit = { has_loyalty = loyalty_republic_election_reforms }
		remove_loyalty = loyalty_republic_election_reforms
	}
	if = {
		limit = { has_loyalty = loyalty_corruption_laws }
		remove_loyalty = loyalty_corruption_laws
	}
	if = {
		limit = { has_loyalty = loyalty_corruption_laws_rom }
		remove_loyalty = loyalty_corruption_laws_rom
	}
	if = {
		limit = { has_loyalty = loyalty_republican_mediterranean_laws_rom }
		remove_loyalty = loyalty_republican_mediterranean_laws_rom
	}
	if = {
		limit = { has_loyalty = loyalty_republic_integration_laws_rom }
		remove_loyalty = loyalty_republic_integration_laws_rom
	}
	if = {
		limit = { has_loyalty = loyalty_republic_citizen_laws_rom }
		remove_loyalty = loyalty_republic_citizen_laws_rom
	}
	if = {
		limit = { has_loyalty = loyalty_republican_land_reforms_rom }
		remove_loyalty = loyalty_republican_land_reforms_rom
	}
	if = {
		limit = { has_loyalty = loyalty_republic_military_recruitment_laws_rom }
		remove_loyalty = loyalty_republic_military_recruitment_laws_rom
	}
	if = {
		limit = { has_loyalty = loyalty_republic_election_reforms_rom }
		remove_loyalty = loyalty_republic_election_reforms_rom
	}
	if = {
		limit = { has_loyalty = loyalty_centralize_court }
		remove_loyalty = loyalty_centralize_court
	}
	if = {
		limit = { has_loyalty = loyalty_pyrrhus_travelling }
		remove_loyalty = loyalty_pyrrhus_travelling
	}
	if = {
		limit = { has_loyalty = loyalty_fled_battle }
		remove_loyalty = loyalty_fled_battle
	}
	if = {
		limit = { has_loyalty = loyalty_reckless_leader }
		remove_loyalty = loyalty_reckless_leader
	}
	if = {
		limit = { has_loyalty = loyalty_incompetent_leader }
		remove_loyalty = loyalty_incompetent_leader
	}
	if = {
		limit = { has_loyalty = loyalty_offered_refuge }
		remove_loyalty = loyalty_offered_refuge
	}
	if = {
		limit = { has_loyalty = loyalty_an_eye_for_aesthetics }
		remove_loyalty = loyalty_an_eye_for_aesthetics
	}
	if = {
		limit = { has_loyalty = loyalty_an_eye_for_aesthetics }
		remove_loyalty = loyalty_an_eye_for_aesthetics
	}
	if = {
		limit = { has_loyalty = loyalty_an_unwelcome_gift }
		remove_loyalty = loyalty_an_unwelcome_gift
	}
	if = {
		limit = { has_loyalty = loyalty_spared_scapegoat }
		remove_loyalty = loyalty_spared_scapegoat
	}
	if = {
		limit = { has_loyalty = loyalty_curiate_ignored }
		remove_loyalty = loyalty_curiate_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_curiate_endorsment }
		remove_loyalty = loyalty_curiate_endorsment
	}
	if = {
		limit = { has_loyalty = loyalty_curiate_large_endorsment }
		remove_loyalty = loyalty_curiate_large_endorsment
	}
	if = {
		limit = { has_loyalty = loyalty_curiate_rebuked_endorsment }
		remove_loyalty = loyalty_curiate_rebuked_endorsment
	}
	if = {
		limit = { has_loyalty = loyalty_inheritance_divided }
		remove_loyalty = loyalty_inheritance_divided
	}
	if = {
		limit = { has_loyalty = loyalty_inheritance_defended }
		remove_loyalty = loyalty_inheritance_defended
	}
	if = {
		limit = { has_loyalty = loyalty_scandal_ignored }
		remove_loyalty = loyalty_scandal_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_scandal_placated }
		remove_loyalty = loyalty_scandal_placated
	}
	if = {
		limit = { has_loyalty = loyalty_scandal_flogged }
		remove_loyalty = loyalty_scandal_flogged
	}
	if = {
		limit = { has_loyalty = loyalty_swayed_friend }
		remove_loyalty = loyalty_swayed_friend
	}
	if = {
		limit = { has_loyalty = loyalty_pretender_protected }
		remove_loyalty = loyalty_pretender_protected
	}
	if = {
		limit = { has_loyalty = loyalty_education_diverted }
		remove_loyalty = loyalty_education_diverted
	}
	if = {
		limit = { has_loyalty = loyalty_returning_mercenary }
		remove_loyalty = loyalty_returning_mercenary
	}
	if = {
		limit = { has_loyalty = loyalty_mercenary_support }
		remove_loyalty = loyalty_mercenary_support
	}
	if = {
		limit = { has_loyalty = loyalty_outraged_commander }
		remove_loyalty = loyalty_outraged_commander
	}
	if = {
		limit = { has_loyalty = loyalty_jealous_governor }
		remove_loyalty = loyalty_jealous_governor
	}
	if = {
		limit = { has_loyalty = loyalty_defended_governor }
		remove_loyalty = loyalty_defended_governor
	}
	if = {
		limit = { has_loyalty = loyalty_governor_oversight }
		remove_loyalty = loyalty_governor_oversight
	}
	if = {
		limit = { has_loyalty = loyalty_governor_removed }
		remove_loyalty = loyalty_governor_removed
	}
	if = {
		limit = { has_loyalty = loyalty_feast_refused }
		remove_loyalty = loyalty_feast_refused
	}
	if = {
		limit = { has_loyalty = loyalty_feast_stolen }
		remove_loyalty = loyalty_feast_stolen
	}
	if = {
		limit = { has_loyalty = loyalty_patronage_redirected }
		remove_loyalty = loyalty_patronage_redirected
	}
	if = {
		limit = { has_loyalty = loyalty_patronage_meddled }
		remove_loyalty = loyalty_patronage_meddled
	}
	if = {
		limit = { has_loyalty = loyalty_province_ignored }
		remove_loyalty = loyalty_province_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_slaves_freed }
		remove_loyalty = loyalty_slaves_freed
	}
	if = {
		limit = { has_loyalty = loyalty_slaves_defended }
		remove_loyalty = loyalty_slaves_defended
	}
	if = {
		limit = { has_loyalty = loyalty_temple_restored }
		remove_loyalty = loyalty_temple_restored
	}
	if = {
		limit = { has_loyalty = loyalty_temple_unfunded }
		remove_loyalty = loyalty_temple_unfunded
	}
	if = {
		limit = { has_loyalty = loyalty_temple_expanded }
		remove_loyalty = loyalty_temple_expanded
	}
	if = {
		limit = { has_loyalty = loyalty_grateful_governor }
		remove_loyalty = loyalty_grateful_governor
	}
	if = {
		limit = { has_loyalty = loyalty_preferred_city }
		remove_loyalty = loyalty_preferred_city
	}
	if = {
		limit = { has_loyalty = loyalty_unpreferred_city }
		remove_loyalty = loyalty_unpreferred_city
	}
	if = {
		limit = { has_loyalty = loyalty_slaves_returned_to }
		remove_loyalty = loyalty_slaves_returned_to
	}
	if = {
		limit = { has_loyalty = loyalty_slaves_returned_from }
		remove_loyalty = loyalty_slaves_returned_from
	}
	if = {
		limit = { has_loyalty = loyalty_slaves_purchased_back }
		remove_loyalty = loyalty_slaves_purchased_back
	}
	if = {
		limit = { has_loyalty = loyalty_slaves_stolen }
		remove_loyalty = loyalty_slaves_stolen
	}
	if = {
		limit = { has_loyalty = loyalty_slaves_kept }
		remove_loyalty = loyalty_slaves_kept
	}
	if = {
		limit = { has_loyalty = loyalty_workforce_recruited }
		remove_loyalty = loyalty_workforce_recruited
	}
	if = {
		limit = { has_loyalty = loyalty_workforce_repurposed }
		remove_loyalty = loyalty_workforce_repurposed
	}
	if = {
		limit = { has_loyalty = loyalty_civil_war_victory }
		remove_loyalty = loyalty_civil_war_victory
	}
	if = {
		limit = { has_loyalty = loyalty_denied_soldier_honors }
		remove_loyalty = loyalty_denied_soldier_honors
	}
	if = {
		limit = { has_loyalty = loyalty_denied_service_honors }
		remove_loyalty = loyalty_denied_service_honors
	}
	if = {
		limit = { has_loyalty = loyalty_generals_friend_favored }
		remove_loyalty = loyalty_generals_friend_favored
	}
	if = {
		limit = { has_loyalty = loyalty_generals_friend_refused }
		remove_loyalty = loyalty_generals_friend_refused
	}
	if = {
		limit = { has_loyalty = loyalty_refused_generals_friend }
		remove_loyalty = loyalty_refused_generals_friend
	}
	if = {
		limit = { has_loyalty = loyalty_general_demands_granted }
		remove_loyalty = loyalty_general_demands_granted
	}
	if = {
		limit = { has_loyalty = loyalty_general_demands_refused }
		remove_loyalty = loyalty_general_demands_refused
	}
	if = {
		limit = { has_loyalty = loyalty_general_law_granted }
		remove_loyalty = loyalty_general_law_granted
	}
	if = {
		limit = { has_loyalty = loyalty_general_law_refused }
		remove_loyalty = loyalty_general_law_refused
	}
	if = {
		limit = { has_loyalty = loyalty_general_recruitment_granted }
		remove_loyalty = loyalty_general_recruitment_granted
	}
	if = {
		limit = { has_loyalty = loyalty_general_recruitment_refused }
		remove_loyalty = loyalty_general_recruitment_refused
	}
	if = {
		limit = { has_loyalty = loyalty_general_funds_granted }
		remove_loyalty = loyalty_general_funds_granted
	}
	if = {
		limit = { has_loyalty = loyalty_general_funds_refused }
		remove_loyalty = loyalty_general_funds_refused
	}
	if = {
		limit = { has_loyalty = loyalty_general_troops_granted }
		remove_loyalty = loyalty_general_troops_granted
	}
	if = {
		limit = { has_loyalty = loyalty_general_troops_refused }
		remove_loyalty = loyalty_general_troops_refused
	}
	if = {
		limit = { has_loyalty = loyalty_general_nobility_granted }
		remove_loyalty = loyalty_general_nobility_granted
	}
	if = {
		limit = { has_loyalty = loyalty_general_nobility_refused }
		remove_loyalty = loyalty_general_nobility_refused
	}
	if = {
		limit = { has_loyalty = loyalty_general_volunteers_doubt }
		remove_loyalty = loyalty_general_volunteers_doubt
	}
	if = {
		limit = { has_loyalty = loyalty_friends_across_borders }
		remove_loyalty = loyalty_friends_across_borders
	}
	if = {
		limit = { has_loyalty = loyalty_feudatory_settlers_allowed }
		remove_loyalty = loyalty_feudatory_settlers_allowed
	}
	if = {
		limit = { has_loyalty = loyalty_feudatory_settlers_barred }
		remove_loyalty = loyalty_feudatory_settlers_barred
	}
	if = {
		limit = { has_loyalty = loyalty_feudatory_settlers_ignored_advisor }
		remove_loyalty = loyalty_feudatory_settlers_ignored_advisor
	}
	if = {
		limit = { has_loyalty = loyalty_feudatory_settlers_advisor_success }
		remove_loyalty = loyalty_feudatory_settlers_advisor_success
	}
	if = {
		limit = { has_loyalty = loyalty_feudatory_settlers_calmed }
		remove_loyalty = loyalty_feudatory_settlers_calmed
	}
	if = {
		limit = { has_loyalty = loyalty_feudatory_settlers_killed }
		remove_loyalty = loyalty_feudatory_settlers_killed
	}
	if = {
		limit = { has_loyalty = loyalty_refused_overlord_aid }
		remove_loyalty = loyalty_refused_overlord_aid
	}
	if = {
		limit = { has_loyalty = loyalty_lost_ones_abandoned }
		remove_loyalty = loyalty_lost_ones_abandoned
	}
	if = {
		limit = { has_loyalty = loyalty_military_supplies_sold }
		remove_loyalty = loyalty_military_supplies_sold
	}
	if = {
		limit = { has_loyalty = loyalty_wealth_requisitioned }
		remove_loyalty = loyalty_wealth_requisitioned
	}
	if = {
		limit = { has_loyalty = loyalty_research_neutered }
		remove_loyalty = loyalty_research_neutered
	}
	if = {
		limit = { has_loyalty = loyalty_faction_suggestion_refused }
		remove_loyalty = loyalty_faction_suggestion_refused
	}
	if = {
		limit = { has_loyalty = loyalty_faction_compromise_refused }
		remove_loyalty = loyalty_faction_compromise_refused
	}
	if = {
		limit = { has_loyalty = loyalty_faction_favors_returned }
		remove_loyalty = loyalty_faction_favors_returned
	}
	if = {
		limit = { has_loyalty = loyalty_faction_bribe_returned }
		remove_loyalty = loyalty_faction_bribe_returned
	}
	if = {
		limit = { has_loyalty = loyalty_faction_convinced }
		remove_loyalty = loyalty_faction_convinced
	}
	if = {
		limit = { has_loyalty = loyalty_faction_refused_repayment }
		remove_loyalty = loyalty_faction_refused_repayment
	}
	if = {
		limit = { has_loyalty = loyalty_faction_bribery_revealed }
		remove_loyalty = loyalty_faction_bribery_revealed
	}
	if = {
		limit = { has_loyalty = loyalty_faction_populists_refused }
		remove_loyalty = loyalty_faction_populists_refused
	}
	if = {
		limit = { has_loyalty = loyalty_family_revolt }
		remove_loyalty = loyalty_family_revolt
	}
	if = {
		limit = { has_loyalty = loyalty_flavor_arm_not_supporting }
		remove_loyalty = loyalty_flavor_arm_not_supporting
	}
	if = {
		limit = { has_loyalty = loyalty_flavor_arm_ariarathes_reinstated }
		remove_loyalty = loyalty_flavor_arm_ariarathes_reinstated
	}
	if = {
		limit = { has_loyalty = loyalty_flavor_arm_ariarathes_killed }
		remove_loyalty = loyalty_flavor_arm_ariarathes_killed
	}
	if = {
		limit = { has_loyalty = loyalty_flavor_egy_hellenic_sidelined }
		remove_loyalty = loyalty_flavor_egy_hellenic_sidelined
	}
	if = {
		limit = { has_loyalty = loyalty_food_governor_relief }
		remove_loyalty = loyalty_food_governor_relief
	}
	if = {
		limit = { has_loyalty = loyalty_food_governor_pays }
		remove_loyalty = loyalty_food_governor_pays
	}
	if = {
		limit = { has_loyalty = loyalty_food_more_relief }
		remove_loyalty = loyalty_food_more_relief
	}
	if = {
		limit = { has_loyalty = loyalty_food_diverted_to }
		remove_loyalty = loyalty_food_diverted_to
	}
	if = {
		limit = { has_loyalty = loyalty_food_diverted_from }
		remove_loyalty = loyalty_food_diverted_from
	}
	if = {
		limit = { has_loyalty = loyalty_food_holdings_removed }
		remove_loyalty = loyalty_food_holdings_removed
	}
	if = {
		limit = { has_loyalty = loyalty_food_arrested }
		remove_loyalty = loyalty_food_arrested
	}
	if = {
		limit = { has_loyalty = loyalty_food_incompetence_ignored }
		remove_loyalty = loyalty_food_incompetence_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_food_boon_distributed }
		remove_loyalty = loyalty_food_boon_distributed
	}
	if = {
		limit = { has_loyalty = loyalty_food_boon_appropriated }
		remove_loyalty = loyalty_food_boon_appropriated
	}
	if = {
		limit = { has_loyalty = loyalty_food_boon_aggrandizement }
		remove_loyalty = loyalty_food_boon_aggrandizement
	}
	if = {
		limit = { has_loyalty = loyalty_food_benign_neglect }
		remove_loyalty = loyalty_food_benign_neglect
	}
	if = {
		limit = { has_loyalty = loyalty_food_advisors_procured }
		remove_loyalty = loyalty_food_advisors_procured
	}
	if = {
		limit = { has_loyalty = loyalty_food_granary_replaced }
		remove_loyalty = loyalty_food_granary_replaced
	}
	if = {
		limit = { has_loyalty = loyalty_food_granary_abandoned }
		remove_loyalty = loyalty_food_granary_abandoned
	}
	if = {
		limit = { has_loyalty = loyalty_food_standards_covered }
		remove_loyalty = loyalty_food_standards_covered
	}
	if = {
		limit = { has_loyalty = loyalty_food_disaster_blame }
		remove_loyalty = loyalty_food_disaster_blame
	}
	if = {
		limit = { has_loyalty = loyalty_food_crucified_handlers }
		remove_loyalty = loyalty_food_crucified_handlers
	}
	if = {
		limit = { has_loyalty = loyalty_food_plight_ignored }
		remove_loyalty = loyalty_food_plight_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_food_returned_food }
		remove_loyalty = loyalty_food_returned_food
	}
	if = {
		limit = { has_loyalty = loyalty_mentee_lesson }
		remove_loyalty = loyalty_mentee_lesson
	}
	if = {
		limit = { has_loyalty = loyalty_friendship_overruled }
		remove_loyalty = loyalty_friendship_overruled
	}
	if = {
		limit = { has_loyalty = loyalty_convinced_against_ruler }
		remove_loyalty = loyalty_convinced_against_ruler
	}
	if = {
		limit = { has_loyalty = loyalty_denounced_curs }
		remove_loyalty = loyalty_denounced_curs
	}
	if = {
		limit = { has_loyalty = loyalty_xenophobia_unchecked }
		remove_loyalty = loyalty_xenophobia_unchecked
	}
	if = {
		limit = { has_loyalty = loyalty_offed_declined }
		remove_loyalty = loyalty_offed_declined
	}
	if = {
		limit = { has_loyalty = loyalty_influence_punished }
		remove_loyalty = loyalty_influence_punished
	}
	if = {
		limit = { has_loyalty = loyalty_payment_favor }
		remove_loyalty = loyalty_payment_favor
	}
	if = {
		limit = { has_loyalty = loyalty_unrewarded }
		remove_loyalty = loyalty_unrewarded
	}
	if = {
		limit = { has_loyalty = loyalty_governor_compensation }
		remove_loyalty = loyalty_governor_compensation
	}
	if = {
		limit = { has_loyalty = loyalty_governor_resignation }
		remove_loyalty = loyalty_governor_resignation
	}
	if = {
		limit = { has_loyalty = loyalty_governor_supported }
		remove_loyalty = loyalty_governor_supported
	}
	if = {
		limit = { has_loyalty = loyalty_office_excuses }
		remove_loyalty = loyalty_office_excuses
	}
	if = {
		limit = { has_loyalty = loyalty_friend_office_grant }
		remove_loyalty = loyalty_friend_office_grant
	}
	if = {
		limit = { has_loyalty = loyalty_prisoner_relative_leniency }
		remove_loyalty = loyalty_prisoner_relative_leniency
	}
	if = {
		limit = { has_loyalty = loyalty_prisoner_relative_stubborn }
		remove_loyalty = loyalty_prisoner_relative_stubborn
	}
	if = {
		limit = { has_loyalty = loyalty_prisoner_relative_flogged }
		remove_loyalty = loyalty_prisoner_relative_flogged
	}
	if = {
		limit = { has_loyalty = loyalty_prisoner_relative_floor }
		remove_loyalty = loyalty_prisoner_relative_floor
	}
	if = {
		limit = { has_loyalty = loyalty_trusted_commander }
		remove_loyalty = loyalty_trusted_commander
	}
	if = {
		limit = { has_loyalty = loyalty_ransomed_commander }
		remove_loyalty = loyalty_ransomed_commander
	}
	if = {
		limit = { has_loyalty = loyalty_interceded_behalf }
		remove_loyalty = loyalty_interceded_behalf
	}
	if = {
		limit = { has_loyalty = loyalty_left_to_free_self }
		remove_loyalty = loyalty_left_to_free_self
	}
	if = {
		limit = { has_loyalty = loyalty_leader_left_alone }
		remove_loyalty = loyalty_leader_left_alone
	}
	if = {
		limit = { has_loyalty = loyalty_leader_overseer }
		remove_loyalty = loyalty_leader_overseer
	}
	if = {
		limit = { has_loyalty = loyalty_leader_flogged }
		remove_loyalty = loyalty_leader_flogged
	}
	if = {
		limit = { has_loyalty = loyalty_compensated_merchant }
		remove_loyalty = loyalty_compensated_merchant
	}
	if = {
		limit = { has_loyalty = loyalty_dismissed_merchant }
		remove_loyalty = loyalty_dismissed_merchant
	}
	if = {
		limit = { has_loyalty = loyalty_bribed_commander }
		remove_loyalty = loyalty_bribed_commander
	}
	if = {
		limit = { has_loyalty = loyalty_veterans_neglected }
		remove_loyalty = loyalty_veterans_neglected
	}
	if = {
		limit = { has_loyalty = loyalty_god_incarnate }
		remove_loyalty = loyalty_god_incarnate
	}
	if = {
		limit = { has_loyalty = loyalty_refused_job_1 }
		remove_loyalty = loyalty_refused_job_1
	}
	if = {
		limit = { has_loyalty = loyalty_refused_job_2 }
		remove_loyalty = loyalty_refused_job_2
	}
	if = {
		limit = { has_loyalty = loyalty_refused_job_3 }
		remove_loyalty = loyalty_refused_job_3
	}
	if = {
		limit = { has_loyalty = loyalty_refused_job_4 }
		remove_loyalty = loyalty_refused_job_4
	}
	if = {
		limit = { has_loyalty = loyalty_stole_job_1 }
		remove_loyalty = loyalty_stole_job_1
	}
	if = {
		limit = { has_loyalty = loyalty_stole_job_2 }
		remove_loyalty = loyalty_stole_job_2
	}
	if = {
		limit = { has_loyalty = loyalty_stole_job_3 }
		remove_loyalty = loyalty_stole_job_3
	}
	if = {
		limit = { has_loyalty = loyalty_stole_job_4 }
		remove_loyalty = loyalty_stole_job_4
	}
	if = {
		limit = { has_loyalty = loyalty_supported_heir }
		remove_loyalty = loyalty_supported_heir
	}
	if = {
		limit = { has_loyalty = loyalty_unsupported_heir }
		remove_loyalty = loyalty_unsupported_heir
	}
	if = {
		limit = { has_loyalty = loyalty_trusted_servant }
		remove_loyalty = loyalty_trusted_servant
	}
	if = {
		limit = { has_loyalty = loyalty_forewarned_plot }
		remove_loyalty = loyalty_forewarned_plot
	}
	if = {
		limit = { has_loyalty = loyalty_surveillance_discovered }
		remove_loyalty = loyalty_surveillance_discovered
	}
	if = {
		limit = { has_loyalty = loyalty_plot_appeal_granted }
		remove_loyalty = loyalty_plot_appeal_granted
	}
	if = {
		limit = { has_loyalty = loyalty_plot_appeal_jealousy }
		remove_loyalty = loyalty_plot_appeal_jealousy
	}
	if = {
		limit = { has_loyalty = loyalty_plot_appeal_token }
		remove_loyalty = loyalty_plot_appeal_token
	}
	if = {
		limit = { has_loyalty = loyalty_plot_appeal_insulted }
		remove_loyalty = loyalty_plot_appeal_insulted
	}
	if = {
		limit = { has_loyalty = loyalty_infighting_stopped }
		remove_loyalty = loyalty_infighting_stopped
	}
	if = {
		limit = { has_loyalty = loyalty_poisoner_vindicated }
		remove_loyalty = loyalty_poisoner_vindicated
	}
	if = {
		limit = { has_loyalty = loyalty_poisoned_abandoned }
		remove_loyalty = loyalty_poisoned_abandoned
	}
	if = {
		limit = { has_loyalty = loyalty_ruined_reputation }
		remove_loyalty = loyalty_ruined_reputation
	}
	if = {
		limit = { has_loyalty = loyalty_schemer_corrupted }
		remove_loyalty = loyalty_schemer_corrupted
	}
	if = {
		limit = { has_loyalty = loyalty_plot_laughed_off }
		remove_loyalty = loyalty_plot_laughed_off
	}
	if = {
		limit = { has_loyalty = loyalty_embezzler_forgiven }
		remove_loyalty = loyalty_embezzler_forgiven
	}
	if = {
		limit = { has_loyalty = loyalty_embezzler_fine }
		remove_loyalty = loyalty_embezzler_fine
	}
	if = {
		limit = { has_loyalty = loyalty_embezzler_fired }
		remove_loyalty = loyalty_embezzler_fired
	}
	if = {
		limit = { has_loyalty = loyalty_embezzler_imprisoned }
		remove_loyalty = loyalty_embezzler_imprisoned
	}
	if = {
		limit = { has_loyalty = loyalty_embezzler_congratulated }
		remove_loyalty = loyalty_embezzler_congratulated
	}
	if = {
		limit = { has_loyalty = loyalty_general_relieved }
		remove_loyalty = loyalty_general_relieved
	}
	if = {
		limit = { has_loyalty = loyalty_general_imprisoned }
		remove_loyalty = loyalty_general_imprisoned
	}
	if = {
		limit = { has_loyalty = loyalty_plot_publicized }
		remove_loyalty = loyalty_plot_publicized
	}
	if = {
		limit = { has_loyalty = loyalty_plot_publicized_relative }
		remove_loyalty = loyalty_plot_publicized_relative
	}
	if = {
		limit = { has_loyalty = loyalty_bitter_plotter }
		remove_loyalty = loyalty_bitter_plotter
	}
	if = {
		limit = { has_loyalty = loyalty_bitter_plotter_relative }
		remove_loyalty = loyalty_bitter_plotter_relative
	}
	if = {
		limit = { has_loyalty = loyalty_plot_endorsed }
		remove_loyalty = loyalty_plot_endorsed
	}
	if = {
		limit = { has_loyalty = loyalty_botched_plotter_imprisoned }
		remove_loyalty = loyalty_botched_plotter_imprisoned
	}
	if = {
		limit = { has_loyalty = loyalty_betrayed_plotter }
		remove_loyalty = loyalty_betrayed_plotter
	}
	if = {
		limit = { has_loyalty = loyalty_imprisoned_plotter }
		remove_loyalty = loyalty_imprisoned_plotter
	}
	if = {
		limit = { has_loyalty = loyalty_plotter_unpunished }
		remove_loyalty = loyalty_plotter_unpunished
	}
	if = {
		limit = { has_loyalty = loyalty_victory_supported }
		remove_loyalty = loyalty_victory_supported
	}
	if = {
		limit = { has_loyalty = loyalty_victory_unsupported }
		remove_loyalty = loyalty_victory_unsupported
	}
	if = {
		limit = { has_loyalty = loyalty_defeat_supported }
		remove_loyalty = loyalty_defeat_supported
	}
	if = {
		limit = { has_loyalty = loyalty_defeat_unsupported }
		remove_loyalty = loyalty_defeat_unsupported
	}
	if = {
		limit = { has_loyalty = loyalty_duel_shunned }
		remove_loyalty = loyalty_duel_shunned
	}
	if = {
		limit = { has_loyalty = loyalty_assassination_legitimized_victim }
		remove_loyalty = loyalty_assassination_legitimized_victim
	}
	if = {
		limit = { has_loyalty = loyalty_assassination_legitimized_assassin }
		remove_loyalty = loyalty_assassination_legitimized_assassin
	}
	if = {
		limit = { has_loyalty = loyalty_assassination_delegitimized_victim }
		remove_loyalty = loyalty_assassination_delegitimized_victim
	}
	if = {
		limit = { has_loyalty = loyalty_assassination_delegitimized_assassin }
		remove_loyalty = loyalty_assassination_delegitimized_assassin
	}
	if = {
		limit = { has_loyalty = loyalty_plotter_punished }
		remove_loyalty = loyalty_plotter_punished
	}
	if = {
		limit = { has_loyalty = loyalty_infighting_encouraged }
		remove_loyalty = loyalty_infighting_encouraged
	}
	if = {
		limit = { has_loyalty = loyalty_imprisoned_jealous }
		remove_loyalty = loyalty_imprisoned_jealous
	}
	if = {
		limit = { has_loyalty = loyalty_family_jealousy }
		remove_loyalty = loyalty_family_jealousy
	}
	if = {
		limit = { has_loyalty = loyalty_family_grateful }
		remove_loyalty = loyalty_family_grateful
	}
	if = {
		limit = { has_loyalty = loyalty_invited_banquet }
		remove_loyalty = loyalty_invited_banquet
	}
	if = {
		limit = { has_loyalty = loyalty_invited_banquet_false }
		remove_loyalty = loyalty_invited_banquet_false
	}
	if = {
		limit = { has_loyalty = loyalty_consort_reassured }
		remove_loyalty = loyalty_consort_reassured
	}
	if = {
		limit = { has_loyalty = loyalty_consort_reassured_2 }
		remove_loyalty = loyalty_consort_reassured_2
	}
	if = {
		limit = { has_loyalty = loyalty_bastard_legitimized }
		remove_loyalty = loyalty_bastard_legitimized
	}
	if = {
		limit = { has_loyalty = loyalty_bastard_legitimized_pretender }
		remove_loyalty = loyalty_bastard_legitimized_pretender
	}
	if = {
		limit = { has_loyalty = loyalty_old_consort }
		remove_loyalty = loyalty_old_consort
	}
	if = {
		limit = { has_loyalty = loyalty_new_consort }
		remove_loyalty = loyalty_new_consort
	}
	if = {
		limit = { has_loyalty = loyalty_legitimized_bastard }
		remove_loyalty = loyalty_legitimized_bastard
	}
	if = {
		limit = { has_loyalty = loyalty_bastard_denied }
		remove_loyalty = loyalty_bastard_denied
	}
	if = {
		limit = { has_loyalty = loyalty_denied_bastard }
		remove_loyalty = loyalty_denied_bastard
	}
	if = {
		limit = { has_loyalty = loyalty_cuckold_revealed }
		remove_loyalty = loyalty_cuckold_revealed
	}
	if = {
		limit = { has_loyalty = loyalty_heir_plot_ignored }
		remove_loyalty = loyalty_heir_plot_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_consort_plot_ignored }
		remove_loyalty = loyalty_consort_plot_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_consorts_heir_ignored }
		remove_loyalty = loyalty_consorts_heir_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_consort_bought_off }
		remove_loyalty = loyalty_consort_bought_off
	}
	if = {
		limit = { has_loyalty = loyalty_consort_children }
		remove_loyalty = loyalty_consort_children
	}
	if = {
		limit = { has_loyalty = loyalty_heir_plot_support }
		remove_loyalty = loyalty_heir_plot_support
	}
	if = {
		limit = { has_loyalty = loyalty_consort_plot_scuppered }
		remove_loyalty = loyalty_consort_plot_scuppered
	}
	if = {
		limit = { has_loyalty = loyalty_heir_risks_taken }
		remove_loyalty = loyalty_heir_risks_taken
	}
	if = {
		limit = { has_loyalty = loyalty_consort_plot_success }
		remove_loyalty = loyalty_consort_plot_success
	}
	if = {
		limit = { has_loyalty = loyalty_heir_execution }
		remove_loyalty = loyalty_heir_execution
	}
	if = {
		limit = { has_loyalty = loyalty_consort_execution }
		remove_loyalty = loyalty_consort_execution
	}
	if = {
		limit = { has_loyalty = loyalty_heir_imprison }
		remove_loyalty = loyalty_heir_imprison
	}
	if = {
		limit = { has_loyalty = loyalty_heir_imprison_2 }
		remove_loyalty = loyalty_heir_imprison_2
	}
	if = {
		limit = { has_loyalty = loyalty_consort_imprison }
		remove_loyalty = loyalty_consort_imprison
	}
	if = {
		limit = { has_loyalty = loyalty_consort_spared }
		remove_loyalty = loyalty_consort_spared
	}
	if = {
		limit = { has_loyalty = loyalty_heir_spared }
		remove_loyalty = loyalty_heir_spared
	}
	if = {
		limit = { has_loyalty = loyalty_consort_eye_for_eye }
		remove_loyalty = loyalty_consort_eye_for_eye
	}
	if = {
		limit = { has_loyalty = loyalty_heir_my_boy }
		remove_loyalty = loyalty_heir_my_boy
	}
	if = {
		limit = { has_loyalty = loyalty_consort_my_boy }
		remove_loyalty = loyalty_consort_my_boy
	}
	if = {
		limit = { has_loyalty = loyalty_consort_regency_approved }
		remove_loyalty = loyalty_consort_regency_approved
	}
	if = {
		limit = { has_loyalty = loyalty_consort_regency_refused }
		remove_loyalty = loyalty_consort_regency_refused
	}
	if = {
		limit = { has_loyalty = loyalty_consort_regency_uninterested }
		remove_loyalty = loyalty_consort_regency_uninterested
	}
	if = {
		limit = { has_loyalty = loyalty_consort_convinced }
		remove_loyalty = loyalty_consort_convinced
	}
	if = {
		limit = { has_loyalty = loyalty_heir_consort_execute_mother }
		remove_loyalty = loyalty_heir_consort_execute_mother
	}
	if = {
		limit = { has_loyalty = loyalty_heir_consort_spared_mother }
		remove_loyalty = loyalty_heir_consort_spared_mother
	}
	if = {
		limit = { has_loyalty = loyalty_lunatic_stab_heir_mother }
		remove_loyalty = loyalty_lunatic_stab_heir_mother
	}
	if = {
		limit = { has_loyalty = loyalty_saddle_up_consort }
		remove_loyalty = loyalty_saddle_up_consort
	}
	if = {
		limit = { has_loyalty = loyalty_saddle_up_consort_refused }
		remove_loyalty = loyalty_saddle_up_consort_refused
	}
	if = {
		limit = { has_loyalty = loyalty_victorious_consort }
		remove_loyalty = loyalty_victorious_consort
	}
	if = {
		limit = { has_loyalty = loyalty_consort_responsibility }
		remove_loyalty = loyalty_consort_responsibility
	}
	if = {
		limit = { has_loyalty = loyalty_consort_initiative_general_1 }
		remove_loyalty = loyalty_consort_initiative_general_1
	}
	if = {
		limit = { has_loyalty = loyalty_consort_initiative_general_2 }
		remove_loyalty = loyalty_consort_initiative_general_2
	}
	if = {
		limit = { has_loyalty = loyalty_consort_initiative_general_3 }
		remove_loyalty = loyalty_consort_initiative_general_3
	}
	if = {
		limit = { has_loyalty = loyalty_consort_initiative_general_rejected }
		remove_loyalty = loyalty_consort_initiative_general_rejected
	}
	if = {
		limit = { has_loyalty = loyalty_consort_initiative_rejected }
		remove_loyalty = loyalty_consort_initiative_rejected
	}
	if = {
		limit = { has_loyalty = loyalty_banished_affair }
		remove_loyalty = loyalty_banished_affair
	}
	if = {
		limit = { has_loyalty = loyalty_leader_imprisoned }
		remove_loyalty = loyalty_leader_imprisoned
	}
	if = {
		limit = { has_loyalty = loyalty_senatorial_commander }
		remove_loyalty = loyalty_senatorial_commander
	}
	if = {
		limit = { has_loyalty = loyalty_demanded_resignation }
		remove_loyalty = loyalty_demanded_resignation
	}
	if = {
		limit = { has_loyalty = loyalty_inheritance_granted }
		remove_loyalty = loyalty_inheritance_granted
	}
	if = {
		limit = { has_loyalty = loyalty_inheritance_split }
		remove_loyalty = loyalty_inheritance_split
	}
	if = {
		limit = { has_loyalty = loyalty_inheritance_confiscate }
		remove_loyalty = loyalty_inheritance_confiscate
	}
	if = {
		limit = { has_loyalty = loyalty_befriended_traitor }
		remove_loyalty = loyalty_befriended_traitor
	}
	if = {
		limit = { has_loyalty = loyalty_offered_protection }
		remove_loyalty = loyalty_offered_protection
	}
	if = {
		limit = { has_loyalty = loyalty_offered_protection }
		remove_loyalty = loyalty_offered_protection
	}
	if = {
		limit = { has_loyalty = loyalty_restored_estates }
		remove_loyalty = loyalty_restored_estates
	}
	if = {
		limit = { has_loyalty = loyalty_redistributed_estates }
		remove_loyalty = loyalty_redistributed_estates
	}
	if = {
		limit = { has_loyalty = loyalty_refused_help }
		remove_loyalty = loyalty_refused_help
	}
	if = {
		limit = { has_loyalty = loyalty_waived_fine }
		remove_loyalty = loyalty_waived_fine
	}
	if = {
		limit = { has_loyalty = loyalty_refused_bribe }
		remove_loyalty = loyalty_refused_bribe
	}
	if = {
		limit = { has_loyalty = loyalty_publicly_slandered }
		remove_loyalty = loyalty_publicly_slandered
	}
	if = {
		limit = { has_loyalty = loyalty_kept_office }
		remove_loyalty = loyalty_kept_office
	}
	if = {
		limit = { has_loyalty = loyalty_promises_made }
		remove_loyalty = loyalty_promises_made
	}
	if = {
		limit = { has_loyalty = loyalty_trusted_commander_restructure }
		remove_loyalty = loyalty_trusted_commander_restructure
	}
	if = {
		limit = { has_loyalty = loyalty_restructure_commander_untrusted }
		remove_loyalty = loyalty_restructure_commander_untrusted
	}
	if = {
		limit = { has_loyalty = loyalty_looting_unpunished }
		remove_loyalty = loyalty_looting_unpunished
	}
	if = {
		limit = { has_loyalty = loyalty_refused_populists }
		remove_loyalty = loyalty_refused_populists
	}
	if = {
		limit = { has_loyalty = loyalty_dictator_powers_refused }
		remove_loyalty = loyalty_dictator_powers_refused
	}
	if = {
		limit = { has_loyalty = loyalty_law_approved }
		remove_loyalty = loyalty_law_approved
	}
	if = {
		limit = { has_loyalty = loyalty_law_rejected }
		remove_loyalty = loyalty_law_rejected
	}
	if = {
		limit = { has_loyalty = loyalty_reforms_embraced }
		remove_loyalty = loyalty_reforms_embraced
	}
	if = {
		limit = { has_loyalty = loyalty_reforms_refused }
		remove_loyalty = loyalty_reforms_refused
	}
	if = {
		limit = { has_loyalty = loyalty_consul_disagreement }
		remove_loyalty = loyalty_consul_disagreement
	}
	if = {
		limit = { has_loyalty = loyalty_optimates_upset }
		remove_loyalty = loyalty_optimates_upset
	}
	if = {
		limit = { has_loyalty = loyalty_consul_compromise_1 }
		remove_loyalty = loyalty_consul_compromise_1
	}
	if = {
		limit = { has_loyalty = loyalty_consul_compromise_2 }
		remove_loyalty = loyalty_consul_compromise_2
	}
	if = {
		limit = { has_loyalty = loyalty_consul_aggravation_1 }
		remove_loyalty = loyalty_consul_aggravation_1
	}
	if = {
		limit = { has_loyalty = loyalty_consul_aggravation_2 }
		remove_loyalty = loyalty_consul_aggravation_2
	}
	if = {
		limit = { has_loyalty = loyalty_populists_upset }
		remove_loyalty = loyalty_populists_upset
	}
	if = {
		limit = { has_loyalty = loyalty_publicly_humiliated }
		remove_loyalty = loyalty_publicly_humiliated
	}
	if = {
		limit = { has_loyalty = loyalty_humiliation_apology }
		remove_loyalty = loyalty_humiliation_apology
	}
	if = {
		limit = { has_loyalty = loyalty_consul_bribe }
		remove_loyalty = loyalty_consul_bribe
	}
	if = {
		limit = { has_loyalty = loyalty_military_upset }
		remove_loyalty = loyalty_military_upset
	}
	if = {
		limit = { has_loyalty = loyalty_military_pleased }
		remove_loyalty = loyalty_military_pleased
	}
	if = {
		limit = { has_loyalty = loyalty_governor_project_bestowed_1 }
		remove_loyalty = loyalty_governor_project_bestowed_1
	}
	if = {
		limit = { has_loyalty = loyalty_governor_project_bestowed_2 }
		remove_loyalty = loyalty_governor_project_bestowed_2
	}
	if = {
		limit = { has_loyalty = loyalty_smeared_plotter }
		remove_loyalty = loyalty_smeared_plotter
	}
	if = {
		limit = { has_loyalty = loyalty_office_threatened }
		remove_loyalty = loyalty_office_threatened
	}
	if = {
		limit = { has_loyalty = loyalty_governor_responsibility_1 }
		remove_loyalty = loyalty_governor_responsibility_1
	}
	if = {
		limit = { has_loyalty = loyalty_governor_responsibility_2 }
		remove_loyalty = loyalty_governor_responsibility_2
	}
	if = {
		limit = { has_loyalty = loyalty_support_accepted_1 }
		remove_loyalty = loyalty_support_accepted_1
	}
	if = {
		limit = { has_loyalty = loyalty_support_accepted_2 }
		remove_loyalty = loyalty_support_accepted_2
	}
	if = {
		limit = { has_loyalty = loyalty_support_refused }
		remove_loyalty = loyalty_support_refused
	}
	if = {
		limit = { has_loyalty = loyalty_bought_support }
		remove_loyalty = loyalty_bought_support
	}
	if = {
		limit = { has_loyalty = loyalty_removed_office }
		remove_loyalty = loyalty_removed_office
	}
	if = {
		limit = { has_loyalty = loyalty_merciful_oligarch }
		remove_loyalty = loyalty_merciful_oligarch
	}
	if = {
		limit = { has_loyalty = loyalty_decorated_general }
		remove_loyalty = loyalty_decorated_general
	}
	if = {
		limit = { has_loyalty = loyalty_love_encouraged }
		remove_loyalty = loyalty_love_encouraged
	}
	if = {
		limit = { has_loyalty = loyalty_love_spurned_1 }
		remove_loyalty = loyalty_love_spurned_1
	}
	if = {
		limit = { has_loyalty = loyalty_love_spurned_2 }
		remove_loyalty = loyalty_love_spurned_2
	}
	if = {
		limit = { has_loyalty = loyalty_lies_revealed }
		remove_loyalty = loyalty_lies_revealed
	}
	if = {
		limit = { has_loyalty = loyalty_teaching_praised_1 }
		remove_loyalty = loyalty_teaching_praised_1
	}
	if = {
		limit = { has_loyalty = loyalty_teaching_praised_2 }
		remove_loyalty = loyalty_teaching_praised_2
	}
	if = {
		limit = { has_loyalty = loyalty_impious_ruler }
		remove_loyalty = loyalty_impious_ruler
	}
	if = {
		limit = { has_loyalty = loyalty_bribed_priest }
		remove_loyalty = loyalty_bribed_priest
	}
	if = {
		limit = { has_loyalty = loyalty_pious_ruler_thanks }
		remove_loyalty = loyalty_pious_ruler_thanks
	}
	if = {
		limit = { has_loyalty = loyalty_praised_despot_1 }
		remove_loyalty = loyalty_praised_despot_1
	}
	if = {
		limit = { has_loyalty = loyalty_praised_despot_2 }
		remove_loyalty = loyalty_praised_despot_2
	}
	if = {
		limit = { has_loyalty = loyalty_disappointed_plotters }
		remove_loyalty = loyalty_disappointed_plotters
	}
	if = {
		limit = { has_loyalty = loyalty_released_prison }
		remove_loyalty = loyalty_released_prison
	}
	if = {
		limit = { has_loyalty = loyalty_unreleased_prison }
		remove_loyalty = loyalty_unreleased_prison
	}
	if = {
		limit = { has_loyalty = loyalty_refused_request }
		remove_loyalty = loyalty_refused_request
	}
	if = {
		limit = { has_loyalty = loyalty_scolded_priest }
		remove_loyalty = loyalty_scolded_priest
	}
	if = {
		limit = { has_loyalty = loyalty_refused_responsibility }
		remove_loyalty = loyalty_refused_responsibility
	}
	if = {
		limit = { has_loyalty = loyalty_grateful_heir }
		remove_loyalty = loyalty_grateful_heir
	}
	if = {
		limit = { has_loyalty = loyalty_ungrateful_heir }
		remove_loyalty = loyalty_ungrateful_heir
	}
	if = {
		limit = { has_loyalty = loyalty_incompetent_heir }
		remove_loyalty = loyalty_incompetent_heir
	}
	if = {
		limit = { has_loyalty = loyalty_favored_heir }
		remove_loyalty = loyalty_favored_heir
	}
	if = {
		limit = { has_loyalty = loyalty_shamed_heir }
		remove_loyalty = loyalty_shamed_heir
	}
	if = {
		limit = { has_loyalty = loyalty_female_heir_approved }
		remove_loyalty = loyalty_female_heir_approved
	}
	if = {
		limit = { has_loyalty = loyalty_female_heir_rejected }
		remove_loyalty = loyalty_female_heir_rejected
	}
	if = {
		limit = { has_loyalty = loyalty_pirates_outlawed }
		remove_loyalty = loyalty_pirates_outlawed
	}
	if = {
		limit = { has_loyalty = loyalty_pirates_tolerated }
		remove_loyalty = loyalty_pirates_tolerated
	}
	if = {
		limit = { has_loyalty = loyalty_gift_bribe_1 }
		remove_loyalty = loyalty_gift_bribe_1
	}
	if = {
		limit = { has_loyalty = loyalty_gift_bribe_2 }
		remove_loyalty = loyalty_gift_bribe_2
	}
	if = {
		limit = { has_loyalty = loyalty_tolerated_sycophant }
		remove_loyalty = loyalty_tolerated_sycophant
	}
	if = {
		limit = { has_loyalty = loyalty_insulted_sycophant }
		remove_loyalty = loyalty_insulted_sycophant
	}
	if = {
		limit = { has_loyalty = loyalty_excellence_rewarded }
		remove_loyalty = loyalty_excellence_rewarded
	}
	if = {
		limit = { has_loyalty = loyalty_picked_side }
		remove_loyalty = loyalty_picked_side
	}
	if = {
		limit = { has_loyalty = loyalty_picked_other_side }
		remove_loyalty = loyalty_picked_other_side
	}
	if = {
		limit = { has_loyalty = loyalty_chided_bickering }
		remove_loyalty = loyalty_chided_bickering
	}
	if = {
		limit = { has_loyalty = loyalty_defended_colonists }
		remove_loyalty = loyalty_defended_colonists
	}
	if = {
		limit = { has_loyalty = loyalty_defended_locals }
		remove_loyalty = loyalty_defended_locals
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_endorsement }
		remove_loyalty = loyalty_ignored_endorsement
	}
	if = {
		limit = { has_loyalty = loyalty_new_royal_house }
		remove_loyalty = loyalty_new_royal_house
	}
	if = {
		limit = { has_loyalty = loyalty_ruler_adoption }
		remove_loyalty = loyalty_ruler_adoption
	}
	if = {
		limit = { has_loyalty = loyalty_family_replaced_by_upstart }
		remove_loyalty = loyalty_family_replaced_by_upstart
	}
	if = {
		limit = { has_loyalty = loyalty_service_unappreciated }
		remove_loyalty = loyalty_service_unappreciated
	}
	if = {
		limit = { has_loyalty = loyalty_marriage_arranged_1 }
		remove_loyalty = loyalty_marriage_arranged_1
	}
	if = {
		limit = { has_loyalty = loyalty_marriage_arranged_2 }
		remove_loyalty = loyalty_marriage_arranged_2
	}
	if = {
		limit = { has_loyalty = loyalty_thief_forgiven }
		remove_loyalty = loyalty_thief_forgiven
	}
	if = {
		limit = { has_loyalty = loyalty_refused_patronage }
		remove_loyalty = loyalty_refused_patronage
	}
	if = {
		limit = { has_loyalty = loyalty_office_granted }
		remove_loyalty = loyalty_office_granted
	}
	if = {
		limit = { has_loyalty = loyalty_office_granted_friend }
		remove_loyalty = loyalty_office_granted_friend
	}
	if = {
		limit = { has_loyalty = loyalty_defended_office }
		remove_loyalty = loyalty_defended_office
	}
	if = {
		limit = { has_loyalty = loyalty_refused_office }
		remove_loyalty = loyalty_refused_office
	}
	if = {
		limit = { has_loyalty = loyalty_murder_guilt }
		remove_loyalty = loyalty_murder_guilt
	}
	if = {
		limit = { has_loyalty = loyalty_murder_dismissed }
		remove_loyalty = loyalty_murder_dismissed
	}
	if = {
		limit = { has_loyalty = loyalty_murder_dismissed_victim }
		remove_loyalty = loyalty_murder_dismissed_victim
	}
	if = {
		limit = { has_loyalty = loyalty_murder_guilt_victim }
		remove_loyalty = loyalty_murder_guilt_victim
	}
	if = {
		limit = { has_loyalty = loyalty_own_culture_clan_chief }
		remove_loyalty = loyalty_own_culture_clan_chief
	}
	if = {
		limit = { has_loyalty = loyalty_wrong_culture_clan_chief }
		remove_loyalty = loyalty_wrong_culture_clan_chief
	}
	if = {
		limit = { has_loyalty = loyalty_wrong_group_clan_chief }
		remove_loyalty = loyalty_wrong_group_clan_chief
	}
	if = {
		limit = { has_loyalty = loyalty_returning_pretender_1 }
		remove_loyalty = loyalty_returning_pretender_1
	}
	if = {
		limit = { has_loyalty = loyalty_returning_pretender_2 }
		remove_loyalty = loyalty_returning_pretender_2
	}
	if = {
		limit = { has_loyalty = loyalty_illness_wishes }
		remove_loyalty = loyalty_illness_wishes
	}
	if = {
		limit = { has_loyalty = loyalty_trial_scapegoat }
		remove_loyalty = loyalty_trial_scapegoat
	}
	if = {
		limit = { has_loyalty = loyalty_chided_bickering_2 }
		remove_loyalty = loyalty_chided_bickering_2
	}
	if = {
		limit = { has_loyalty = loyalty_trial_not_scapegoat }
		remove_loyalty = loyalty_trial_not_scapegoat
	}
	if = {
		limit = { has_loyalty = loyalty_advice_ignored_bad }
		remove_loyalty = loyalty_advice_ignored_bad
	}
	if = {
		limit = { has_loyalty = loyalty_priest_festival }
		remove_loyalty = loyalty_priest_festival
	}
	if = {
		limit = { has_loyalty = loyalty_no_festival }
		remove_loyalty = loyalty_no_festival
	}
	if = {
		limit = { has_loyalty = loyalty_office_funded_1 }
		remove_loyalty = loyalty_office_funded_1
	}
	if = {
		limit = { has_loyalty = loyalty_religious_funding }
		remove_loyalty = loyalty_religious_funding
	}
	if = {
		limit = { has_loyalty = loyalty_no_religious_funding }
		remove_loyalty = loyalty_no_religious_funding
	}
	if = {
		limit = { has_loyalty = loyalty_military_coercion }
		remove_loyalty = loyalty_military_coercion
	}
	if = {
		limit = { has_loyalty = loyalty_convinced_ruler }
		remove_loyalty = loyalty_convinced_ruler
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_chieftain }
		remove_loyalty = loyalty_ignored_chieftain
	}
	if = {
		limit = { has_loyalty = loyalty_refused_corruption }
		remove_loyalty = loyalty_refused_corruption
	}
	if = {
		limit = { has_loyalty = loyalty_approved_duel }
		remove_loyalty = loyalty_approved_duel
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_duel_1 }
		remove_loyalty = loyalty_disapproved_duel_1
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_duel_2 }
		remove_loyalty = loyalty_disapproved_duel_2
	}
	if = {
		limit = { has_loyalty = loyalty_split_lands }
		remove_loyalty = loyalty_split_lands
	}
	if = {
		limit = { has_loyalty = loyalty_pledged_support }
		remove_loyalty = loyalty_pledged_support
	}
	if = {
		limit = { has_loyalty = loyalty_refused_to_assist }
		remove_loyalty = loyalty_refused_to_assist
	}
	if = {
		limit = { has_loyalty = loyalty_restored_reputation_1 }
		remove_loyalty = loyalty_restored_reputation_1
	}
	if = {
		limit = { has_loyalty = loyalty_restored_reputation_2 }
		remove_loyalty = loyalty_restored_reputation_2
	}
	if = {
		limit = { has_loyalty = loyalty_made_champion }
		remove_loyalty = loyalty_made_champion
	}
	if = {
		limit = { has_loyalty = loyalty_refused_champion }
		remove_loyalty = loyalty_refused_champion
	}
	if = {
		limit = { has_loyalty = loyalty_tribal_autonomy }
		remove_loyalty = loyalty_tribal_autonomy
	}
	if = {
		limit = { has_loyalty = loyalty_approved_migration }
		remove_loyalty = loyalty_approved_migration
	}
	if = {
		limit = { has_loyalty = loyalty_approved_migration_bad }
		remove_loyalty = loyalty_approved_migration_bad
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_migration_bad }
		remove_loyalty = loyalty_disapproved_migration_bad
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_migration }
		remove_loyalty = loyalty_disapproved_migration
	}
	if = {
		limit = { has_loyalty = loyalty_approved_centralization }
		remove_loyalty = loyalty_approved_centralization
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_centralization_1 }
		remove_loyalty = loyalty_disapproved_centralization_1
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_centralization_2 }
		remove_loyalty = loyalty_disapproved_centralization_2
	}
	if = {
		limit = { has_loyalty = loyalty_approved_decentralization }
		remove_loyalty = loyalty_approved_decentralization
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_decentralization }
		remove_loyalty = loyalty_disapproved_decentralization
	}
	if = {
		limit = { has_loyalty = loyalty_authority_questioned }
		remove_loyalty = loyalty_authority_questioned
	}
	if = {
		limit = { has_loyalty = loyalty_disloyalty_punish }
		remove_loyalty = loyalty_disloyalty_punish
	}
	if = {
		limit = { has_loyalty = loyalty_authority_regained }
		remove_loyalty = loyalty_authority_regained
	}
	if = {
		limit = { has_loyalty = loyalty_authority_tyrannical }
		remove_loyalty = loyalty_authority_tyrannical
	}
	if = {
		limit = { has_loyalty = loyalty_approved_reform }
		remove_loyalty = loyalty_approved_reform
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_reform }
		remove_loyalty = loyalty_disapproved_reform
	}
	if = {
		limit = { has_loyalty = loyalty_purged_family }
		remove_loyalty = loyalty_purged_family
	}
	if = {
		limit = { has_loyalty = loyalty_purged_family_example }
		remove_loyalty = loyalty_purged_family_example
	}
	if = {
		limit = { has_loyalty = loyalty_war_council_agrees }
		remove_loyalty = loyalty_war_council_agrees
	}
	if = {
		limit = { has_loyalty = loyalty_war_council_picked }
		remove_loyalty = loyalty_war_council_picked
	}
	if = {
		limit = { has_loyalty = loyalty_war_council_ignored }
		remove_loyalty = loyalty_war_council_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_council_republic_picked }
		remove_loyalty = loyalty_council_republic_picked
	}
	if = {
		limit = { has_loyalty = loyalty_council_republic_ignored }
		remove_loyalty = loyalty_council_republic_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_demanded_oath }
		remove_loyalty = loyalty_demanded_oath
	}
	if = {
		limit = { has_loyalty = loyalty_split_loot }
		remove_loyalty = loyalty_split_loot
	}
	if = {
		limit = { has_loyalty = loyalty_mocked_history }
		remove_loyalty = loyalty_mocked_history
	}
	if = {
		limit = { has_loyalty = loyalty_praised_history }
		remove_loyalty = loyalty_praised_history
	}
	if = {
		limit = { has_loyalty = loyalty_enjoyed_story }
		remove_loyalty = loyalty_enjoyed_story
	}
	if = {
		limit = { has_loyalty = loyalty_boring_story }
		remove_loyalty = loyalty_boring_story
	}
	if = {
		limit = { has_loyalty = loyalty_hamilcar_snubbed }
		remove_loyalty = loyalty_hamilcar_snubbed
	}
	if = {
		limit = { has_loyalty = loyalty_hamilcar_oligarch }
		remove_loyalty = loyalty_hamilcar_oligarch
	}
	if = {
		limit = { has_loyalty = loyalty_elites_reassured }
		remove_loyalty = loyalty_elites_reassured
	}
	if = {
		limit = { has_loyalty = loyalty_reform_defended }
		remove_loyalty = loyalty_reform_defended
	}
	if = {
		limit = { has_loyalty = loyalty_dismissed_concerns }
		remove_loyalty = loyalty_dismissed_concerns
	}
	if = {
		limit = { has_loyalty = loyalty_dismissed_concerns_2 }
		remove_loyalty = loyalty_dismissed_concerns_2
	}
	if = {
		limit = { has_loyalty = loyalty_military_reforms }
		remove_loyalty = loyalty_military_reforms
	}
	if = {
		limit = { has_loyalty = loyalty_rejected_reforms }
		remove_loyalty = loyalty_rejected_reforms
	}
	if = {
		limit = { has_loyalty = loyalty_disapproved_joke }
		remove_loyalty = loyalty_disapproved_joke
	}
	if = {
		limit = { has_loyalty = loyalty_emboldened_pretender }
		remove_loyalty = loyalty_emboldened_pretender
	}
	if = {
		limit = { has_loyalty = loyalty_armazi_idol }
		remove_loyalty = loyalty_armazi_idol
	}
	if = {
		limit = { has_loyalty = loyalty_rejected_idol }
		remove_loyalty = loyalty_rejected_idol
	}
	if = {
		limit = { has_loyalty = loyalty_expanded_pantheon }
		remove_loyalty = loyalty_expanded_pantheon
	}
	if = {
		limit = { has_loyalty = loyalty_rejected_proposal }
		remove_loyalty = loyalty_rejected_proposal
	}
	if = {
		limit = { has_loyalty = loyalty_cowardly_chief }
		remove_loyalty = loyalty_cowardly_chief
	}
	if = {
		limit = { has_loyalty = loyalty_subjected_massalians }
		remove_loyalty = loyalty_subjected_massalians
	}
	if = {
		limit = { has_loyalty = loyalty_schemes_punished }
		remove_loyalty = loyalty_schemes_punished
	}
	if = {
		limit = { has_loyalty = loyalty_flavius_suppressed }
		remove_loyalty = loyalty_flavius_suppressed
	}
	if = {
		limit = { has_loyalty = loyalty_crucified_slave_rebels }
		remove_loyalty = loyalty_crucified_slave_rebels
	}
	if = {
		limit = { has_loyalty = loyalty_crucified_slave_leader }
		remove_loyalty = loyalty_crucified_slave_leader
	}
	if = {
		limit = { has_loyalty = loyalty_recruited_slave }
		remove_loyalty = loyalty_recruited_slave
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_slave_leader }
		remove_loyalty = loyalty_ignored_slave_leader
	}
	if = {
		limit = { has_loyalty = loyalty_appropriated_profits }
		remove_loyalty = loyalty_appropriated_profits
	}
	if = {
		limit = { has_loyalty = loyalty_corrupt_ruler }
		remove_loyalty = loyalty_corrupt_ruler
	}
	if = {
		limit = { has_loyalty = loyalty_supported_politician }
		remove_loyalty = loyalty_supported_politician
	}
	if = {
		limit = { has_loyalty = loyalty_opposed_politician }
		remove_loyalty = loyalty_opposed_politician
	}
	if = {
		limit = { has_loyalty = loyalty_state_compensation }
		remove_loyalty = loyalty_state_compensation
	}
	if = {
		limit = { has_loyalty = loyalty_state_costs }
		remove_loyalty = loyalty_state_costs
	}
	if = {
		limit = { has_loyalty = loyalty_state_nothing }
		remove_loyalty = loyalty_state_nothing
	}
	if = {
		limit = { has_loyalty = loyalty_state_seized }
		remove_loyalty = loyalty_state_seized
	}
	if = {
		limit = { has_loyalty = loyalty_supported_slave_reform }
		remove_loyalty = loyalty_supported_slave_reform
	}
	if = {
		limit = { has_loyalty = loyalty_refused_slave_reform }
		remove_loyalty = loyalty_refused_slave_reform
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_slave_reform }
		remove_loyalty = loyalty_ignored_slave_reform
	}
	if = {
		limit = { has_loyalty = loyalty_supported_bondage_reform_1 }
		remove_loyalty = loyalty_supported_bondage_reform_1
	}
	if = {
		limit = { has_loyalty = loyalty_supported_bondage_reform_2 }
		remove_loyalty = loyalty_supported_bondage_reform_2
	}
	if = {
		limit = { has_loyalty = loyalty_refused_bondage_reform_1 }
		remove_loyalty = loyalty_refused_bondage_reform_1
	}
	if = {
		limit = { has_loyalty = loyalty_refused_bondage_reform_2 }
		remove_loyalty = loyalty_refused_bondage_reform_2
	}
	if = {
		limit = { has_loyalty = loyalty_welcomed_slave_family }
		remove_loyalty = loyalty_welcomed_slave_family
	}
	if = {
		limit = { has_loyalty = loyalty_unwelcomed_slave_family }
		remove_loyalty = loyalty_unwelcomed_slave_family
	}
	if = {
		limit = { has_loyalty = loyalty_dismissed_slave_family }
		remove_loyalty = loyalty_dismissed_slave_family
	}
	if = {
		limit = { has_loyalty = loyalty_scandal_investigation }
		remove_loyalty = loyalty_scandal_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_token_investigation }
		remove_loyalty = loyalty_token_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_no_investigation }
		remove_loyalty = loyalty_no_investigation
	}
	if = {
		limit = { has_loyalty = loyalty_rigorous_investigation_1 }
		remove_loyalty = loyalty_rigorous_investigation_1
	}
	if = {
		limit = { has_loyalty = loyalty_rigorous_investigation_2 }
		remove_loyalty = loyalty_rigorous_investigation_2
	}
	if = {
		limit = { has_loyalty = loyalty_precautionary_imprisonment }
		remove_loyalty = loyalty_precautionary_imprisonment
	}
	if = {
		limit = { has_loyalty = loyalty_evidence_tampering }
		remove_loyalty = loyalty_evidence_tampering
	}
	if = {
		limit = { has_loyalty = loyalty_smeared_defendent }
		remove_loyalty = loyalty_smeared_defendent
	}
	if = {
		limit = { has_loyalty = loyalty_found_innocent }
		remove_loyalty = loyalty_found_innocent
	}
	if = {
		limit = { has_loyalty = loyalty_trial_fine }
		remove_loyalty = loyalty_trial_fine
	}
	if = {
		limit = { has_loyalty = loyalty_tarnished_family }
		remove_loyalty = loyalty_tarnished_family
	}
	if = {
		limit = { has_loyalty = loyalty_found_guilty }
		remove_loyalty = loyalty_found_guilty
	}
	if = {
		limit = { has_loyalty = loyalty_guilty_imprisoned }
		remove_loyalty = loyalty_guilty_imprisoned
	}
	if = {
		limit = { has_loyalty = loyalty_executed_family }
		remove_loyalty = loyalty_executed_family
	}
	if = {
		limit = { has_loyalty = loyalty_trial_smeared }
		remove_loyalty = loyalty_trial_smeared
	}
	if = {
		limit = { has_loyalty = loyalty_trial_tampered }
		remove_loyalty = loyalty_trial_tampered
	}
	if = {
		limit = { has_loyalty = loyalty_trial_helped }
		remove_loyalty = loyalty_trial_helped
	}
	if = {
		limit = { has_loyalty = loyalty_aristocrat_advice_1 }
		remove_loyalty = loyalty_aristocrat_advice_1
	}
	if = {
		limit = { has_loyalty = loyalty_aristocrat_advice_2 }
		remove_loyalty = loyalty_aristocrat_advice_2
	}
	if = {
		limit = { has_loyalty = loyalty_democrat_advice_1 }
		remove_loyalty = loyalty_democrat_advice_1
	}
	if = {
		limit = { has_loyalty = loyalty_democrat_advice_2 }
		remove_loyalty = loyalty_democrat_advice_2
	}
	if = {
		limit = { has_loyalty = loyalty_tarantine_trust }
		remove_loyalty = loyalty_tarantine_trust
	}
	if = {
		limit = { has_loyalty = loyalty_tarantine_skeptic }
		remove_loyalty = loyalty_tarantine_skeptic
	}
	if = {
		limit = { has_loyalty = loyalty_tarantine_skeptic_2 }
		remove_loyalty = loyalty_tarantine_skeptic_2
	}
	if = {
		limit = { has_loyalty = loyalty_roman_vassal_1 }
		remove_loyalty = loyalty_roman_vassal_1
	}
	if = {
		limit = { has_loyalty = loyalty_roman_vassal_2 }
		remove_loyalty = loyalty_roman_vassal_2
	}
	if = {
		limit = { has_loyalty = loyalty_rejected_rome_1 }
		remove_loyalty = loyalty_rejected_rome_1
	}
	if = {
		limit = { has_loyalty = loyalty_rejected_rome_2 }
		remove_loyalty = loyalty_rejected_rome_2
	}
	if = {
		limit = { has_loyalty = loyalty_abandoned_politician }
		remove_loyalty = loyalty_abandoned_politician
	}
	if = {
		limit = { has_loyalty = loyalty_supported_assassination }
		remove_loyalty = loyalty_supported_assassination
	}
	if = {
		limit = { has_loyalty = loyalty_encouraged_fight_1 }
		remove_loyalty = loyalty_encouraged_fight_1
	}
	if = {
		limit = { has_loyalty = loyalty_encouraged_fight_2 }
		remove_loyalty = loyalty_encouraged_fight_2
	}
	if = {
		limit = { has_loyalty = loyalty_career_flagging }
		remove_loyalty = loyalty_career_flagging
	}
	if = {
		limit = { has_loyalty = loyalty_showed_up }
		remove_loyalty = loyalty_showed_up
	}
	if = {
		limit = { has_loyalty = loyalty_aided_campaign }
		remove_loyalty = loyalty_aided_campaign
	}
	if = {
		limit = { has_loyalty = loyalty_campaign_soldiers }
		remove_loyalty = loyalty_campaign_soldiers
	}
	if = {
		limit = { has_loyalty = loyalty_campaign_failed }
		remove_loyalty = loyalty_campaign_failed
	}
	if = {
		limit = { has_loyalty = loyalty_general_honors }
		remove_loyalty = loyalty_general_honors
	}
	if = {
		limit = { has_loyalty = loyalty_refused_honors }
		remove_loyalty = loyalty_refused_honors
	}
	if = {
		limit = { has_loyalty = loyalty_convinced_politician }
		remove_loyalty = loyalty_convinced_politician
	}
	if = {
		limit = { has_loyalty = loyalty_undermined_support }
		remove_loyalty = loyalty_undermined_support
	}
	if = {
		limit = { has_loyalty = loyalty_accuse_treason }
		remove_loyalty = loyalty_accuse_treason
	}
	if = {
		limit = { has_loyalty = loyalty_march_rome }
		remove_loyalty = loyalty_march_rome
	}
	if = {
		limit = { has_loyalty = loyalty_uprising_crushed }
		remove_loyalty = loyalty_uprising_crushed
	}
	if = {
		limit = { has_loyalty = loyalty_awed_soldiers }
		remove_loyalty = loyalty_awed_soldiers
	}
	if = {
		limit = { has_loyalty = loyalty_loyal_to_general }
		remove_loyalty = loyalty_loyal_to_general
	}
	if = {
		limit = { has_loyalty = loyalty_priest_allowed }
		remove_loyalty = loyalty_priest_allowed
	}
	if = {
		limit = { has_loyalty = loyalty_priest_refused }
		remove_loyalty = loyalty_priest_refused
	}
	if = {
		limit = { has_loyalty = loyalty_reconversion_allowed }
		remove_loyalty = loyalty_reconversion_allowed
	}
	if = {
		limit = { has_loyalty = loyalty_reconversion_denied }
		remove_loyalty = loyalty_reconversion_denied
	}
	if = {
		limit = { has_loyalty = loyalty_heir_supported }
		remove_loyalty = loyalty_heir_supported
	}
	if = {
		limit = { has_loyalty = loyalty_heir_doubted }
		remove_loyalty = loyalty_heir_doubted
	}
	if = {
		limit = { has_loyalty = loyalty_executed_druidess }
		remove_loyalty = loyalty_executed_druidess
	}
	if = {
		limit = { has_loyalty = loyalty_banished_druidess }
		remove_loyalty = loyalty_banished_druidess
	}
	if = {
		limit = { has_loyalty = loyalty_allowed_druidess }
		remove_loyalty = loyalty_allowed_druidess
	}
	if = {
		limit = { has_loyalty = loyalty_religious_tax_approved }
		remove_loyalty = loyalty_religious_tax_approved
	}
	if = {
		limit = { has_loyalty = loyalty_religious_tax_stopped }
		remove_loyalty = loyalty_religious_tax_stopped
	}
	if = {
		limit = { has_loyalty = loyalty_insulted_priest }
		remove_loyalty = loyalty_insulted_priest
	}
	if = {
		limit = { has_loyalty = loyalty_reincarnation_dismissed }
		remove_loyalty = loyalty_reincarnation_dismissed
	}
	if = {
		limit = { has_loyalty = loyalty_large_ceremony }
		remove_loyalty = loyalty_large_ceremony
	}
	if = {
		limit = { has_loyalty = loyalty_small_ceremony }
		remove_loyalty = loyalty_small_ceremony
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_magi }
		remove_loyalty = loyalty_ignored_magi
	}
	if = {
		limit = { has_loyalty = loyalty_magi_influence }
		remove_loyalty = loyalty_magi_influence
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_priest }
		remove_loyalty = loyalty_ignored_priest
	}
	if = {
		limit = { has_loyalty = loyalty_placated_priest }
		remove_loyalty = loyalty_placated_priest
	}
	if = {
		limit = { has_loyalty = loyalty_karmic_help }
		remove_loyalty = loyalty_karmic_help
	}
	if = {
		limit = { has_loyalty = loyalty_karmic_reject }
		remove_loyalty = loyalty_karmic_reject
	}
	if = {
		limit = { has_loyalty = loyalty_aggressive_protest }
		remove_loyalty = loyalty_aggressive_protest
	}
	if = {
		limit = { has_loyalty = loyalty_peaceful_protest_priest }
		remove_loyalty = loyalty_peaceful_protest_priest
	}
	if = {
		limit = { has_loyalty = loyalty_peaceful_protest_marshal }
		remove_loyalty = loyalty_peaceful_protest_marshal
	}
	if = {
		limit = { has_loyalty = loyalty_priests_helped }
		remove_loyalty = loyalty_priests_helped
	}
	if = {
		limit = { has_loyalty = loyalty_temple_funding }
		remove_loyalty = loyalty_temple_funding
	}
	if = {
		limit = { has_loyalty = loyalty_opened_temples }
		remove_loyalty = loyalty_opened_temples
	}
	if = {
		limit = { has_loyalty = loyalty_religious_proceding }
		remove_loyalty = loyalty_religious_proceding
	}
	if = {
		limit = { has_loyalty = loyalty_priest_autonomy }
		remove_loyalty = loyalty_priest_autonomy
	}
	if = {
		limit = { has_loyalty = loyalty_marshal_initiative }
		remove_loyalty = loyalty_marshal_initiative
	}
	if = {
		limit = { has_loyalty = loyalty_marshal_ignored }
		remove_loyalty = loyalty_marshal_ignored
	}
	if = {
		limit = { has_loyalty = loyalty_large_festival }
		remove_loyalty = loyalty_large_festival
	}
	if = {
		limit = { has_loyalty = loyalty_small_festival }
		remove_loyalty = loyalty_small_festival
	}
	if = {
		limit = { has_loyalty = loyalty_conversion_effort_approved_1 }
		remove_loyalty = loyalty_conversion_effort_approved_1
	}
	if = {
		limit = { has_loyalty = loyalty_conversion_effort_approved_2 }
		remove_loyalty = loyalty_conversion_effort_approved_2
	}
	if = {
		limit = { has_loyalty = loyalty_conversion_effort_denied_1 }
		remove_loyalty = loyalty_conversion_effort_denied_1
	}
	if = {
		limit = { has_loyalty = loyalty_conversion_effort_denied_2 }
		remove_loyalty = loyalty_conversion_effort_denied_2
	}
	if = {
		limit = { has_loyalty = loyalty_growing_coffers }
		remove_loyalty = loyalty_growing_coffers
	}
	if = {
		limit = { has_loyalty = loyalty_appropriated_wealth }
		remove_loyalty = loyalty_appropriated_wealth
	}
	if = {
		limit = { has_loyalty = loyalty_unjustly_imprisoned }
		remove_loyalty = loyalty_unjustly_imprisoned
	}
	if = {
		limit = { has_loyalty = loyalty_unchecked_arrogance }
		remove_loyalty = loyalty_unchecked_arrogance
	}
	if = {
		limit = { has_loyalty = loyalty_imprisoned_ambition }
		remove_loyalty = loyalty_imprisoned_ambition
	}
	if = {
		limit = { has_loyalty = loyalty_frightened_intervention }
		remove_loyalty = loyalty_frightened_intervention
	}
	if = {
		limit = { has_loyalty = loyalty_frightened_intervention_2 }
		remove_loyalty = loyalty_frightened_intervention_2
	}
	if = {
		limit = { has_loyalty = loyalty_governor_intervention }
		remove_loyalty = loyalty_governor_intervention
	}
	if = {
		limit = { has_loyalty = loyalty_power_dismissed }
		remove_loyalty = loyalty_power_dismissed
	}
	if = {
		limit = { has_loyalty = loyalty_insulted_influencer }
		remove_loyalty = loyalty_insulted_influencer
	}
	if = {
		limit = { has_loyalty = loyalty_legitimacy_assured }
		remove_loyalty = loyalty_legitimacy_assured
	}
	if = {
		limit = { has_loyalty = loyalty_disgruntled_influencer }
		remove_loyalty = loyalty_disgruntled_influencer
	}
	if = {
		limit = { has_loyalty = loyalty_ignored_faction }
		remove_loyalty = loyalty_ignored_faction
	}
	if = {
		limit = { has_loyalty = loyalty_project_dismissed }
		remove_loyalty = loyalty_project_dismissed
	}
	if = {
		limit = { has_loyalty = loyalty_clan_dismissed }
		remove_loyalty = loyalty_clan_dismissed
	}
	if = {
		limit = { has_loyalty = loyalty_researcher_dismissed }
		remove_loyalty = loyalty_researcher_dismissed
	}
	if = {
		limit = { has_loyalty = loyalty_funding_refused }
		remove_loyalty = loyalty_funding_refused
	}
	if = {
		limit = { has_loyalty = loyalty_granted_funds }
		remove_loyalty = loyalty_granted_funds
	}
	if = {
		limit = { has_loyalty = loyalty_inducted_visitor }
		remove_loyalty = loyalty_inducted_visitor
	}
	if = {
		limit = { has_loyalty = loyalty_argead_blood }
		remove_loyalty = loyalty_argead_blood
	}
	if = {
		limit = { has_loyalty = loyalty_gubernatorial_aid }
		remove_loyalty = loyalty_gubernatorial_aid
	}
	if = {
		limit = { has_loyalty = loyalty_gov_aid_refused }
		remove_loyalty = loyalty_gov_aid_refused
	}
	if = {
		limit = { has_loyalty = loyalty_praised_spokesman }
		remove_loyalty = loyalty_praised_spokesman
	}
	if = {
		limit = { has_loyalty = loyalty_nepotism_unpopular }
		remove_loyalty = loyalty_nepotism_unpopular
	}
	if = {
		limit = { has_loyalty = loyalty_favored_family }
		remove_loyalty = loyalty_favored_family
	}
	if = {
		limit = { has_loyalty = loyalty_district_renovations }
		remove_loyalty = loyalty_district_renovations
	}
	if = {
		limit = { has_loyalty = loyalty_holdings_seized }
		remove_loyalty = loyalty_holdings_seized
	}
	if = {
		limit = { has_loyalty = loyalty_malpractice_overlooked }
		remove_loyalty = loyalty_malpractice_overlooked
	}
	if = {
		limit = { has_loyalty = loyalty_pleasant_survey }
		remove_loyalty = loyalty_pleasant_survey
	}
	if = {
		limit = { has_loyalty = loyalty_new_man }
		remove_loyalty = loyalty_new_man
	}
	if = {
		limit = { has_loyalty = loyalty_punished_embezzlement_1 }
		remove_loyalty = loyalty_punished_embezzlement_1
	}
	if = {
		limit = { has_loyalty = loyalty_punished_embezzlement_2 }
		remove_loyalty = loyalty_punished_embezzlement_2
	}
	if = {
		limit = { has_loyalty = loyalty_tolerated_embezzlement_1 }
		remove_loyalty = loyalty_tolerated_embezzlement_1
	}
	if = {
		limit = { has_loyalty = loyalty_tolerated_embezzlement_2 }
		remove_loyalty = loyalty_tolerated_embezzlement_2
	}
	if = {
		limit = { has_loyalty = loyalty_encourager_dismissed }
		remove_loyalty = loyalty_encourager_dismissed
	}
	if = {
		limit = { has_loyalty = loyalty_encourager_praised }
		remove_loyalty = loyalty_encourager_praised
	}
	if = {
		limit = { has_loyalty = loyalty_augur_faith }
		remove_loyalty = loyalty_augur_faith
	}
	if = {
		limit = { has_loyalty = loyalty_augur_bribe }
		remove_loyalty = loyalty_augur_bribe
	}
	if = {
		limit = { has_loyalty = loyalty_no_auguries }
		remove_loyalty = loyalty_no_auguries
	}
	if = {
		limit = { has_loyalty = loyalty_italic_citizenship }
		remove_loyalty = loyalty_italic_citizenship
	}
	if = {
		limit = { has_loyalty = loyalty_roman_citizenship }
		remove_loyalty = loyalty_roman_citizenship
	}
	if = {
		limit = { has_loyalty = loyalty_acknowledged_general }
		remove_loyalty = loyalty_acknowledged_general
	}
	if = {
		limit = { has_loyalty = loyalty_office_gained }
		remove_loyalty = loyalty_office_gained
	}
	if = {
		limit = { has_loyalty = loyalty_office_lost }
		remove_loyalty = loyalty_office_lost
	}
	if = {
		limit = { has_loyalty = loyalty_favored_child }
		remove_loyalty = loyalty_favored_child
	}
	if = {
		limit = { has_loyalty = loyalty_opportunity_quashed }
		remove_loyalty = loyalty_opportunity_quashed
	}
	if = {
		limit = { has_loyalty = loyalty_defeated_cil_war }
		remove_loyalty = loyalty_defeated_cil_war
	}
	if = {
		limit = { has_loyalty = loyalty_consort_cast_aside }
		remove_loyalty = loyalty_consort_cast_aside
	}
	if = {
		limit = { has_loyalty = loyalty_punished_attacker }
		remove_loyalty = loyalty_punished_attacker
	}
	if = {
		limit = { has_loyalty = loyalty_killed_attacker }
		remove_loyalty = loyalty_killed_attacker
	}
	if = {
		limit = { has_loyalty = loyalty_deposed }
		remove_loyalty = loyalty_deposed
	}
	if = {
		limit = { has_loyalty = disloyal_successor_cmod }
		remove_loyalty = disloyal_successor_cmod
	}
	if = {
		limit = { has_loyalty = debt_paid_off }
		remove_loyalty = debt_paid_off
	}
	if = {
		limit = { has_loyalty = renowned_adventurer_general_cmod }
		remove_loyalty = renowned_adventurer_general_cmod
	}
	if = {
		limit = { has_loyalty = character_modifier_ambitious_politician }
		remove_loyalty = character_modifier_ambitious_politician
	}
	if = {
		limit = { has_loyalty = character_modifier_ambitious_general }
		remove_loyalty = character_modifier_ambitious_general
	}
	if = {
		limit = { has_loyalty = loyal_henchman_carthaginian_mission_sicily_modifier }
		remove_loyalty = loyal_henchman_carthaginian_mission_sicily_modifier
	}
	if = {
		limit = { has_loyalty = self_made_man_family }
		remove_loyalty = self_made_man_family
	}
	if = {
		limit = { has_loyalty = roman_mission_eastern_campaign_triumph_modifier }
		remove_loyalty = roman_mission_eastern_campaign_triumph_modifier
	}
	if = {
		limit = { has_loyalty = disloyal_family_head_cmod }
		remove_loyalty = disloyal_family_head_cmod
	}
	if = {
		limit = { has_loyalty = insulted_clan_chief }
		remove_loyalty = insulted_clan_chief
	}
	if = {
		limit = { has_loyalty = currently_on_trial }
		remove_loyalty = currently_on_trial
	}
	if = {
		limit = { has_loyalty = fortified_residence }
		remove_loyalty = fortified_residence
	}
	if = {
		limit = { has_loyalty = family_granted_temple_city }
		remove_loyalty = family_granted_temple_city
	}
	if = {
		limit = { has_loyalty = family_granted_naval_job }
		remove_loyalty = family_granted_naval_job
	}
	if = {
		limit = { has_loyalty = annexed_home_country }
		remove_loyalty = annexed_home_country
	}
	if = {
		limit = { has_loyalty = loyalty_replaced_as_governor }
		remove_loyalty = loyalty_replaced_as_governor
	}
	if = {
		limit = { has_loyalty = loyalty_ruling_their_own }
		remove_loyalty = loyalty_ruling_their_own
	}
	if = {
		limit = { has_loyalty = loyalty_protected_governorship_position }
		remove_loyalty = loyalty_protected_governorship_position
	}
	if = {
		limit = { has_loyalty = loyalty_rejected_governorship_request }
		remove_loyalty = loyalty_rejected_governorship_request
	}
	if = {
		limit = { has_loyalty = loyalty_enforced_culture }
		remove_loyalty = loyalty_enforced_culture
	}
	if = {
		limit = { has_loyalty = disappointed_party_leader }
		remove_loyalty = disappointed_party_leader
	}
	if = {
		limit = { has_loyalty = optimates_happy_family_heads }
		remove_loyalty = optimates_happy_family_heads
	}
	if = {
		limit = { has_loyalty = family_republic_intervention }
		remove_loyalty = family_republic_intervention
	}
	if = {
		limit = { has_loyalty = loyalty_political_mutual_enemy }
		remove_loyalty = loyalty_political_mutual_enemy
	}
	if = {
		limit = { has_loyalty = objective_holding_granted }
		remove_loyalty = objective_holding_granted
	}
	if = {
		limit = { has_loyalty = objective_family_trial }
		remove_loyalty = objective_family_trial
	}
	if = {
		limit = { has_loyalty = loyalty_revoke_holding_agenda }
		remove_loyalty = loyalty_revoke_holding_agenda
	}
	if = {
		limit = { has_loyalty = loyalty_imprison_head_agenda }
		remove_loyalty = loyalty_imprison_head_agenda
	}
	if = {
		limit = { has_loyalty = loyalty_appointment_revoked_agenda }
		remove_loyalty = loyalty_appointment_revoked_agenda
	}
	if = {
		limit = { has_loyalty = loyalty_appointment_granted_agenda }
		remove_loyalty = loyalty_appointment_granted_agenda
	}
	if = {
		limit = { has_loyalty = loyalty_revoke_office_agenda }
		remove_loyalty = loyalty_revoke_office_agenda
	}
	if = {
		limit = { has_loyalty = loyalty_snubbed }
		remove_loyalty = loyalty_snubbed
	}
	if = {
		limit = { has_loyalty = jealous_sibling }
		remove_loyalty = jealous_sibling
	}
	if = {
		limit = { has_loyalty = loyalty_grateful_governor_generic }
		remove_loyalty = loyalty_grateful_governor_generic
	}
	if = {
		limit = { has_loyalty = a_long_retirement_l }
		remove_loyalty = a_long_retirement_l
	}
	if = {
		limit = { has_loyalty = system_strengthened_l }
		remove_loyalty = system_strengthened_l
	}
	if = {
		limit = { has_loyalty = revolution_successful_l }
		remove_loyalty = revolution_successful_l
	}
	if = {
		limit = { has_loyalty = disappointed_revolution_l }
		remove_loyalty = disappointed_revolution_l
	}
	if = {
		limit = { has_loyalty = promonarchist_sentiment_l }
		remove_loyalty = promonarchist_sentiment_l
	}
	if = {
		limit = { has_loyalty = antirepublican_sentiment_l }
		remove_loyalty = antirepublican_sentiment_l
	}
	if = {
		limit = { has_loyalty = antimonarchy_sentiment_l }
		remove_loyalty = antimonarchy_sentiment_l
	}
	if = {
		limit = { has_loyalty = republican_sentiment_l }
		remove_loyalty = republican_sentiment_l
	}
	if = {
		limit = { has_loyalty = national_conversion_l }
		remove_loyalty = national_conversion_l
	}
	if = {
		limit = { has_loyalty = athenian_mission_01_appreciative_family }
		remove_loyalty = athenian_mission_01_appreciative_family
	}
	if = {
		limit = { has_loyalty = athenian_mission_01_unappreciative_family }
		remove_loyalty = athenian_mission_01_unappreciative_family
	}
	if = {
		limit = { has_loyalty = loyalty_tyrant_family_upset }
		remove_loyalty = loyalty_tyrant_family_upset
	}
	if = {
		limit = { has_loyalty = loyalty_tyranny_avoided }
		remove_loyalty = loyalty_tyranny_avoided
	}
	if = {
		limit = { has_loyalty = loyalty_me_syr_17_tricked }
		remove_loyalty = loyalty_me_syr_17_tricked
	}
	if = {
		limit = { has_loyalty = loyalty_defended_interests }
		remove_loyalty = loyalty_defended_interests
	}
	if = {
		limit = { has_loyalty = loyalty_pleased_family_small }
		remove_loyalty = loyalty_pleased_family_small
	}
	if = {
		limit = { has_loyalty = loyalty_family_admiral }
		remove_loyalty = loyalty_family_admiral
	}
	if = {
		limit = { has_loyalty = loyalty_gm_1_pleased_family }
		remove_loyalty = loyalty_gm_1_pleased_family
	}
	if = {
		limit = { has_loyalty = me_gre_1_upset_family_loyalty }
		remove_loyalty = me_gre_1_upset_family_loyalty
	}
	if = {
		limit = { has_loyalty = me_gre_3_pleased_family_loyalty }
		remove_loyalty = me_gre_3_pleased_family_loyalty
	}
	if = {
		limit = { has_loyalty = ant_01_3_philokles_denied_loyalty }
		remove_loyalty = ant_01_3_philokles_denied_loyalty
	}
	if = {
		limit = { has_loyalty = ant_01_3_usurped_throne }
		remove_loyalty = ant_01_3_usurped_throne
	}
	if = {
		limit = { has_loyalty = food_protector_accepted }
		remove_loyalty = food_protector_accepted
	}
	if = {
		limit = { has_loyalty = food_tech_officer }
		remove_loyalty = food_tech_officer
	}
	if = {
		limit = { has_loyalty = food_transportation_loyalty }
		remove_loyalty = food_transportation_loyalty
	}
	if = {
		limit = { has_loyalty = family_food_holdings_loyalty }
		remove_loyalty = family_food_holdings_loyalty
	}
	if = {
		limit = { has_loyalty = food_holdings_loyalty }
		remove_loyalty = food_holdings_loyalty
	}
	if = {
		limit = { has_loyalty = tutor_of_generations }
		remove_loyalty = tutor_of_generations
	}
	if = {
		limit = { has_loyalty = empower_button_optimates_loyalty_modifier }
		remove_loyalty = empower_button_optimates_loyalty_modifier
	}
	if = {
		limit = { has_loyalty = empower_button_oligarchs_loyalty_modifier }
		remove_loyalty = empower_button_oligarchs_loyalty_modifier
	}
	if = {
		limit = { has_loyalty = demagogue_in_training_l }
		remove_loyalty = demagogue_in_training_l
	}
	if = {
		limit = { has_loyalty = inspired_disloyalty_other_l }
		remove_loyalty = inspired_disloyalty_other_l
	}
	if = {
		limit = { has_loyalty = scheme_dismissed_l }
		remove_loyalty = scheme_dismissed_l
	}
	if = {
		limit = { has_loyalty = scheme_disloyalty_self }
		remove_loyalty = scheme_disloyalty_self
	}
}

defect_effect = {
	hidden_effect = { remove_all_offices = yes }
	move_country = scope:actor
	hidden_effect = {
		remove_character_modifier = foreign_citizen
		add_loyalty = granted_citizenship
		set_as_minor_character = THIS
		set_home_country = employer
		if = {
			limit = { has_variable = came_from }
			remove_variable = came_from
		}
	}
}

increment_state_investment_count = {
	if = {
		limit = {
			NOT = {
				has_variable = num_state_investments
			}
		}
		set_variable = {
			name = num_state_investments
			value = 1
		}
	}
	else = {
		change_variable = {
			name = num_state_investments
			add = 1
		}
	}
}

add_scaling_gold_cost_effect = {
	if = {
		limit = {
			has_variable = num_state_investments
			scope:player = {
				is_ai = no
				OR = {
					NOT = {
						has_variable = free_investments
					}
					var:free_investments <= 0
				}
			}
		}
		scope:player = {
			hidden_effect = {
				add_treasury = {
					value = root.calc_governor_investment_fee
					multiply = -1
				}
			}
			custom_tooltip = STATE_INVESTMENT_GOLD_SCALE_TT
		}
		hidden_effect = {
			every_state_province = { 
				limit = {
					exists = holding_owner
					#holding_owner = {
					#	#is_ruler = no #Intentional!
					#}
				}
				holding_owner = {
					add_gold = {
						value = root.calc_governor_investment_fee
						divide = 4
					}
				}
			}
		}
	}
}

antigonids_asia_transfer_effect = {
	if = { # Asia Satrapy
		limit = { exists = scope:asia_satrapy }
		custom_tooltip = diadochi_flavor.50.tt7
		hidden_effect = {			
			scope:asia_satrapy = {
				every_owned_province = {
					add_claim = c:SEL
					add_claim = c:EGY
					add_claim = c:TRE
					add_claim = c:MAC
				}
			}
			c:TRE = {
				make_subject = {
					target = scope:asia_satrapy
					type = satrapy
				}
			}
			if = {
				limit = { exists = scope:phoenix_scope }
				scope:phoenix_scope = {
					if = {
						limit = {
							is_minor_character = no
							from_ruler_family = no
						}
						family = {
							every_family_member = {
								limit = {
									is_ruler = no
								}
								remove_all_positions = yes
								move_country = scope:asia_satrapy
								remove_character_modifier = foreign_citizen
								set_home_country = scope:asia_satrapy
							}
							move_family = scope:asia_satrapy
						}
					}
					remove_all_positions = yes
					move_country = scope:asia_satrapy
					remove_character_modifier = foreign_citizen
					set_home_country = scope:asia_satrapy
					scope:asia_satrapy = {
						set_as_ruler = scope:phoenix_scope
						set_primary_culture_cleanup_effect = {
							NEW_PRIMARY_CULTURE = macedonian
							MAKE_OLD_CULTURE_INTEGRATED = no
						}
						set_country_religion = roman_pantheon
						add_treasury = 300
						add_manpower = 8
						add_political_influence = 100
					}
					if = {
						limit = {
							is_married = yes
							spouse = {
								employer = scope:antigonids_scope
								prisoner = no
							}
						}
						spouse = {
							remove_all_positions = yes
							move_country = scope:asia_satrapy
							remove_character_modifier = foreign_citizen
							set_home_country = scope:asia_satrapy
						}
					}
					if = {
						limit = {
							num_of_children > 0
							any_child = {
								employer = scope:antigonids_scope
								prisoner = no
							}
						}
						every_child = {
							limit = {
								employer = scope:antigonids_scope
								prisoner = no
							}
							remove_all_positions = yes
							move_country = scope:asia_satrapy
							remove_character_modifier = foreign_citizen
							set_home_country = scope:asia_satrapy
						}
					}
				}
			}
		}
	}
}

antigonids_galatia_transfer_effect = {
	if = { # Phrygia Satrapy
		limit = { exists = scope:galatia_satrapy }
		custom_tooltip = diadochi_flavor.50.tt8
		hidden_effect = {
			scope:galatia_satrapy = {
				every_owned_province = {
					add_claim = c:SEL
					add_claim = c:EGY
					add_claim = c:TRE
					add_claim = c:MAC
				}			
			}
			c:TRE = {
				make_subject = {
					target = scope:galatia_satrapy
					type = satrapy
				}
			}
			if = {
				limit = { exists = scope:dokimos_scope }
				scope:dokimos_scope = {
					if = {
						limit = {
							is_minor_character = no
							from_ruler_family = no
						}
						family = {
							every_family_member = {
								limit = {
									is_ruler = no
								}
								remove_all_positions = yes
								move_country = scope:galatia_satrapy
								remove_character_modifier = foreign_citizen
								set_home_country = scope:galatia_satrapy
							}
							move_family = scope:galatia_satrapy
						}
					}
					remove_all_positions = yes
					move_country = scope:galatia_satrapy
					remove_character_modifier = foreign_citizen
					set_home_country = scope:galatia_satrapy
					scope:galatia_satrapy = {
						set_as_ruler = scope:dokimos_scope
						set_primary_culture_cleanup_effect = {
							NEW_PRIMARY_CULTURE = macedonian
							MAKE_OLD_CULTURE_INTEGRATED = no
						}
						set_country_religion = roman_pantheon
						add_treasury = 300
						add_manpower = 8
						add_political_influence = 100
					}
					if = {
						limit = {
							is_married = yes
							spouse = {
								employer = scope:antigonids_scope
								prisoner = no
							}
						}
						spouse = {
							remove_all_positions = yes
							move_country = scope:galatia_satrapy
							remove_character_modifier = foreign_citizen
							set_home_country = scope:galatia_satrapy
						}
					}
					if = {
						limit = {
							num_of_children > 0
							any_child = {
								employer = scope:antigonids_scope
								prisoner = no
							}
						}
						every_child = {
							limit = {
								employer = scope:antigonids_scope
								prisoner = no
							}
							remove_all_positions = yes
							move_country = scope:galatia_satrapy
							remove_character_modifier = foreign_citizen
							set_home_country = scope:galatia_satrapy
						}
					}
				}
			}
		}
	}
}

attalids_move_thrace_effect = {
	c:TRE = { save_scope_as = thrace_scope }
	c:PRY = { save_scope_as = antigonids_scope }
	remove_all_positions = yes
	move_country =  scope:thrace_scope
	hidden_effect = {
		remove_character_modifier = foreign_citizen
		set_home_country = scope:thrace_scope
		if = {
			limit = { is_minor_character = no }
			move_family = scope:thrace_scope
		}
		if = {
			limit = {
				is_married = yes
				spouse = {
					prisoner = no
					employer = scope:antigonids_scope
				}
			}
			spouse = {
				remove_all_positions = yes
				move_country = scope:thrace_scope
				remove_character_modifier = foreign_citizen
				set_home_country = scope:thrace_scope
			}
		}
		if = {
			limit = {
				num_of_children > 0
				any_child = {
					prisoner = no
					employer = scope:antigonids_scope
				}
			}
			every_child = {
				limit = {
					prisoner = no
					employer = scope:antigonids_scope
				}
				remove_all_positions = yes
				move_country = scope:thrace_scope
				remove_character_modifier = foreign_citizen
				set_home_country = scope:thrace_scope
			}
		}
	}
}

mithridates_new_cius_effect = {
	scope:old_capital = {
		create_country = {
			save_scope_as = cius_scope
			change_country_name = KIO
			change_country_adjective = KIO_ADJ
			change_country_tag = KIO
			set_country_heritage = ciusan_heritage
			change_country_flag = KIO
			change_country_color = dark_purple
			add_political_influence = 100
		}
	}
	every_in_list = {
		list = kius_army_list
		if = {
			limit = { exists = commander }
			commander = { remove_all_positions = yes }
		}
		change_unit_owner = scope:cius_scope
	}
	every_owned_province = {
		limit = {
			NOR = {
				province_id = 200
				is_in_list = kimiata_list
			}
		}
		set_owned_by = scope:cius_scope
	}
	if = {
		limit = { exists = scope:mithridates_overlord }
		scope:mithridates_overlord = {
			make_subject = {
				target = scope:cius_scope
				type = tributary
			}
		}
	}
}

mithridates_kimiata_effect = {
	every_navy = { add_to_list = kius_army_list }
	scope:mithridates_target = { set_owned_by = c:KIO }
	every_in_list = {
		list = kimiata_list
		if = {
			limit = {
				NAND = {
					is_coastal = yes
					has_owner = yes
					owner.culture_group = culture_group:hellenic
				}
				NAND = {
					has_owner = yes
					owner = c:KIO
				}
			}
			owner = {
				trigger_event = { id = dhe_mithridates.13 }
			}
			set_owned_by = c:KIO
		}
	}
	set_capital = scope:mithridates_target
	change_country_name = MITH_NAME
	change_country_adjective = MITH_ADJ
	change_country_tag = MIT
	change_country_color = ck2_purple
	change_country_flag = MIT_FLAG
	set_primary_culture = paphlagonian
	add_manpower = 10
}

move_country_with_close_family_effect = {
	$COUNTRY$ = { save_scope_as = move_country_with_close_family_employer }
	save_scope_as = move_country_with_close_family_character
	hidden_effect = {
		remove_all_positions = yes
		move_country = $COUNTRY$
		remove_character_modifier = foreign_citizen
		if = {
			limit = {
				exists = spouse
				spouse = { 
					is_ruler = no
					prisoner = no
					employer = PREV.employer
				}
			}
			spouse = {
				remove_all_positions = yes
				move_country = $COUNTRY$
				remove_character_modifier = foreign_citizen
				set_as_minor_character = this
			}
		}
		if = {
			limit = { num_of_children >= 1 }
			every_child = {
				limit = {
					is_ruler = no
					prisoner = no
					employer = PREV.employer
				}
				remove_all_positions = yes
				move_country = $COUNTRY$
				remove_character_modifier = foreign_citizen
			}
		}
	}
	custom_tooltip = move_country_with_close_family_effect_tt
}

move_country_with_entire_family_effect = {
	$COUNTRY$ = { save_scope_as = move_country_with_entire_family_employer }
	save_scope_as = move_country_with_entire_family_character
	hidden_effect = {
		if = {
			limit = { is_minor_character = no }
			family = { 
				save_scope_as = move_country_with_entire_family_family
				move_family = $COUNTRY$
			}
			scope:move_country_with_entire_family_family = {
				every_family_member = {
					limit = {
						is_ruler = no
						prisoner = no
						employer = scope:move_country_with_entire_family_character.employer
					}
					move_country = $COUNTRY$	
				}
			}
		}
		remove_all_positions = yes
		move_country = $COUNTRY$
		remove_character_modifier = foreign_citizen
		set_as_minor_character = THIS
		if = {
			limit = { exists = scope:move_country_with_entire_family_family }
			set_family = scope:move_country_with_entire_family_family
		}
		if = {
			limit = {
				exists = spouse
				spouse = { 
					is_ruler = no
					prisoner = no
					employer = PREV.employer
				}
			}
			spouse = {
				remove_all_positions = yes
				move_country = $COUNTRY$
				remove_character_modifier = foreign_citizen
				set_as_minor_character = THIS
				if = {
					limit = { exists = scope:move_country_with_entire_family_family }
					set_family = scope:move_country_with_entire_family_family
				}
			}
		}
		if = {
			limit = { num_of_children >= 1 }
			every_child = {
				limit = {
					is_ruler = no
					prisoner = no
					employer = PREV.employer
				}
				remove_all_positions = yes
				move_country = $COUNTRY$
				remove_character_modifier = foreign_citizen
				set_as_minor_character = THIS
				if = {
					limit = { exists = scope:move_country_with_entire_family_family }
					set_family = scope:move_country_with_entire_family_family
				}
			}
		}
	}
	custom_tooltip = move_country_with_entire_family_effect_tt
}

mithridates_arrival_ping_effect = {
	every_country = {
 		limit = {
 			is_ai = no
 			trigger_if = {
 				limit = { exists = scope:mithridates_overlord }
 				NOT = { THIS = scope:mithridates_overlord }
 			}
 			trigger_if = {
 				limit = { exists = scope:mithridates_refuge }
 				NOT = { THIS = scope:mithridates_refuge }
 			}
 			NOT = { THIS = ROOT }
 			OR = {
 				tag = TRE
 				tag = SEL
 				tag = EGY
 				tag = MAC
 				tag = PRY
 				country_culture_group = hellenic
	 			capital_scope = {
	 				OR = {
	 					is_in_region = bithynia_region
	 					is_in_region = asia_region
	 					is_in_region = cappadocia_region
	 					is_in_region = galatia_region
	 					is_in_region = cappadocia_pontica_region
	 					is_in_region = thrace_region
	 					is_in_region = macedonia_region
	 					is_in_region = greece_region
	 					is_in_region = taurica_region
	 					is_in_region = sarmatia_europea_region
	 					is_in_region = cilicia_region
	 					is_in_region = colchis_region
	 				}
	 			}
	 		}
 		}
 		trigger_event = {
 			id = dhe_mithridates.3
 			days = 30
 		}
 	}
}

mithridates_arrival_pontus_effect = {
	every_country = {
 		limit = {
 			is_ai = no
 			trigger_if = {
 				limit = { exists = scope:mithridates_overlord }
 				NOT = { THIS = scope:mithridates_overlord }
 			}
 			trigger_if = {
 				limit = { exists = scope:mithridates_refuge }
 				NOT = { THIS = scope:mithridates_refuge }
 			}
 			NOT = { THIS = ROOT }
 			OR = {
 				tag = TRE
 				tag = SEL
 				tag = EGY
 				tag = MAC
 				tag = PRY
	 			country_culture_group = hellenic
	 			capital_scope = {
	 				OR = {
	 					is_in_region = bithynia_region
	 					is_in_region = asia_region
	 					is_in_region = cappadocia_region
	 					is_in_region = galatia_region
	 					is_in_region = cappadocia_pontica_region
	 					is_in_region = thrace_region
	 					is_in_region = macedonia_region
	 					is_in_region = greece_region
	 					is_in_region = taurica_region
	 					is_in_region = sarmatia_europea_region
	 					is_in_region = cilicia_region
	 					is_in_region = colchis_region
	 				}
	 			}
	 		}
 		}
 		trigger_event = {
 			id = dhe_mithridates.10
 			days = 30
 		}
 	}
}

remove_espionage_variables_effect = {  #cScope
	if = {
		limit = {
			exists = var:on_espionage_mission_origin
			var:on_espionage_mission_origin = {
				exists = this
			}
		}
		var:on_espionage_mission_origin = {
			remove_list_variable = {
				name = foreign_intel
				target = prev.var:on_espionage_mission_recipient
			}
		}
	}
	if = {
		limit = {
			has_variable = on_espionage_mission_origin
		}
		remove_variable = on_espionage_mission_origin
	}
	if = {
		limit = {
			has_variable = on_espionage_mission_recipient
		}
		remove_variable = on_espionage_mission_recipient
	}
	if = {
		limit = {
			has_character_modifier = on_espionage_mission_cmod
		}
		remove_character_modifier = on_espionage_mission_cmod
	} 
}

antigonid_legion_setup_effect = {
	char:38 = { remove_all_positions = yes } # Demetrios, son of Antigonos
	capital_scope.governorship = {
		raise_legion = {
			create_unit = {
				name = "Basilike Taxis"
				location = p:407 # Chalkis
				sub_unit = heavy_infantry
				save_scope_as = legion_scope
				add_subunit = heavy_infantry
				add_subunit = heavy_infantry
				add_subunit = heavy_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry
				add_subunit = heavy_cavalry
				add_subunit = heavy_cavalry
				add_subunit = warelephant
				add_subunit = archers
				add_subunit = archers
				add_subunit = supply_train
			}
			add_legion_history = { # Orkynia, battle against Eumenes
				key = orkynia_history
				commander = char:37 # Antigonos
				province = p:1788 # Tyanitis
				date = 435.7.13
			}
			add_legion_history = { # Kretopolis, battle against Perdikkan satraps
				key = kretopolis_history
				commander = char:37 # Antigonos
				province = p:1986 # Kretopolis
				date = 435.8.12
			}
			add_legion_history = { # Paraitakene, battle against Eumenes
				key = paraitakene_history
				commander = char:37 # Antigonos
				province = p:4976 # Paraitakene
				date = 437.7.7
			}
			add_legion_history = { # Gabiene, battle against Eumenes
				key = gabiene_history
				commander = char:37 # Antigonos
				province = p:4972 # Gabiene
				date = 439.2.13
			}
			add_legion_history = { # Tyros, siege against Ptolemy
				key = tyros_siege_history
				commander = char:37 # Antigonos
				province = p:743 # Tyros
				date = 441.5.24
			}
			add_legion_history = { #Gaza, battle against Ptolemy
				key = gaza_history
				commander = char:38 # Demetrios
				province = p:659 # Gaza
				date = 442.11.27
			}
			add_legion_history = { # Babylon, siege against Seleukos
				key = babylon_history
				commander = char:38 # Demetrios
				province = p:918 # Babylon
				date = 444.9.13
			}
			add_legion_history = { # Babylon, siege against Seleukos
				key = babylon_2_history
				commander = char:37 # Antigonos
				province = p:918 # Babylon
				date = 445.1.23
			}
			add_legion_history = { # 25 Abu, battle against Seleukos
				key = abu_history
				commander = char:37 # Antigonos
				province = p:962 # Chaldaea
				date = 445.8.25
			}
			add_legion_history = { # Athenai, siege against Kassandros
				key = athens_siege_history
				commander = char:38 # Demetrios
				province = p:416 # Athenai
				date = 447.9.16
			}
			add_legion_history = { # Salamis, battle against Ptolemaios
				key = salamis_history
				commander = char:38 # Demetrios
				province = p:331 # Salamis
				date = 448.5.16
			}
			add_legion_history = { # Rhodos, siege against Rhodians
				key = rhodes_siege_history
				commander = char:38 # Demetrios
				province = p:266 # Rhodos
				date = 450.7.9
			}
			add_legion_history = { # Chalkis, siege against Kassandros
				key = chalkis_siege_history
				commander = char:38 # Demetrios
				province = p:407 # Chalkis
				date = 450.9.17
			}
			char:38 = { add_to_legion = PREV } # Demetrios, son of Antigonos
			random_legion_unit = { set_as_commander = char:38 }
			if = {
				limit = { has_dlc = "Heirs of Alexander" }
				add_distinction = distinction_legio_primagena
			}
		}
	}
}

seleukid_legion_setup_effect = {
	char:26 = { remove_all_positions = yes } # Antiochos, Seleukos' son
	capital_scope.governorship = {
		raise_legion = {
			create_unit = {
				name = "Babyloniake Taxis"
				location = p:918 # Babylon
				sub_unit = heavy_infantry
				save_scope_as = legion_scope
				add_subunit = heavy_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry
				add_subunit = light_cavalry
				add_subunit = light_cavalry
				add_subunit = archers
				add_subunit = archers
				add_subunit = supply_train
			}
			add_legion_history = { #Gaza, battle against Demetrios
				key = gaza_sel_history
				commander = char:24 # Seleukos
				province = p:659 # Gaza
				date = 442.11.27
			}
			add_legion_history = { # Babylon, siege against Antigonids
				key = babylon_sel_history
				commander = char:24 # Seleukos
				province = p:918 # Babylon
				date = 443.1.15
			}
			add_legion_history = { # Tigris, battle against Antigonids
				key = tigris_sel_history
				commander = char:24 # Seleukos
				province = p:7716 # Tigris
				date = 443.7.19
			}
			add_legion_history = { # 25 Abu, battle against Antigonos
				key = abu_sel_history
				commander = char:24 # Seleukos
				province = p:962 # Khay
				date = 445.8.25
			}
			char:26 = { add_to_legion = PREV } # Antiochos, Seleukos' son
			random_legion_unit = { set_as_commander = char:26 }
			if = {
				limit = { has_dlc = "Heirs of Alexander" }
				add_distinction = distinction_legio_primagena
			}
		}
	}
}

egypt_legion_setup_effect = {
	char:46 = { remove_all_positions = yes } # Magas, Ptolemaios' son-in-law
	capital_scope.governorship = {
		raise_legion = {
			create_unit = {
				name = "Aigyptiake Taxis"
				location = p:509 # Pilousion
				sub_unit = heavy_infantry
				save_scope_as = legion_scope
				add_subunit = heavy_infantry
				add_subunit = heavy_infantry
				add_subunit = heavy_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry
				add_subunit = heavy_cavalry
				add_subunit = heavy_cavalry
				add_subunit = warelephant
				add_subunit = supply_train
			}
			add_legion_history = { # Camel Fort, battle against Perdikkas
				key = camel_fort_history
				commander = char:42 # Ptolemaios
				province = p:508 # Tanis
				date = 433.4.12
			}
			add_legion_history = { #Syria, battles against Laomedon
				key = syria_history
				commander = char:42 # Ptolemaios
				province = p:750 # Damaskos
				date = 434.5.7
			}
			add_legion_history = { #Kyrene, battles against Laomedon
				key = kyrene_history
				commander = char:42 # Ptolemaios
				province = p:3360 # Kyrene
				date = 442.7.4
			}
			add_legion_history = { #Gaza, battle against Demetrios
				key = gaza_egy_history
				commander = char:42 # Ptolemaios
				province = p:659 # Gaza
				date = 442.11.27
			}
			add_legion_history = { #Kaunos, siege against Antigonids
				key = phaselis_history
				commander = char:42 # Ptolemaios
				province = p:1989 # Kaunos
				date = 446.4.28
			}
			char:46 = { add_to_legion = PREV } # Magas, Ptolemaios' son-in-law
			random_legion_unit = { set_as_commander = char:46 }
			if = {
				limit = { has_dlc = "Heirs of Alexander" }
				add_distinction = distinction_legio_primagena
			}
		}
	}
}

macedon_legion_setup_effect = {
	char:149 = { remove_all_positions = yes } # Philippos, Kassandros' brother
	capital_scope.governorship = {
		raise_legion = {
			create_unit = {
				name = "Basilike Taxis"
				location = p:379 # Pella
				sub_unit = heavy_infantry
				save_scope_as = legion_scope
				add_subunit = heavy_infantry
				add_subunit = heavy_infantry
				add_subunit = heavy_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry
				add_subunit = light_cavalry
				add_subunit = light_cavalry
				add_subunit = heavy_cavalry
				add_subunit = heavy_cavalry
				add_subunit = supply_train

			}
			add_legion_history = { # Pydna, siege against Olympias
				key = pydna_history
				commander = char:32 # Kassandros
				province = p:6399 # Pydna
				date = 439.6.13
			}
			add_legion_history = { # Kenchreai/Korinthos, siege against Alexandros
				key = korinthos_history
				commander = char:32 # Kassandros
				province = p:418 # Korinthos
				date = 440.9.5
			}
			add_legion_history = { # Hebrus/Dimalion, battle against Glaukias
				key = hebrus_history
				commander = char:32 # Kassandros
				province = p:455 # Dimalion
				date = 441.3.14
			}
			add_legion_history = { # Oiniadai, battle against Aeacides
				key = oeniadae_history
				commander = char:149 # Philippos
				province = p:7803 # Oiniadai
				date = 441.7.31
			}
			add_legion_history = { # Apollonia, battle against Apollonia
				key = apollonia_history
				commander = char:32 # Kassandros
				province = p:422 # Apollonia
				date = 443.3.27
			}
			char:149 = { add_to_legion = PREV } # Philippos, Kassandros' brother
			random_legion_unit = { set_as_commander = char:149 }
			if = {
				limit = { has_dlc = "Heirs of Alexander" }
				add_distinction = distinction_legio_primagena
			}
		}
	}
}

thrace_legion_setup_effect = {
	char:368 = { remove_all_positions = yes } # Alkimachos, Lysimachos' nephew
	capital_scope.governorship = {
		raise_legion = {
			create_unit = {
				name = "Thrakike Taxis"
				location = p:350 # Lysimacheia
				sub_unit = heavy_infantry
				save_scope_as = legion_scope
				add_subunit = heavy_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry
				add_subunit = heavy_cavalry
				add_subunit = heavy_cavalry
				add_subunit = archers
				add_subunit = archers
				add_subunit = supply_train

			}
			add_legion_history = { # Kebakle?, battle against Seuthes
				key = kebakle_history
				commander = char:41 # Lysimachos
				province = p:496 # Bergoule
				date = 432.4.3
			}
			add_legion_history = { # Odessos, siege against Pontic cities
				key = odessos_history
				commander = char:41 # Lysimachos
				province = p:4248 # Odessos
				date = 440.9.12
			}
			add_legion_history = { # Kallatis, battle against Skythoi
				key = kallatis_history
				commander = char:41 # Lysimachos
				province = p:4254 # Kallatis
				date = 441.4.18
			}
			add_legion_history = { # Haemiana, battle against Seuthes
				key = haemiana_history
				commander = char:41 # Lysimachos
				province = p:4245 # Haemiana
				date = 441.7.5
			}
			char:368 = { add_to_legion = PREV } # Alkimachos, Lysimachos' nephew
			random_legion_unit = { set_as_commander = char:368 }
			if = {
				limit = { has_dlc = "Heirs of Alexander" }
				add_distinction = distinction_legio_primagena
			}
		}
	}
}

epirus_legion_setup_effect = {
	char:118 = { remove_all_positions = yes } # Neoptolemos, Pyrrhos' cousin
	capital_scope.governorship = {
		raise_legion = {
			create_unit = {
				name = "Molossike Taxis"
				location = p:476 # Passaron
				sub_unit = heavy_infantry
				save_scope_as = legion_scope
				add_subunit = heavy_infantry
				add_subunit = light_infantry
				add_subunit = light_infantry

			}
			add_legion_history = { # Passes, battle against Atarrhias, Kassandros' general
				key = epirote_passes_history
				commander = char:13 # Aiakides II
				province = p:446 # Oitalia
				date = 439.1.19
			}
			add_legion_history = { # Oeniadae, battle against Philippos, Kassandros' brother
				key = oeniadae_epi_history
				commander = char:13 # Aiakides II
				province = p:7803 # Oiniadai
				date = 441.5.6
			}
			add_legion_history = { # Eurymenai, battle against Lysiskos, Kassandros' governor of Akarnania
				key = eurymenai_history
				commander = char:15 # Alketas II
				province = p:425 # Dodona
				date = 443.4.15
			}
			char:118 = { add_to_legion = PREV } # Neoptolemos, Pyrrhos' cousin
			random_legion_unit = { set_as_commander = char:118 }
			if = {
				limit = { has_dlc = "Heirs of Alexander" }
				add_distinction = distinction_legio_primagena
			}
		}
	}
}

pergamon_setup_effect = {
	change_government = aristocratic_monarchy
	change_country_tag = PGM
	change_country_flag = PERGAMON_FLAG
	change_country_color = mid_grey
    set_primary_culture_cleanup_effect = {
		NEW_PRIMARY_CULTURE = aeolian
		MAKE_OLD_CULTURE_INTEGRATED = no
	}
	set_country_religion = roman_pantheon
    set_country_heritage = attalid_heritage
    change_country_name = PERGAMON_NAME
	change_country_adjective = PERGAMON_ADJECTIVE
	add_treasury = 300
	add_manpower = 8
	add_stability_effect = yes
}

galatia_phrgyia_satrapy_creation_effect = {
	hidden_effect = {
		scope:antigonids_scope = {
			if = { # Sardis
				limit = {
					any_owned_province = { province_id = 292 }
				}
				p:292 = {
					create_country = { save_scope_as = asia_satrapy }
				}
				scope:asia_satrapy = { # Name
					change_country_name = SARDIS_NAME
					change_country_adjective = SARDIS_ADJECTIVE
					change_country_color = lighter_dark_orange
					change_country_flag = SARDIS_FLAG
					set_variable = asia_satrapy
				}
			}
			else_if = { # Pergamon
				limit = {
					any_owned_province = { province_id = 278 }
				}
				p:278 = {
					create_country = { save_scope_as = asia_satrapy }
				}
				scope:asia_satrapy = { # Name
					change_country_name = PERGAMON_NAME
					change_country_adjective = PERGAMON_ADJECTIVE
					change_country_color = mid_grey
					change_country_tag = PRG
					set_variable = asia_satrapy
				}
			}
			#else = {
			#	ordered_owned_province = {
			#		limit = {
			#			is_in_region = asia_region
			#			NOR = {
			#				is_in_area = milyas_area
			#				is_in_area = aeolia_area
			#				is_in_area = inland_caria_area
			#				is_in_area = coastal_caria_area
			#			}
			#		}
			#		order_by = total_population
			#		create_country = { save_scope_as = asia_satrapy }						
			#	}
			#	scope:asia_satrapy = {
			#		change_country_color = lighter_dark_orange
			#		change_country_flag = SARDIS_FLAG
			#		set_variable = asia_satrapy
			#	}
			#}
			if = { # Phrygia
				limit = {
					NOT = { has_variable = antigonid_stubbornness }
				}
				if = {
					limit = {
						any_owned_province = { province_id = 1936 }
					}
					p:1936 = {
						create_country = {
							save_scope_as = galatia_satrapy
							change_country_name = PHRYGIA_NAME
							change_country_adjective = PHRYGIA_ADJECTIVE
							change_country_color = dark_green
							change_country_flag = PHRYGIA_SATRAPY_FLAG
							set_variable = galatia_satrapy
						}
					}
				}
				else = {
					ordered_owned_province = {
						limit = {
							OR = {
								is_in_region = galatia_region
								is_in_area = isauria_area
								is_in_area = pamphylia_area
								is_in_area = pisidia_area
							}
						}
						order_by = total_population
						create_country = {
							save_scope_as = galatia_satrapy
							change_country_name = PHRYGIA_NAME
							change_country_adjective = PHRYGIA_ADJECTIVE
							change_country_color = dark_green
							change_country_flag = PHRYGIA_SATRAPY_FLAG
							set_variable = galatia_satrapy
						}
					}
				}
			}
		}
	}
}

antigonids_release_effect = {
	hidden_effect = {
		if = {
			limit = {
				any_in_list = {
					list = $RELEASE_LIST$
					has_owner = yes
					owner = scope:antigonids_scope
				}
			}
			if = {
				limit = {
					c:$COUNTRY$ = { has_land = no }
				}
				if = {
					limit = {
						scope:antigonids_scope = {
							NOT = { owns = $CAPITAL$ }
						}
					}
					ordered_in_list = {
						list = $RELEASE_LIST$
						limit = { owner = scope:antigonids_scope }
						order_by = total_population
						create_country = {
							set_primary_culture = $CULTURE$
							set_country_religion = $RELIGION$
							change_government = $GOVERNMENT$
							add_treasury = 50.0
							change_country_tag = $COUNTRY$
			                save_scope_as = release_country
						}
					}
				}
				else = {
					p:$CAPITAL$ = { set_owned_by = c:$COUNTRY$ }
					c:$COUNTRY$ = {
						save_scope_as = release_country
						create_character = {
							female = no
							culture = $CULTURE$
							religion = $RELIGION$
							save_scope_as = released_ruler
						}
						set_as_ruler = scope:released_ruler
					}
				}
			}
			else_if = {
				limit = {
					any_in_list = {
						list = $RELEASE_LIST$
						OR = {
							AND = {
								has_owner = yes
								owner = c:$COUNTRY$
							}
							any_neighbor_province = {
								has_owner = yes
								owner = c:$COUNTRY$
							}
						}
					}
				}
				c:$COUNTRY$ = { save_scope_as = release_country }
			}
			if = {
				limit = { exists = scope:release_country }
				every_in_list = {
					list = $RELEASE_LIST$
					limit = {
						NOT = { owner = scope:release_country }
					}
					set_conquered_by = scope:release_country
				}
			}
		}
	}
}

actual_releases_effect = {
	if = {
		limit = { exists = scope:antigonids_scope }
		scope:antigonids_scope = {
			if = {
				limit = {
					NOT = { has_variable = antigonid_stubbornness }	
				}
				#PISIDIA
				p:170 = { add_to_list = termessia_list }
				p:7951 = { add_to_list = termessia_list }
				p:1949 = { add_to_list = sagalassia_list }
				p:1988 = { add_to_list = sagalassia_list }
				p:1935 = { add_to_list = sagalassia_list }
				p:1885 = { add_to_list = selgia_list }
				p:1931 = { add_to_list = selgia_list }
				p:1927 = { add_to_list = selgia_list }
				p:167 = { add_to_list = pednelissia_list }
				p:7956 = { add_to_list = pednelissia_list }
				p:7760 = { add_to_list = tymandia_list }
				p:1933 = { add_to_list = tymandia_list }
				p:1986 = { add_to_list = perimundia_list }
				p:7954 = { add_to_list = perimundia_list }
				#ISAURIA
				p:1921 = { add_to_list = ambladia_list }
				p:1922 = { add_to_list = ambladia_list }
				p:1920 = { add_to_list = oroandia_list }
				p:7961 = { add_to_list = oroandia_list }
				p:1918 = { add_to_list = homonadia_list }
				p:1919 = { add_to_list = isauria_list }
				p:1785 = { add_to_list = isauria_list }
				p:1780 = { add_to_list = isauria_list }
				p:169 = { add_to_list = larandia_list }
				p:1955 = { add_to_list = larandia_list }
				p:7964 = { add_to_list = larandia_list }
				#LYCIA
				p:1993 = { add_to_list = lycia_list }
				p:7948 = { add_to_list = lycia_list }
				p:1992 = { add_to_list = lycia_list }
				p:1995 = { add_to_list = lycia_list }
				p:1998 = { add_to_list = lycia_list }
				p:7949 = { add_to_list = lycia_list }
				p:156 = { add_to_list = lycia_list }
				p:161 = { add_to_list = lycia_list }
				p:162 = { add_to_list = lycia_list }
				#CILICIA
				p:1894 = { add_to_list = olbe_list }
				p:1890 = { add_to_list = olbe_list }
				p:1896 = { add_to_list = olbe_list }
				p:1892 = { add_to_list = olbe_list }
				p:1878 = { add_to_list = kennataia_list }
				p:1979 = { add_to_list = kennataia_list }
				p:1877 = { add_to_list = kennataia_list }
				p:1873 = { add_to_list = kennataia_list }
				p:7962 = { add_to_list = lalasia_list }
				p:1784 = { add_to_list = lalasia_list }
				p:7963 = { add_to_list = lalasia_list }
				p:1917 = { add_to_list = lalasia_list }
				p:1901 = { add_to_list = lalasia_list }
				p:1897 = { add_to_list = lalasia_list }
				#MILYAS
				p:171 = { add_to_list = isindia_list }
				p:1991 = { add_to_list = isindia_list }
				p:160 = { add_to_list = arykandia_list }
				p:159 = { add_to_list = arykandia_list }
				p:1990 = { add_to_list = oinoandia_list }
				p:7947 = { add_to_list = oinoandia_list }
				p:1960 = { add_to_list = oinoandia_list }
				p:1958 = { add_to_list = kibyratia_list }
				p:1997 = { add_to_list = kibyratia_list }
				p:1957 = { add_to_list = kibyratia_list }
				p:1961 = { add_to_list = ormelia_list }
				p:1959 = { add_to_list = ormelia_list }
				p:7971 = { add_to_list = ormelia_list }
				#PAMPHYLIA
				p:164 = { add_to_list = pamphylia_list }
				p:165 = { add_to_list = pamphylia_list }
				p:166 = { add_to_list = pamphylia_list }
				p:1911 = { add_to_list = pamphylia_list }
				p:168 = { add_to_list = pamphylia_list }
				p:1910 = { add_to_list = pamphylia_list }
				p:1905 = { add_to_list = pamphylia_list }
				p:1906 = { add_to_list = pamphylia_list }
				p:1904 = { add_to_list = pamphylia_list }
				p:7958 = { add_to_list = kotenna_list }
				p:1908 = { add_to_list = kotenna_list }
				# PISIDIA
				if = {
					limit = {
						any_owned_province = {
							OR = {
								is_in_area = pisidia_area
								province_id = 7951
								province_id = 7958
								province_id = 1908
							}
						}
					}
					antigonids_release_effect = { # Termessia
						RELEASE_LIST = termessia_list
						COUNTRY = TRM
						CAPITAL = 170
						CULTURE = pisidian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Sagalassia
						RELEASE_LIST = sagalassia_list
						COUNTRY = SSG
						CAPITAL = 1949
						CULTURE = pisidian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Selgia
						RELEASE_LIST = selgia_list
						COUNTRY = SLG
						CAPITAL = 1885
						CULTURE = pisidian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Pednelissia
						RELEASE_LIST = pednelissia_list
						COUNTRY = PDL
						CAPITAL = 167
						CULTURE = pisidian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Tymandia
						RELEASE_LIST = tymandia_list
						COUNTRY = TYM
						CAPITAL = 7760
						CULTURE = milyadian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Kotenna
						RELEASE_LIST = kotenna_list
						COUNTRY = KTN
						CAPITAL = 1921
						CULTURE = pisidian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
				}
				# ISAURIA
				if = {
					limit = {
						any_owned_province = { is_in_area = isauria_area }
					}
					antigonids_release_effect = { # Ambladia
						RELEASE_LIST = ambladia_list
						COUNTRY = ABL
						CAPITAL = 1921
						CULTURE = oroandian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Oroandia
						RELEASE_LIST = oroandia_list
						COUNTRY = ORO
						CAPITAL = 1920
						CULTURE = oroandian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Homonadia
						RELEASE_LIST = homonadia_list
						COUNTRY = HMD
						CAPITAL = 1918
						CULTURE = isaurian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Isauria
						RELEASE_LIST = isauria_list
						COUNTRY = ISU
						CAPITAL = 1919
						CULTURE = isaurian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Larandia
						RELEASE_LIST = larandia_list
						COUNTRY = LAR
						CAPITAL = 169
						CULTURE = isaurian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
				}
				# PERMINUNDIA
				if = {
					limit = {
						any_in_list = {
							list = perimundia_list
							has_owner = yes
							owner = scope:antigonids_scope
						}
					}
					hidden_effect = {
						ordered_in_list = {
							list = perimundia_list
							order_by = total_population
							create_country = {
								change_country_name = PERMINUNDIA
								change_country_adjective = PERMINUNDIA_ADJ
								change_country_color = burned_red
								set_primary_culture = pisidian
								set_country_religion = anatolian_religion
								change_government = tribal_federation
								add_treasury = 50.0
		                        save_scope_as = release_country
							}
						}
						every_in_list = {
							list = perimundia_list
							limit = {
								has_owner = yes
								owner = scope:antigonids_scope
							}
							set_conquered_by = scope:release_country
						}
					}
				}
				# MILYAS
				if = { 
					limit = {
						any_owned_province = { is_in_area = milyas_area }
					}
					antigonids_release_effect = { # Isindia
						RELEASE_LIST = isindia_list
						COUNTRY = ISI
						CAPITAL = 171
						CULTURE = milyadian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Oroandia
						RELEASE_LIST = arykandia_list
						COUNTRY = AKY
						CAPITAL = 160
						CULTURE = milyadian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Oinoandia
						RELEASE_LIST = oinoandia_list
						COUNTRY = OEO
						CAPITAL = 1990
						CULTURE = cabalian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Kibyratia
						RELEASE_LIST = kibyratia_list
						COUNTRY = KIB
						CAPITAL = 1958
						CULTURE = cabalian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Ormelia
						RELEASE_LIST = ormelia_list
						COUNTRY = OML
						CAPITAL = 1961
						CULTURE = milyadian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
				}
				# LYCIA
				if = { 
					limit = {
						any_owned_province = { is_in_area = lycia_area }
					}
					antigonids_release_effect = { # Lycia
						RELEASE_LIST = lycia_list
						COUNTRY = LYC
						CAPITAL = 1993
						CULTURE = lycian
						RELIGION = roman_pantheon
						GOVERNMENT = oligarchic_republic
					}
				}
				# CILICIA
				if = { 
					limit = {
						any_owned_province = { is_in_area = cilicia_trachea_area }
					}
					antigonids_release_effect = { # Lalasia
						RELEASE_LIST = lalasia_list
						COUNTRY = LAL
						CAPITAL = 1784
						CULTURE = lalasian
						RELIGION = anatolian_religion
						GOVERNMENT = tribal_federation
					}
					antigonids_release_effect = { # Olbe
						RELEASE_LIST = olbe_list
						COUNTRY = OBE
						CAPITAL = 1894
						CULTURE = lalasian
						RELIGION = anatolian_religion
						GOVERNMENT = theocratic_monarchy
					}
				}
				# PAMPHYLIA
				if = { 
					limit = {
						any_owned_province = {
							OR = {
								AND = {
									is_in_area = pamphylia_area
									NOR = {
										province_id = 7962
										province_id = 1784
									}
								}
								province_id = 1904
							}
						}
					}
					hidden_effect = {
						every_owned_province = {
							limit = {
								OR = {
									is_in_area = pamphylia_area
									province_id = 1904
								}
								NOR = {
									province_id = 7962
									province_id = 1784
								}
							}
							add_to_list = pamphylia_list
						}
						ordered_in_list = {
							list = pamphylia_list
							order_by = total_population
							create_country = {
								change_country_name = PPH
								change_country_adjective = PPH_ADJ
								change_country_flag = PPH
								change_country_tag = PPH
								change_country_color = ocean_blue
								set_primary_culture = pamphylian
								set_country_religion = roman_pantheon
								change_government = oligarchic_republic
								add_treasury = 50.0
		                        save_scope_as = release_country
							}
						}
						every_in_list = {
							list = pamphylia_list
							limit = {
								has_owner = yes
								owner = scope:antigonids_scope
							}
							set_conquered_by = scope:release_country
						}
					}
				}
			}
		}
	}
}

southern_release_effect = {
	hidden_effect = {
		if = {
			limit = { exists = scope:antigonids_scope }
			scope:antigonids_scope = {
				every_subject = {
					limit = {
						OR = {
							THIS = c:TRM
							THIS = c:SSG
							THIS = c:SLG
							THIS = c:PDL
							THIS = c:TYM
							THIS = c:KTN
							THIS = c:ABL
							THIS = c:ORO
							THIS = c:HMD
							THIS = c:ISU
							THIS = c:LAR
							THIS = c:ISI
							THIS = c:AKY
							THIS = c:OEO
							THIS = c:KIB
							THIS = c:OML
							THIS = c:LYC
							THIS = c:LAL
							THIS = c:OBE
						}
					}
					trigger_event = { id = diadochi_flavor.46 }
					scope:antigonids_scope = { release_subject = PREV }
				}
			}
		}
	}
}